import { FeatureContext } from './feature';
import { Diagnostics } from '../diagnostics';
import type { AtRule } from 'postcss';
export declare const diagnostics: {
    INVALID_NAMESPACE_DEF: {
        (): import("../diagnostics").DiagnosticBase;
        code: string;
        severity: import("../diagnostics").DiagnosticSeverity;
    };
    EMPTY_NAMESPACE_DEF: {
        (): import("../diagnostics").DiagnosticBase;
        code: string;
        severity: import("../diagnostics").DiagnosticSeverity;
    };
    EXTRA_DEFINITION: {
        (): import("../diagnostics").DiagnosticBase;
        code: string;
        severity: import("../diagnostics").DiagnosticSeverity;
    };
    INVALID_NAMESPACE_VALUE: {
        (): import("../diagnostics").DiagnosticBase;
        code: string;
        severity: import("../diagnostics").DiagnosticSeverity;
    };
    INVALID_NAMESPACE_REFERENCE: {
        (): import("../diagnostics").DiagnosticBase;
        code: string;
        severity: import("../diagnostics").DiagnosticSeverity;
    };
    NATIVE_OVERRIDE_DEPRECATION: {
        (): import("../diagnostics").DiagnosticBase;
        code: string;
        severity: import("../diagnostics").DiagnosticSeverity;
    };
};
export declare const hooks: import("./feature").FeatureHooks<import("./feature").NodeTypes>;
export declare function parseNamespace(node: AtRule, diag?: Diagnostics): string | undefined;
export declare function defaultProcessNamespace(namespace: string, origin: string, _source?: string): string;
export declare function setMetaNamespace(context: FeatureContext, resolveNamespace: typeof defaultProcessNamespace): void;
//# sourceMappingURL=st-namespace.d.ts.map