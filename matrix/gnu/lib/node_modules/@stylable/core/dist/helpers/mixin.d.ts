import { DiagnosticBase, Diagnostics } from '../diagnostics';
import type { MixinValue } from '../features';
import type * as postcss from 'postcss';
export declare const mixinHelperDiagnostics: {
    INVALID_NAMED_PARAMS: {
        (): DiagnosticBase;
        code: string;
        severity: import("../diagnostics").DiagnosticSeverity;
    };
    VALUE_CANNOT_BE_STRING: {
        (): DiagnosticBase;
        code: string;
        severity: import("../diagnostics").DiagnosticSeverity;
    };
};
export declare function parseStMixin(mixinNode: postcss.Declaration, strategy: (type: string) => 'named' | 'args', diagnostics?: Diagnostics, emitStrategyDiagnostics?: boolean): MixinValue[];
export declare function parseStPartialMixin(mixinNode: postcss.Declaration, strategy: (type: string) => 'named' | 'args', report?: Diagnostics, emitStrategyDiagnostics?: boolean): MixinValue[];
//# sourceMappingURL=mixin.d.ts.map