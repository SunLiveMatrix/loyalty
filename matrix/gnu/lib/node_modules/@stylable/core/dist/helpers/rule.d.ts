import { SelectorList, SelectorNode } from '@tokey/css-selector-parser';
import * as postcss from 'postcss';
export declare function isChildOfAtRule(rule: postcss.Container, atRuleName: string): boolean;
export declare function isInConditionalGroup(node: postcss.Rule | postcss.AtRule, includeRoot?: boolean): any;
export declare function createSubsetAst<T extends postcss.Root | postcss.AtRule | postcss.Rule>(root: postcss.Root | postcss.AtRule | postcss.Rule, selectorPrefix: string, mixinTarget?: T, isRoot?: boolean, getCustomSelector?: (name: string) => SelectorList | undefined, isNestedInMixin?: boolean): T;
export declare const stMixinMarker = "st-mixin-marker";
export declare const isStMixinMarker: (node: SelectorNode) => boolean;
/** @deprecated internal for transformer  */
export declare function findRule(root: postcss.Root, selector: string, test?: any): null | postcss.Declaration;
//# sourceMappingURL=rule.d.ts.map