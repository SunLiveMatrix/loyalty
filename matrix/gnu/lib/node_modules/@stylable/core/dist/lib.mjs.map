{
  "version": 3,
  "sources": ["../../../node_modules/picocolors/picocolors.browser.js", "../../../node_modules/postcss/lib/css-syntax-error.js", "../../../node_modules/postcss/lib/symbols.js", "../../../node_modules/postcss/lib/stringifier.js", "../../../node_modules/postcss/lib/stringify.js", "../../../node_modules/postcss/lib/node.js", "../../../node_modules/postcss/lib/declaration.js", "../../../node_modules/@file-services/path/browser-path.js", "../../../node_modules/postcss/node_modules/nanoid/non-secure/index.cjs", "../../../node_modules/postcss/lib/previous-map.js", "../../../node_modules/postcss/lib/input.js", "../../../node_modules/postcss/lib/map-generator.js", "../../../node_modules/postcss/lib/comment.js", "../../../node_modules/postcss/lib/container.js", "../../../node_modules/postcss/lib/document.js", "../../../node_modules/postcss/lib/warn-once.js", "../../../node_modules/postcss/lib/warning.js", "../../../node_modules/postcss/lib/result.js", "../../../node_modules/postcss/lib/tokenize.js", "../../../node_modules/postcss/lib/at-rule.js", "../../../node_modules/postcss/lib/root.js", "../../../node_modules/postcss/lib/list.js", "../../../node_modules/postcss/lib/rule.js", "../../../node_modules/postcss/lib/parser.js", "../../../node_modules/postcss/lib/parse.js", "../../../node_modules/postcss/lib/lazy-result.js", "../../../node_modules/postcss/lib/no-work-result.js", "../../../node_modules/postcss/lib/processor.js", "../../../node_modules/postcss/lib/fromJSON.js", "../../../node_modules/postcss/lib/postcss.js", "../../../node_modules/postcss-selector-parser/dist/util/unesc.js", "../../../node_modules/postcss-selector-parser/dist/util/getProp.js", "../../../node_modules/postcss-selector-parser/dist/util/ensureObject.js", "../../../node_modules/postcss-selector-parser/dist/util/stripComments.js", "../../../node_modules/postcss-selector-parser/dist/util/index.js", "../../../node_modules/postcss-selector-parser/dist/selectors/node.js", "../../../node_modules/postcss-selector-parser/dist/selectors/types.js", "../../../node_modules/postcss-selector-parser/dist/selectors/container.js", "../../../node_modules/postcss-selector-parser/dist/selectors/root.js", "../../../node_modules/postcss-selector-parser/dist/selectors/selector.js", "../../../node_modules/cssesc/cssesc.js", "../../../node_modules/postcss-selector-parser/dist/selectors/className.js", "../../../node_modules/postcss-selector-parser/dist/selectors/comment.js", "../../../node_modules/postcss-selector-parser/dist/selectors/id.js", "../../../node_modules/postcss-selector-parser/dist/selectors/namespace.js", "../../../node_modules/postcss-selector-parser/dist/selectors/tag.js", "../../../node_modules/postcss-selector-parser/dist/selectors/string.js", "../../../node_modules/postcss-selector-parser/dist/selectors/pseudo.js", "../../../node_modules/util-deprecate/browser.js", "../../../node_modules/postcss-selector-parser/dist/selectors/attribute.js", "../../../node_modules/postcss-selector-parser/dist/selectors/universal.js", "../../../node_modules/postcss-selector-parser/dist/selectors/combinator.js", "../../../node_modules/postcss-selector-parser/dist/selectors/nesting.js", "../../../node_modules/postcss-selector-parser/dist/sortAscending.js", "../../../node_modules/postcss-selector-parser/dist/tokenTypes.js", "../../../node_modules/postcss-selector-parser/dist/tokenize.js", "../../../node_modules/postcss-selector-parser/dist/parser.js", "../../../node_modules/postcss-selector-parser/dist/processor.js", "../../../node_modules/postcss-selector-parser/dist/selectors/constructors.js", "../../../node_modules/postcss-selector-parser/dist/selectors/guards.js", "../../../node_modules/postcss-selector-parser/dist/selectors/index.js", "../../../node_modules/postcss-selector-parser/dist/index.js", "../../../node_modules/postcss-nested/index.js", "../../../node_modules/camelcase-css/index-es5.js", "../../../node_modules/postcss-js/objectifier.js", "../../../node_modules/postcss-js/parser.js", "../../../node_modules/postcss-js/process-result.js", "../../../node_modules/postcss-js/async.js", "../../../node_modules/postcss-js/sync.js", "../../../node_modules/postcss-js/index.js", "../../../node_modules/postcss-safe-parser/lib/safe-parser.js", "../../../node_modules/postcss-safe-parser/lib/safe-parse.js", "../../../node_modules/@tokey/core/dist/types.js", "../../../node_modules/@tokey/core/src/core.ts", "../../../node_modules/@tokey/core/src/helpers.ts", "../../../node_modules/@tokey/core/src/seeker.ts", "../../../node_modules/@tokey/core/src/index.ts", "../../../node_modules/@tokey/css-selector-parser/src/tokenizer.ts", "../../../node_modules/@tokey/css-selector-parser/src/helpers.ts", "../../../node_modules/@tokey/css-selector-parser/src/nth-parser.ts", "../../../node_modules/@tokey/css-selector-parser/src/selector-parser.ts", "../../../node_modules/@tokey/css-selector-parser/dist/ast-types.js", "../../../node_modules/@tokey/css-selector-parser/src/stringify.ts", "../../../node_modules/@tokey/css-selector-parser/src/ast-tools/walk.ts", "../../../node_modules/@tokey/css-selector-parser/src/ast-tools/compound.ts", "../../../node_modules/@tokey/css-selector-parser/src/ast-tools/specificity.ts", "../../../node_modules/@tokey/css-selector-parser/src/index.ts", "../../../node_modules/lodash.clonedeep/index.js", "../../../node_modules/@tokey/imports-parser/src/imports-parser.ts", "../../../node_modules/postcss-value-parser/lib/parse.js", "../../../node_modules/postcss-value-parser/lib/walk.js", "../../../node_modules/postcss-value-parser/lib/stringify.js", "../../../node_modules/postcss-value-parser/lib/unit.js", "../../../node_modules/postcss-value-parser/lib/index.js", "../../../node_modules/lodash.clonedeepwith/index.js", "../../../node_modules/fastparse/lib/Parser.js", "../../../node_modules/css-selector-tokenizer/lib/uni-regexp.js", "../../../node_modules/css-selector-tokenizer/lib/parse.js", "../../../node_modules/css-selector-tokenizer/lib/stringify.js", "../../../node_modules/css-selector-tokenizer/lib/parseValues.js", "../../../node_modules/css-selector-tokenizer/lib/stringifyValues.js", "../../../node_modules/css-selector-tokenizer/lib/index.js", "../../../node_modules/@tokey/css-value-parser/src/ast-types.ts", "../../../node_modules/@tokey/css-value-parser/src/units.ts", "../../../node_modules/@tokey/css-value-parser/src/tokenizer.ts", "../../../node_modules/@tokey/css-value-parser/src/value-stringify.ts", "../../../node_modules/@tokey/css-value-parser/src/value-parser.ts", "../../../node_modules/@tokey/css-value-parser/src/define-property.ts", "../../../node_modules/@tokey/css-value-parser/src/properties/background.ts", "../../../node_modules/@tokey/css-value-parser/src/properties/margin.ts", "../../../node_modules/@tokey/css-value-parser/src/value-syntax-parser.ts", "../../../node_modules/@tokey/css-value-parser/src/index.ts", "../../../node_modules/vendor-prefixes/index.js", "../../../node_modules/is-vendor-prefixed/index.js", "../src/module-with-extensions.ts", "../src/cached-process-file.ts", "../../../node_modules/postcss/lib/postcss.mjs", "../src/parser.ts", "../../../node_modules/postcss-js/index.mjs", "../src/diagnostics.ts", "../src/native-reserved-lists.ts", "../src/stylable-utils.ts", "../src/helpers/selector.ts", "../src/helpers/rule.ts", "../src/helpers/custom-selector.ts", "../src/features/st-symbol.ts", "../src/features/feature.ts", "../src/helpers/plugable-record.ts", "../src/features/st-import.ts", "../src/features/diagnostics.ts", "../src/helpers/import.ts", "../src/helpers/string.ts", "../src/helpers/css-custom-property.ts", "../src/features/st-namespace.ts", "../src/murmurhash.ts", "../src/features/st-global.ts", "../src/features/st-scope.ts", "../src/features/st-var.ts", "../src/custom-values.ts", "../src/helpers/value.ts", "../src/stylable-resolver.ts", "../src/functions.ts", "../src/stylable-assets.ts", "../src/process-declaration-functions.ts", "../src/helpers/escape.ts", "../src/features/st-custom-selector.ts", "../src/features/st-custom-state.ts", "../src/helpers/custom-state.ts", "../src/helpers/css-value-seeker.ts", "../src/features/st-mixin.ts", "../src/helpers/mixin.ts", "../src/features/css-class.ts", "../src/helpers/resolve.ts", "../src/helpers/namespace.ts", "../src/features/css-type.ts", "../src/features/css-pseudo-class.ts", "../src/features/css-custom-property.ts", "../src/helpers/global.ts", "../src/features/css-keyframes.ts", "../src/features/css-layer.ts", "../src/features/css-contains.ts", "../src/features/css-media.ts", "../src/features/st-structure.ts", "../src/helpers/deprecation.ts", "../src/stylable-meta.ts", "../src/stylable-processor.ts", "../src/create-stylable-processor.ts", "../src/stylable-transformer.ts", "../src/helpers/eql.ts", "../src/deprecated/postcss-ast-extension.ts", "../src/enhanced-resolve-alias.ts", "../src/module-resolver.ts", "../src/visit-meta-css-dependencies.ts", "../src/stylable.ts", "../src/resolve-namespace-factories.ts", "../src/stylable-js-module-source.ts"],
  "sourcesContent": ["var x=String;\nvar create=function() {return {isColorSupported:false,reset:x,bold:x,dim:x,italic:x,underline:x,inverse:x,hidden:x,strikethrough:x,black:x,red:x,green:x,yellow:x,blue:x,magenta:x,cyan:x,white:x,gray:x,bgBlack:x,bgRed:x,bgGreen:x,bgYellow:x,bgBlue:x,bgMagenta:x,bgCyan:x,bgWhite:x}};\nmodule.exports=create();\nmodule.exports.createColors = create;\n", "'use strict'\n\nlet pico = require('picocolors')\n\nlet terminalHighlight = require('./terminal-highlight')\n\nclass CssSyntaxError extends Error {\n  constructor(message, line, column, source, file, plugin) {\n    super(message)\n    this.name = 'CssSyntaxError'\n    this.reason = message\n\n    if (file) {\n      this.file = file\n    }\n    if (source) {\n      this.source = source\n    }\n    if (plugin) {\n      this.plugin = plugin\n    }\n    if (typeof line !== 'undefined' && typeof column !== 'undefined') {\n      if (typeof line === 'number') {\n        this.line = line\n        this.column = column\n      } else {\n        this.line = line.line\n        this.column = line.column\n        this.endLine = column.line\n        this.endColumn = column.column\n      }\n    }\n\n    this.setMessage()\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, CssSyntaxError)\n    }\n  }\n\n  setMessage() {\n    this.message = this.plugin ? this.plugin + ': ' : ''\n    this.message += this.file ? this.file : '<css input>'\n    if (typeof this.line !== 'undefined') {\n      this.message += ':' + this.line + ':' + this.column\n    }\n    this.message += ': ' + this.reason\n  }\n\n  showSourceCode(color) {\n    if (!this.source) return ''\n\n    let css = this.source\n    if (color == null) color = pico.isColorSupported\n    if (terminalHighlight) {\n      if (color) css = terminalHighlight(css)\n    }\n\n    let lines = css.split(/\\r?\\n/)\n    let start = Math.max(this.line - 3, 0)\n    let end = Math.min(this.line + 2, lines.length)\n\n    let maxWidth = String(end).length\n\n    let mark, aside\n    if (color) {\n      let { bold, gray, red } = pico.createColors(true)\n      mark = text => bold(red(text))\n      aside = text => gray(text)\n    } else {\n      mark = aside = str => str\n    }\n\n    return lines\n      .slice(start, end)\n      .map((line, index) => {\n        let number = start + 1 + index\n        let gutter = ' ' + (' ' + number).slice(-maxWidth) + ' | '\n        if (number === this.line) {\n          let spacing =\n            aside(gutter.replace(/\\d/g, ' ')) +\n            line.slice(0, this.column - 1).replace(/[^\\t]/g, ' ')\n          return mark('>') + aside(gutter) + line + '\\n ' + spacing + mark('^')\n        }\n        return ' ' + aside(gutter) + line\n      })\n      .join('\\n')\n  }\n\n  toString() {\n    let code = this.showSourceCode()\n    if (code) {\n      code = '\\n\\n' + code + '\\n'\n    }\n    return this.name + ': ' + this.message + code\n  }\n}\n\nmodule.exports = CssSyntaxError\nCssSyntaxError.default = CssSyntaxError\n", "'use strict'\n\nmodule.exports.isClean = Symbol('isClean')\n\nmodule.exports.my = Symbol('my')\n", "'use strict'\n\nconst DEFAULT_RAW = {\n  after: '\\n',\n  beforeClose: '\\n',\n  beforeComment: '\\n',\n  beforeDecl: '\\n',\n  beforeOpen: ' ',\n  beforeRule: '\\n',\n  colon: ': ',\n  commentLeft: ' ',\n  commentRight: ' ',\n  emptyBody: '',\n  indent: '    ',\n  semicolon: false\n}\n\nfunction capitalize(str) {\n  return str[0].toUpperCase() + str.slice(1)\n}\n\nclass Stringifier {\n  constructor(builder) {\n    this.builder = builder\n  }\n\n  atrule(node, semicolon) {\n    let name = '@' + node.name\n    let params = node.params ? this.rawValue(node, 'params') : ''\n\n    if (typeof node.raws.afterName !== 'undefined') {\n      name += node.raws.afterName\n    } else if (params) {\n      name += ' '\n    }\n\n    if (node.nodes) {\n      this.block(node, name + params)\n    } else {\n      let end = (node.raws.between || '') + (semicolon ? ';' : '')\n      this.builder(name + params + end, node)\n    }\n  }\n\n  beforeAfter(node, detect) {\n    let value\n    if (node.type === 'decl') {\n      value = this.raw(node, null, 'beforeDecl')\n    } else if (node.type === 'comment') {\n      value = this.raw(node, null, 'beforeComment')\n    } else if (detect === 'before') {\n      value = this.raw(node, null, 'beforeRule')\n    } else {\n      value = this.raw(node, null, 'beforeClose')\n    }\n\n    let buf = node.parent\n    let depth = 0\n    while (buf && buf.type !== 'root') {\n      depth += 1\n      buf = buf.parent\n    }\n\n    if (value.includes('\\n')) {\n      let indent = this.raw(node, null, 'indent')\n      if (indent.length) {\n        for (let step = 0; step < depth; step++) value += indent\n      }\n    }\n\n    return value\n  }\n\n  block(node, start) {\n    let between = this.raw(node, 'between', 'beforeOpen')\n    this.builder(start + between + '{', node, 'start')\n\n    let after\n    if (node.nodes && node.nodes.length) {\n      this.body(node)\n      after = this.raw(node, 'after')\n    } else {\n      after = this.raw(node, 'after', 'emptyBody')\n    }\n\n    if (after) this.builder(after)\n    this.builder('}', node, 'end')\n  }\n\n  body(node) {\n    let last = node.nodes.length - 1\n    while (last > 0) {\n      if (node.nodes[last].type !== 'comment') break\n      last -= 1\n    }\n\n    let semicolon = this.raw(node, 'semicolon')\n    for (let i = 0; i < node.nodes.length; i++) {\n      let child = node.nodes[i]\n      let before = this.raw(child, 'before')\n      if (before) this.builder(before)\n      this.stringify(child, last !== i || semicolon)\n    }\n  }\n\n  comment(node) {\n    let left = this.raw(node, 'left', 'commentLeft')\n    let right = this.raw(node, 'right', 'commentRight')\n    this.builder('/*' + left + node.text + right + '*/', node)\n  }\n\n  decl(node, semicolon) {\n    let between = this.raw(node, 'between', 'colon')\n    let string = node.prop + between + this.rawValue(node, 'value')\n\n    if (node.important) {\n      string += node.raws.important || ' !important'\n    }\n\n    if (semicolon) string += ';'\n    this.builder(string, node)\n  }\n\n  document(node) {\n    this.body(node)\n  }\n\n  raw(node, own, detect) {\n    let value\n    if (!detect) detect = own\n\n    // Already had\n    if (own) {\n      value = node.raws[own]\n      if (typeof value !== 'undefined') return value\n    }\n\n    let parent = node.parent\n\n    if (detect === 'before') {\n      // Hack for first rule in CSS\n      if (!parent || (parent.type === 'root' && parent.first === node)) {\n        return ''\n      }\n\n      // `root` nodes in `document` should use only their own raws\n      if (parent && parent.type === 'document') {\n        return ''\n      }\n    }\n\n    // Floating child without parent\n    if (!parent) return DEFAULT_RAW[detect]\n\n    // Detect style by other nodes\n    let root = node.root()\n    if (!root.rawCache) root.rawCache = {}\n    if (typeof root.rawCache[detect] !== 'undefined') {\n      return root.rawCache[detect]\n    }\n\n    if (detect === 'before' || detect === 'after') {\n      return this.beforeAfter(node, detect)\n    } else {\n      let method = 'raw' + capitalize(detect)\n      if (this[method]) {\n        value = this[method](root, node)\n      } else {\n        root.walk(i => {\n          value = i.raws[own]\n          if (typeof value !== 'undefined') return false\n        })\n      }\n    }\n\n    if (typeof value === 'undefined') value = DEFAULT_RAW[detect]\n\n    root.rawCache[detect] = value\n    return value\n  }\n\n  rawBeforeClose(root) {\n    let value\n    root.walk(i => {\n      if (i.nodes && i.nodes.length > 0) {\n        if (typeof i.raws.after !== 'undefined') {\n          value = i.raws.after\n          if (value.includes('\\n')) {\n            value = value.replace(/[^\\n]+$/, '')\n          }\n          return false\n        }\n      }\n    })\n    if (value) value = value.replace(/\\S/g, '')\n    return value\n  }\n\n  rawBeforeComment(root, node) {\n    let value\n    root.walkComments(i => {\n      if (typeof i.raws.before !== 'undefined') {\n        value = i.raws.before\n        if (value.includes('\\n')) {\n          value = value.replace(/[^\\n]+$/, '')\n        }\n        return false\n      }\n    })\n    if (typeof value === 'undefined') {\n      value = this.raw(node, null, 'beforeDecl')\n    } else if (value) {\n      value = value.replace(/\\S/g, '')\n    }\n    return value\n  }\n\n  rawBeforeDecl(root, node) {\n    let value\n    root.walkDecls(i => {\n      if (typeof i.raws.before !== 'undefined') {\n        value = i.raws.before\n        if (value.includes('\\n')) {\n          value = value.replace(/[^\\n]+$/, '')\n        }\n        return false\n      }\n    })\n    if (typeof value === 'undefined') {\n      value = this.raw(node, null, 'beforeRule')\n    } else if (value) {\n      value = value.replace(/\\S/g, '')\n    }\n    return value\n  }\n\n  rawBeforeOpen(root) {\n    let value\n    root.walk(i => {\n      if (i.type !== 'decl') {\n        value = i.raws.between\n        if (typeof value !== 'undefined') return false\n      }\n    })\n    return value\n  }\n\n  rawBeforeRule(root) {\n    let value\n    root.walk(i => {\n      if (i.nodes && (i.parent !== root || root.first !== i)) {\n        if (typeof i.raws.before !== 'undefined') {\n          value = i.raws.before\n          if (value.includes('\\n')) {\n            value = value.replace(/[^\\n]+$/, '')\n          }\n          return false\n        }\n      }\n    })\n    if (value) value = value.replace(/\\S/g, '')\n    return value\n  }\n\n  rawColon(root) {\n    let value\n    root.walkDecls(i => {\n      if (typeof i.raws.between !== 'undefined') {\n        value = i.raws.between.replace(/[^\\s:]/g, '')\n        return false\n      }\n    })\n    return value\n  }\n\n  rawEmptyBody(root) {\n    let value\n    root.walk(i => {\n      if (i.nodes && i.nodes.length === 0) {\n        value = i.raws.after\n        if (typeof value !== 'undefined') return false\n      }\n    })\n    return value\n  }\n\n  rawIndent(root) {\n    if (root.raws.indent) return root.raws.indent\n    let value\n    root.walk(i => {\n      let p = i.parent\n      if (p && p !== root && p.parent && p.parent === root) {\n        if (typeof i.raws.before !== 'undefined') {\n          let parts = i.raws.before.split('\\n')\n          value = parts[parts.length - 1]\n          value = value.replace(/\\S/g, '')\n          return false\n        }\n      }\n    })\n    return value\n  }\n\n  rawSemicolon(root) {\n    let value\n    root.walk(i => {\n      if (i.nodes && i.nodes.length && i.last.type === 'decl') {\n        value = i.raws.semicolon\n        if (typeof value !== 'undefined') return false\n      }\n    })\n    return value\n  }\n\n  rawValue(node, prop) {\n    let value = node[prop]\n    let raw = node.raws[prop]\n    if (raw && raw.value === value) {\n      return raw.raw\n    }\n\n    return value\n  }\n\n  root(node) {\n    this.body(node)\n    if (node.raws.after) this.builder(node.raws.after)\n  }\n\n  rule(node) {\n    this.block(node, this.rawValue(node, 'selector'))\n    if (node.raws.ownSemicolon) {\n      this.builder(node.raws.ownSemicolon, node, 'end')\n    }\n  }\n\n  stringify(node, semicolon) {\n    /* c8 ignore start */\n    if (!this[node.type]) {\n      throw new Error(\n        'Unknown AST node type ' +\n          node.type +\n          '. ' +\n          'Maybe you need to change PostCSS stringifier.'\n      )\n    }\n    /* c8 ignore stop */\n    this[node.type](node, semicolon)\n  }\n}\n\nmodule.exports = Stringifier\nStringifier.default = Stringifier\n", "'use strict'\n\nlet Stringifier = require('./stringifier')\n\nfunction stringify(node, builder) {\n  let str = new Stringifier(builder)\n  str.stringify(node)\n}\n\nmodule.exports = stringify\nstringify.default = stringify\n", "'use strict'\n\nlet { isClean, my } = require('./symbols')\nlet CssSyntaxError = require('./css-syntax-error')\nlet Stringifier = require('./stringifier')\nlet stringify = require('./stringify')\n\nfunction cloneNode(obj, parent) {\n  let cloned = new obj.constructor()\n\n  for (let i in obj) {\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) {\n      /* c8 ignore next 2 */\n      continue\n    }\n    if (i === 'proxyCache') continue\n    let value = obj[i]\n    let type = typeof value\n\n    if (i === 'parent' && type === 'object') {\n      if (parent) cloned[i] = parent\n    } else if (i === 'source') {\n      cloned[i] = value\n    } else if (Array.isArray(value)) {\n      cloned[i] = value.map(j => cloneNode(j, cloned))\n    } else {\n      if (type === 'object' && value !== null) value = cloneNode(value)\n      cloned[i] = value\n    }\n  }\n\n  return cloned\n}\n\nclass Node {\n  constructor(defaults = {}) {\n    this.raws = {}\n    this[isClean] = false\n    this[my] = true\n\n    for (let name in defaults) {\n      if (name === 'nodes') {\n        this.nodes = []\n        for (let node of defaults[name]) {\n          if (typeof node.clone === 'function') {\n            this.append(node.clone())\n          } else {\n            this.append(node)\n          }\n        }\n      } else {\n        this[name] = defaults[name]\n      }\n    }\n  }\n\n  addToError(error) {\n    error.postcssNode = this\n    if (error.stack && this.source && /\\n\\s{4}at /.test(error.stack)) {\n      let s = this.source\n      error.stack = error.stack.replace(\n        /\\n\\s{4}at /,\n        `$&${s.input.from}:${s.start.line}:${s.start.column}$&`\n      )\n    }\n    return error\n  }\n\n  after(add) {\n    this.parent.insertAfter(this, add)\n    return this\n  }\n\n  assign(overrides = {}) {\n    for (let name in overrides) {\n      this[name] = overrides[name]\n    }\n    return this\n  }\n\n  before(add) {\n    this.parent.insertBefore(this, add)\n    return this\n  }\n\n  cleanRaws(keepBetween) {\n    delete this.raws.before\n    delete this.raws.after\n    if (!keepBetween) delete this.raws.between\n  }\n\n  clone(overrides = {}) {\n    let cloned = cloneNode(this)\n    for (let name in overrides) {\n      cloned[name] = overrides[name]\n    }\n    return cloned\n  }\n\n  cloneAfter(overrides = {}) {\n    let cloned = this.clone(overrides)\n    this.parent.insertAfter(this, cloned)\n    return cloned\n  }\n\n  cloneBefore(overrides = {}) {\n    let cloned = this.clone(overrides)\n    this.parent.insertBefore(this, cloned)\n    return cloned\n  }\n\n  error(message, opts = {}) {\n    if (this.source) {\n      let { end, start } = this.rangeBy(opts)\n      return this.source.input.error(\n        message,\n        { column: start.column, line: start.line },\n        { column: end.column, line: end.line },\n        opts\n      )\n    }\n    return new CssSyntaxError(message)\n  }\n\n  getProxyProcessor() {\n    return {\n      get(node, prop) {\n        if (prop === 'proxyOf') {\n          return node\n        } else if (prop === 'root') {\n          return () => node.root().toProxy()\n        } else {\n          return node[prop]\n        }\n      },\n\n      set(node, prop, value) {\n        if (node[prop] === value) return true\n        node[prop] = value\n        if (\n          prop === 'prop' ||\n          prop === 'value' ||\n          prop === 'name' ||\n          prop === 'params' ||\n          prop === 'important' ||\n          /* c8 ignore next */\n          prop === 'text'\n        ) {\n          node.markDirty()\n        }\n        return true\n      }\n    }\n  }\n\n  markDirty() {\n    if (this[isClean]) {\n      this[isClean] = false\n      let next = this\n      while ((next = next.parent)) {\n        next[isClean] = false\n      }\n    }\n  }\n\n  next() {\n    if (!this.parent) return undefined\n    let index = this.parent.index(this)\n    return this.parent.nodes[index + 1]\n  }\n\n  positionBy(opts, stringRepresentation) {\n    let pos = this.source.start\n    if (opts.index) {\n      pos = this.positionInside(opts.index, stringRepresentation)\n    } else if (opts.word) {\n      stringRepresentation = this.toString()\n      let index = stringRepresentation.indexOf(opts.word)\n      if (index !== -1) pos = this.positionInside(index, stringRepresentation)\n    }\n    return pos\n  }\n\n  positionInside(index, stringRepresentation) {\n    let string = stringRepresentation || this.toString()\n    let column = this.source.start.column\n    let line = this.source.start.line\n\n    for (let i = 0; i < index; i++) {\n      if (string[i] === '\\n') {\n        column = 1\n        line += 1\n      } else {\n        column += 1\n      }\n    }\n\n    return { column, line }\n  }\n\n  prev() {\n    if (!this.parent) return undefined\n    let index = this.parent.index(this)\n    return this.parent.nodes[index - 1]\n  }\n\n  rangeBy(opts) {\n    let start = {\n      column: this.source.start.column,\n      line: this.source.start.line\n    }\n    let end = this.source.end\n      ? {\n        column: this.source.end.column + 1,\n        line: this.source.end.line\n      }\n      : {\n        column: start.column + 1,\n        line: start.line\n      }\n\n    if (opts.word) {\n      let stringRepresentation = this.toString()\n      let index = stringRepresentation.indexOf(opts.word)\n      if (index !== -1) {\n        start = this.positionInside(index, stringRepresentation)\n        end = this.positionInside(index + opts.word.length, stringRepresentation)\n      }\n    } else {\n      if (opts.start) {\n        start = {\n          column: opts.start.column,\n          line: opts.start.line\n        }\n      } else if (opts.index) {\n        start = this.positionInside(opts.index)\n      }\n\n      if (opts.end) {\n        end = {\n          column: opts.end.column,\n          line: opts.end.line\n        }\n      } else if (opts.endIndex) {\n        end = this.positionInside(opts.endIndex)\n      } else if (opts.index) {\n        end = this.positionInside(opts.index + 1)\n      }\n    }\n\n    if (\n      end.line < start.line ||\n      (end.line === start.line && end.column <= start.column)\n    ) {\n      end = { column: start.column + 1, line: start.line }\n    }\n\n    return { end, start }\n  }\n\n  raw(prop, defaultType) {\n    let str = new Stringifier()\n    return str.raw(this, prop, defaultType)\n  }\n\n  remove() {\n    if (this.parent) {\n      this.parent.removeChild(this)\n    }\n    this.parent = undefined\n    return this\n  }\n\n  replaceWith(...nodes) {\n    if (this.parent) {\n      let bookmark = this\n      let foundSelf = false\n      for (let node of nodes) {\n        if (node === this) {\n          foundSelf = true\n        } else if (foundSelf) {\n          this.parent.insertAfter(bookmark, node)\n          bookmark = node\n        } else {\n          this.parent.insertBefore(bookmark, node)\n        }\n      }\n\n      if (!foundSelf) {\n        this.remove()\n      }\n    }\n\n    return this\n  }\n\n  root() {\n    let result = this\n    while (result.parent && result.parent.type !== 'document') {\n      result = result.parent\n    }\n    return result\n  }\n\n  toJSON(_, inputs) {\n    let fixed = {}\n    let emitInputs = inputs == null\n    inputs = inputs || new Map()\n    let inputsNextIndex = 0\n\n    for (let name in this) {\n      if (!Object.prototype.hasOwnProperty.call(this, name)) {\n        /* c8 ignore next 2 */\n        continue\n      }\n      if (name === 'parent' || name === 'proxyCache') continue\n      let value = this[name]\n\n      if (Array.isArray(value)) {\n        fixed[name] = value.map(i => {\n          if (typeof i === 'object' && i.toJSON) {\n            return i.toJSON(null, inputs)\n          } else {\n            return i\n          }\n        })\n      } else if (typeof value === 'object' && value.toJSON) {\n        fixed[name] = value.toJSON(null, inputs)\n      } else if (name === 'source') {\n        let inputId = inputs.get(value.input)\n        if (inputId == null) {\n          inputId = inputsNextIndex\n          inputs.set(value.input, inputsNextIndex)\n          inputsNextIndex++\n        }\n        fixed[name] = {\n          end: value.end,\n          inputId,\n          start: value.start\n        }\n      } else {\n        fixed[name] = value\n      }\n    }\n\n    if (emitInputs) {\n      fixed.inputs = [...inputs.keys()].map(input => input.toJSON())\n    }\n\n    return fixed\n  }\n\n  toProxy() {\n    if (!this.proxyCache) {\n      this.proxyCache = new Proxy(this, this.getProxyProcessor())\n    }\n    return this.proxyCache\n  }\n\n  toString(stringifier = stringify) {\n    if (stringifier.stringify) stringifier = stringifier.stringify\n    let result = ''\n    stringifier(this, i => {\n      result += i\n    })\n    return result\n  }\n\n  warn(result, text, opts) {\n    let data = { node: this }\n    for (let i in opts) data[i] = opts[i]\n    return result.warn(text, data)\n  }\n\n  get proxyOf() {\n    return this\n  }\n}\n\nmodule.exports = Node\nNode.default = Node\n", "'use strict'\n\nlet Node = require('./node')\n\nclass Declaration extends Node {\n  constructor(defaults) {\n    if (\n      defaults &&\n      typeof defaults.value !== 'undefined' &&\n      typeof defaults.value !== 'string'\n    ) {\n      defaults = { ...defaults, value: String(defaults.value) }\n    }\n    super(defaults)\n    this.type = 'decl'\n  }\n\n  get variable() {\n    return this.prop.startsWith('--') || this.prop[0] === '$'\n  }\n}\n\nmodule.exports = Declaration\nDeclaration.default = Declaration\n", "const CHAR_UPPERCASE_A = 65; /* A */\nconst CHAR_LOWERCASE_A = 97; /* a */\nconst CHAR_UPPERCASE_Z = 90; /* Z */\nconst CHAR_LOWERCASE_Z = 122; /* z */\nconst CHAR_DOT = 46; /* . */\nconst CHAR_FORWARD_SLASH = 47; /* / */\nconst CHAR_BACKWARD_SLASH = 92; /* \\ */\nconst CHAR_COLON = 58; /* : */\nconst CHAR_QUESTION_MARK = 63; /* ? */\n\nconst _process = {\n  cwd: function () {\n    return '/';\n  },\n  env: {},\n};\n\nfunction valueType(value) {\n  const valueType = typeof value;\n  return valueType === 'object' && value === null ? 'null' : valueType;\n}\n\nfunction validateString(value, paramName) {\n  if (typeof value !== 'string') {\n    throw new TypeError(\n      `[ERR_INVALID_ARG_TYPE]: The \"${paramName}\" argument must be of type string. Received ${valueType(value)}`\n    );\n  }\n}\n\nfunction isPathSeparator(code) {\n  return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n}\n\nfunction isPosixPathSeparator(code) {\n  return code === CHAR_FORWARD_SLASH;\n}\n\nfunction isWindowsDeviceRoot(code) {\n  return (\n    (code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z) || (code >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z)\n  );\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeString(path, allowAboveRoot, separator, isPathSeparator) {\n  let res = '';\n  let lastSegmentLength = 0;\n  let lastSlash = -1;\n  let dots = 0;\n  let code = 0;\n  for (let i = 0; i <= path.length; ++i) {\n    if (i < path.length) code = path.charCodeAt(i);\n    else if (isPathSeparator(code)) break;\n    else code = CHAR_FORWARD_SLASH;\n\n    if (isPathSeparator(code)) {\n      if (lastSlash === i - 1 || dots === 1) {\n        // NOOP\n      } else if (dots === 2) {\n        if (\n          res.length < 2 ||\n          lastSegmentLength !== 2 ||\n          res.charCodeAt(res.length - 1) !== CHAR_DOT ||\n          res.charCodeAt(res.length - 2) !== CHAR_DOT\n        ) {\n          if (res.length > 2) {\n            const lastSlashIndex = res.lastIndexOf(separator);\n            if (lastSlashIndex === -1) {\n              res = '';\n              lastSegmentLength = 0;\n            } else {\n              res = res.slice(0, lastSlashIndex);\n              lastSegmentLength = res.length - 1 - res.lastIndexOf(separator);\n            }\n            lastSlash = i;\n            dots = 0;\n            continue;\n          } else if (res.length !== 0) {\n            res = '';\n            lastSegmentLength = 0;\n            lastSlash = i;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          res += res.length > 0 ? `${separator}..` : '..';\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0) res += `${separator}${path.slice(lastSlash + 1, i)}`;\n        else res = path.slice(lastSlash + 1, i);\n        lastSegmentLength = i - lastSlash - 1;\n      }\n      lastSlash = i;\n      dots = 0;\n    } else if (code === CHAR_DOT && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n  return res;\n}\n\nfunction _format(sep, pathObject) {\n  if (pathObject === null || typeof pathObject !== 'object') {\n    throw new TypeError(\n      `[ERR_INVALID_ARG_TYPE]: The \"pathObject\" argument must be of type object. Received ${valueType(pathObject)}`\n    );\n  }\n  const dir = pathObject.dir || pathObject.root;\n  const base = pathObject.base || `${pathObject.name || ''}${pathObject.ext || ''}`;\n  if (!dir) {\n    return base;\n  }\n  return dir === pathObject.root ? `${dir}${base}` : `${dir}${sep}${base}`;\n}\n\nconst win32 = {\n  // path.resolve([from ...], to)\n  resolve(...args) {\n    let resolvedDevice = '';\n    let resolvedTail = '';\n    let resolvedAbsolute = false;\n\n    for (let i = args.length - 1; i >= -1; i--) {\n      let path;\n      if (i >= 0) {\n        path = args[i];\n        validateString(path, 'path');\n\n        // Skip empty entries\n        if (path.length === 0) {\n          continue;\n        }\n      } else if (resolvedDevice.length === 0) {\n        path = _process.cwd();\n      } else {\n        // Windows has the concept of drive-specific current working\n        // directories. If we've resolved a drive letter but not yet an\n        // absolute path, get cwd for that drive, or the process cwd if\n        // the drive cwd is not available. We're sure the device is not\n        // a UNC path at this points, because UNC paths are always absolute.\n        path = _process.env[`=${resolvedDevice}`] || _process.cwd();\n\n        // Verify that a cwd was found and that it actually points\n        // to our drive. If not, default to the drive's root.\n        if (\n          path === undefined ||\n          (path.slice(0, 2).toLowerCase() !== resolvedDevice.toLowerCase() &&\n            path.charCodeAt(2) === CHAR_BACKWARD_SLASH)\n        ) {\n          path = `${resolvedDevice}\\\\`;\n        }\n      }\n\n      const len = path.length;\n      let rootEnd = 0;\n      let device = '';\n      let isAbsolute = false;\n      const code = path.charCodeAt(0);\n\n      // Try to match a root\n      if (len === 1) {\n        if (isPathSeparator(code)) {\n          // `path` contains just a path separator\n          rootEnd = 1;\n          isAbsolute = true;\n        }\n      } else if (isPathSeparator(code)) {\n        // Possible UNC root\n\n        // If we started with a separator, we know we at least have an\n        // absolute path of some kind (UNC or otherwise)\n        isAbsolute = true;\n\n        if (isPathSeparator(path.charCodeAt(1))) {\n          // Matched double path separator at beginning\n          let j = 2;\n          let last = j;\n          // Match 1 or more non-path separators\n          while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n            j++;\n          }\n          if (j < len && j !== last) {\n            const firstPart = path.slice(last, j);\n            // Matched!\n            last = j;\n            // Match 1 or more path separators\n            while (j < len && isPathSeparator(path.charCodeAt(j))) {\n              j++;\n            }\n            if (j < len && j !== last) {\n              // Matched!\n              last = j;\n              // Match 1 or more non-path separators\n              while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                j++;\n              }\n              if (j === len || j !== last) {\n                // We matched a UNC root\n                device = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n                rootEnd = j;\n              }\n            }\n          }\n        } else {\n          rootEnd = 1;\n        }\n      } else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n        // Possible device root\n        device = path.slice(0, 2);\n        rootEnd = 2;\n        if (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n          // Treat separator following drive name as an absolute path\n          // indicator\n          isAbsolute = true;\n          rootEnd = 3;\n        }\n      }\n\n      if (device.length > 0) {\n        if (resolvedDevice.length > 0) {\n          if (device.toLowerCase() !== resolvedDevice.toLowerCase())\n            // This path points to another device so it is not applicable\n            continue;\n        } else {\n          resolvedDevice = device;\n        }\n      }\n\n      if (resolvedAbsolute) {\n        if (resolvedDevice.length > 0) break;\n      } else {\n        resolvedTail = `${path.slice(rootEnd)}\\\\${resolvedTail}`;\n        resolvedAbsolute = isAbsolute;\n        if (isAbsolute && resolvedDevice.length > 0) {\n          break;\n        }\n      }\n    }\n\n    // At this point the path should be resolved to a full absolute path,\n    // but handle relative paths to be safe (might happen when process.cwd()\n    // fails)\n\n    // Normalize the tail path\n    resolvedTail = normalizeString(resolvedTail, !resolvedAbsolute, '\\\\', isPathSeparator);\n\n    return resolvedAbsolute ? `${resolvedDevice}\\\\${resolvedTail}` : `${resolvedDevice}${resolvedTail}` || '.';\n  },\n\n  normalize(path) {\n    validateString(path, 'path');\n    const len = path.length;\n    if (len === 0) return '.';\n    let rootEnd = 0;\n    let device;\n    let isAbsolute = false;\n    const code = path.charCodeAt(0);\n\n    // Try to match a root\n    if (len === 1) {\n      // `path` contains just a single char, exit early to avoid\n      // unnecessary work\n      return isPosixPathSeparator(code) ? '\\\\' : path;\n    }\n    if (isPathSeparator(code)) {\n      // Possible UNC root\n\n      // If we started with a separator, we know we at least have an absolute\n      // path of some kind (UNC or otherwise)\n      isAbsolute = true;\n\n      if (isPathSeparator(path.charCodeAt(1))) {\n        // Matched double path separator at beginning\n        let j = 2;\n        let last = j;\n        // Match 1 or more non-path separators\n        while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n          j++;\n        }\n        if (j < len && j !== last) {\n          const firstPart = path.slice(last, j);\n          // Matched!\n          last = j;\n          // Match 1 or more path separators\n          while (j < len && isPathSeparator(path.charCodeAt(j))) {\n            j++;\n          }\n          if (j < len && j !== last) {\n            // Matched!\n            last = j;\n            // Match 1 or more non-path separators\n            while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n              j++;\n            }\n            if (j === len) {\n              // We matched a UNC root only\n              // Return the normalized version of the UNC root since there\n              // is nothing left to process\n              return `\\\\\\\\${firstPart}\\\\${path.slice(last)}\\\\`;\n            }\n            if (j !== last) {\n              // We matched a UNC root with leftovers\n              device = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n              rootEnd = j;\n            }\n          }\n        }\n      } else {\n        rootEnd = 1;\n      }\n    } else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n      // Possible device root\n      device = path.slice(0, 2);\n      rootEnd = 2;\n      if (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n        // Treat separator following drive name as an absolute path\n        // indicator\n        isAbsolute = true;\n        rootEnd = 3;\n      }\n    }\n\n    let tail = rootEnd < len ? normalizeString(path.slice(rootEnd), !isAbsolute, '\\\\', isPathSeparator) : '';\n    if (tail.length === 0 && !isAbsolute) tail = '.';\n    if (tail.length > 0 && isPathSeparator(path.charCodeAt(len - 1))) tail += '\\\\';\n    if (device === undefined) {\n      return isAbsolute ? `\\\\${tail}` : tail;\n    }\n    return isAbsolute ? `${device}\\\\${tail}` : `${device}${tail}`;\n  },\n\n  isAbsolute(path) {\n    validateString(path, 'path');\n    const len = path.length;\n    if (len === 0) return false;\n\n    const code = path.charCodeAt(0);\n    return (\n      isPathSeparator(code) ||\n      // Possible device root\n      (len > 2 && isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON && isPathSeparator(path.charCodeAt(2)))\n    );\n  },\n\n  join(...args) {\n    if (args.length === 0) return '.';\n\n    let joined;\n    let firstPart;\n    for (let i = 0; i < args.length; ++i) {\n      const arg = args[i];\n      validateString(arg, 'path');\n      if (arg.length > 0) {\n        if (joined === undefined) joined = firstPart = arg;\n        else joined += `\\\\${arg}`;\n      }\n    }\n\n    if (joined === undefined) return '.';\n\n    // Make sure that the joined path doesn't start with two slashes, because\n    // normalize() will mistake it for an UNC path then.\n    //\n    // This step is skipped when it is very clear that the user actually\n    // intended to point at an UNC path. This is assumed when the first\n    // non-empty string arguments starts with exactly two slashes followed by\n    // at least one more non-slash character.\n    //\n    // Note that for normalize() to treat a path as an UNC path it needs to\n    // have at least 2 components, so we don't filter for that here.\n    // This means that the user can use join to construct UNC paths from\n    // a server name and a share name; for example:\n    //   path.join('//server', 'share') -> '\\\\\\\\server\\\\share\\\\')\n    let needsReplace = true;\n    let slashCount = 0;\n    if (isPathSeparator(firstPart.charCodeAt(0))) {\n      ++slashCount;\n      const firstLen = firstPart.length;\n      if (firstLen > 1 && isPathSeparator(firstPart.charCodeAt(1))) {\n        ++slashCount;\n        if (firstLen > 2) {\n          if (isPathSeparator(firstPart.charCodeAt(2))) ++slashCount;\n          else {\n            // We matched a UNC path in the first part\n            needsReplace = false;\n          }\n        }\n      }\n    }\n    if (needsReplace) {\n      // Find any more consecutive slashes we need to replace\n      while (slashCount < joined.length && isPathSeparator(joined.charCodeAt(slashCount))) {\n        slashCount++;\n      }\n\n      // Replace the slashes if needed\n      if (slashCount >= 2) joined = `\\\\${joined.slice(slashCount)}`;\n    }\n\n    return win32.normalize(joined);\n  },\n\n  // It will solve the relative path from `from` to `to`, for instance:\n  //  from = 'C:\\\\orandea\\\\test\\\\aaa'\n  //  to = 'C:\\\\orandea\\\\impl\\\\bbb'\n  // The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\n  relative(from, to) {\n    validateString(from, 'from');\n    validateString(to, 'to');\n\n    if (from === to) return '';\n\n    const fromOrig = win32.resolve(from);\n    const toOrig = win32.resolve(to);\n\n    if (fromOrig === toOrig) return '';\n\n    from = fromOrig.toLowerCase();\n    to = toOrig.toLowerCase();\n\n    if (from === to) return '';\n\n    // Trim any leading backslashes\n    let fromStart = 0;\n    while (fromStart < from.length && from.charCodeAt(fromStart) === CHAR_BACKWARD_SLASH) {\n      fromStart++;\n    }\n    // Trim trailing backslashes (applicable to UNC paths only)\n    let fromEnd = from.length;\n    while (fromEnd - 1 > fromStart && from.charCodeAt(fromEnd - 1) === CHAR_BACKWARD_SLASH) {\n      fromEnd--;\n    }\n    const fromLen = fromEnd - fromStart;\n\n    // Trim any leading backslashes\n    let toStart = 0;\n    while (toStart < to.length && to.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n      toStart++;\n    }\n    // Trim trailing backslashes (applicable to UNC paths only)\n    let toEnd = to.length;\n    while (toEnd - 1 > toStart && to.charCodeAt(toEnd - 1) === CHAR_BACKWARD_SLASH) {\n      toEnd--;\n    }\n    const toLen = toEnd - toStart;\n\n    // Compare paths to find the longest common path from root\n    const length = fromLen < toLen ? fromLen : toLen;\n    let lastCommonSep = -1;\n    let i = 0;\n    for (; i < length; i++) {\n      const fromCode = from.charCodeAt(fromStart + i);\n      if (fromCode !== to.charCodeAt(toStart + i)) break;\n      else if (fromCode === CHAR_BACKWARD_SLASH) lastCommonSep = i;\n    }\n\n    // We found a mismatch before the first common path separator was seen, so\n    // return the original `to`.\n    if (i !== length) {\n      if (lastCommonSep === -1) return toOrig;\n    } else {\n      if (toLen > length) {\n        if (to.charCodeAt(toStart + i) === CHAR_BACKWARD_SLASH) {\n          // We get here if `from` is the exact base path for `to`.\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\n          return toOrig.slice(toStart + i + 1);\n        }\n        if (i === 2) {\n          // We get here if `from` is the device root.\n          // For example: from='C:\\\\'; to='C:\\\\foo'\n          return toOrig.slice(toStart + i);\n        }\n      }\n      if (fromLen > length) {\n        if (from.charCodeAt(fromStart + i) === CHAR_BACKWARD_SLASH) {\n          // We get here if `to` is the exact base path for `from`.\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\n          lastCommonSep = i;\n        } else if (i === 2) {\n          // We get here if `to` is the device root.\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\n          lastCommonSep = 3;\n        }\n      }\n      if (lastCommonSep === -1) lastCommonSep = 0;\n    }\n\n    let out = '';\n    // Generate the relative path based on the path difference between `to` and\n    // `from`\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd || from.charCodeAt(i) === CHAR_BACKWARD_SLASH) {\n        out += out.length === 0 ? '..' : '\\\\..';\n      }\n    }\n\n    toStart += lastCommonSep;\n\n    // Lastly, append the rest of the destination (`to`) path that comes after\n    // the common path parts\n    if (out.length > 0) return `${out}${toOrig.slice(toStart, toEnd)}`;\n\n    if (toOrig.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) ++toStart;\n    return toOrig.slice(toStart, toEnd);\n  },\n\n  toNamespacedPath(path) {\n    // Note: this will *probably* throw somewhere.\n    if (typeof path !== 'string') return path;\n\n    if (path.length === 0) {\n      return '';\n    }\n\n    const resolvedPath = win32.resolve(path);\n\n    if (resolvedPath.length <= 2) return path;\n\n    if (resolvedPath.charCodeAt(0) === CHAR_BACKWARD_SLASH) {\n      // Possible UNC root\n      if (resolvedPath.charCodeAt(1) === CHAR_BACKWARD_SLASH) {\n        const code = resolvedPath.charCodeAt(2);\n        if (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\n          // Matched non-long UNC root, convert the path to a long UNC path\n          return `\\\\\\\\?\\\\UNC\\\\${resolvedPath.slice(2)}`;\n        }\n      }\n    } else if (\n      isWindowsDeviceRoot(resolvedPath.charCodeAt(0)) &&\n      resolvedPath.charCodeAt(1) === CHAR_COLON &&\n      resolvedPath.charCodeAt(2) === CHAR_BACKWARD_SLASH\n    ) {\n      // Matched device root, convert the path to a long UNC path\n      return `\\\\\\\\?\\\\${resolvedPath}`;\n    }\n\n    return path;\n  },\n\n  dirname(path) {\n    validateString(path, 'path');\n    const len = path.length;\n    if (len === 0) return '.';\n    let rootEnd = -1;\n    let offset = 0;\n    const code = path.charCodeAt(0);\n\n    if (len === 1) {\n      // `path` contains just a path separator, exit early to avoid\n      // unnecessary work or a dot.\n      return isPathSeparator(code) ? path : '.';\n    }\n\n    // Try to match a root\n    if (isPathSeparator(code)) {\n      // Possible UNC root\n\n      rootEnd = offset = 1;\n\n      if (isPathSeparator(path.charCodeAt(1))) {\n        // Matched double path separator at beginning\n        let j = 2;\n        let last = j;\n        // Match 1 or more non-path separators\n        while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n          j++;\n        }\n        if (j < len && j !== last) {\n          // Matched!\n          last = j;\n          // Match 1 or more path separators\n          while (j < len && isPathSeparator(path.charCodeAt(j))) {\n            j++;\n          }\n          if (j < len && j !== last) {\n            // Matched!\n            last = j;\n            // Match 1 or more non-path separators\n            while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n              j++;\n            }\n            if (j === len) {\n              // We matched a UNC root only\n              return path;\n            }\n            if (j !== last) {\n              // We matched a UNC root with leftovers\n\n              // Offset by 1 to include the separator after the UNC root to\n              // treat it as a \"normal root\" on top of a (UNC) root\n              rootEnd = offset = j + 1;\n            }\n          }\n        }\n      }\n      // Possible device root\n    } else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n      rootEnd = len > 2 && isPathSeparator(path.charCodeAt(2)) ? 3 : 2;\n      offset = rootEnd;\n    }\n\n    let end = -1;\n    let matchedSlash = true;\n    for (let i = len - 1; i >= offset; --i) {\n      if (isPathSeparator(path.charCodeAt(i))) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1) {\n      if (rootEnd === -1) return '.';\n\n      end = rootEnd;\n    }\n    return path.slice(0, end);\n  },\n\n  basename(path, ext) {\n    if (ext !== undefined) validateString(ext, 'ext');\n    validateString(path, 'path');\n    let start = 0;\n    let end = -1;\n    let matchedSlash = true;\n\n    // Check for a drive letter prefix so as not to mistake the following\n    // path separator as an extra separator at the end of the path that can be\n    // disregarded\n    if (path.length >= 2 && isWindowsDeviceRoot(path.charCodeAt(0)) && path.charCodeAt(1) === CHAR_COLON) {\n      start = 2;\n    }\n\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n      if (ext === path) return '';\n      let extIdx = ext.length - 1;\n      let firstNonSlashEnd = -1;\n      for (let i = path.length - 1; i >= start; --i) {\n        const code = path.charCodeAt(i);\n        if (isPathSeparator(code)) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            start = i + 1;\n            break;\n          }\n        } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator, remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === ext.charCodeAt(extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension, so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match, so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end) end = firstNonSlashEnd;\n      else if (end === -1) end = path.length;\n      return path.slice(start, end);\n    }\n    for (let i = path.length - 1; i >= start; --i) {\n      if (isPathSeparator(path.charCodeAt(i))) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component\n        matchedSlash = false;\n        end = i + 1;\n      }\n    }\n\n    if (end === -1) return '';\n    return path.slice(start, end);\n  },\n\n  extname(path) {\n    validateString(path, 'path');\n    let start = 0;\n    let startDot = -1;\n    let startPart = 0;\n    let end = -1;\n    let matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    let preDotState = 0;\n\n    // Check for a drive letter prefix so as not to mistake the following\n    // path separator as an extra separator at the end of the path that can be\n    // disregarded\n\n    if (path.length >= 2 && path.charCodeAt(1) === CHAR_COLON && isWindowsDeviceRoot(path.charCodeAt(0))) {\n      start = startPart = 2;\n    }\n\n    for (let i = path.length - 1; i >= start; --i) {\n      const code = path.charCodeAt(i);\n      if (isPathSeparator(code)) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === CHAR_DOT) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1) startDot = i;\n        else if (preDotState !== 1) preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (\n      startDot === -1 ||\n      end === -1 ||\n      // We saw a non-dot character immediately before the dot\n      preDotState === 0 ||\n      // The (right-most) trimmed path component is exactly '..'\n      (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n    ) {\n      return '';\n    }\n    return path.slice(startDot, end);\n  },\n\n  format: _format.bind(null, '\\\\'),\n\n  parse(path) {\n    validateString(path, 'path');\n\n    const ret = { root: '', dir: '', base: '', ext: '', name: '' };\n    if (path.length === 0) return ret;\n\n    const len = path.length;\n    let rootEnd = 0;\n    let code = path.charCodeAt(0);\n\n    if (len === 1) {\n      if (isPathSeparator(code)) {\n        // `path` contains just a path separator, exit early to avoid\n        // unnecessary work\n        ret.root = ret.dir = path;\n        return ret;\n      }\n      ret.base = ret.name = path;\n      return ret;\n    }\n    // Try to match a root\n    if (isPathSeparator(code)) {\n      // Possible UNC root\n\n      rootEnd = 1;\n      if (isPathSeparator(path.charCodeAt(1))) {\n        // Matched double path separator at beginning\n        let j = 2;\n        let last = j;\n        // Match 1 or more non-path separators\n        while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n          j++;\n        }\n        if (j < len && j !== last) {\n          // Matched!\n          last = j;\n          // Match 1 or more path separators\n          while (j < len && isPathSeparator(path.charCodeAt(j))) {\n            j++;\n          }\n          if (j < len && j !== last) {\n            // Matched!\n            last = j;\n            // Match 1 or more non-path separators\n            while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n              j++;\n            }\n            if (j === len) {\n              // We matched a UNC root only\n              rootEnd = j;\n            } else if (j !== last) {\n              // We matched a UNC root with leftovers\n              rootEnd = j + 1;\n            }\n          }\n        }\n      }\n    } else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n      // Possible device root\n      if (len <= 2) {\n        // `path` contains just a drive root, exit early to avoid\n        // unnecessary work\n        ret.root = ret.dir = path;\n        return ret;\n      }\n      rootEnd = 2;\n      if (isPathSeparator(path.charCodeAt(2))) {\n        if (len === 3) {\n          // `path` contains just a drive root, exit early to avoid\n          // unnecessary work\n          ret.root = ret.dir = path;\n          return ret;\n        }\n        rootEnd = 3;\n      }\n    }\n    if (rootEnd > 0) ret.root = path.slice(0, rootEnd);\n\n    let startDot = -1;\n    let startPart = rootEnd;\n    let end = -1;\n    let matchedSlash = true;\n    let i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    let preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= rootEnd; --i) {\n      code = path.charCodeAt(i);\n      if (isPathSeparator(code)) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === CHAR_DOT) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1) startDot = i;\n        else if (preDotState !== 1) preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (end !== -1) {\n      if (\n        startDot === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n      ) {\n        ret.base = ret.name = path.slice(startPart, end);\n      } else {\n        ret.name = path.slice(startPart, startDot);\n        ret.base = path.slice(startPart, end);\n        ret.ext = path.slice(startDot, end);\n      }\n    }\n\n    // If the directory is the root, use the entire root as the `dir` including\n    // the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise, strip out the\n    // trailing slash (`C:\\abc\\def` -> `C:\\abc`).\n    if (startPart > 0 && startPart !== rootEnd) ret.dir = path.slice(0, startPart - 1);\n    else ret.dir = ret.root;\n\n    return ret;\n  },\n\n  sep: '\\\\',\n  delimiter: ';',\n  win32: null,\n  posix: null,\n};\n\nconst posix = {\n  // path.resolve([from ...], to)\n  resolve(...args) {\n    let resolvedPath = '';\n    let resolvedAbsolute = false;\n\n    for (let i = args.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n      const path = i >= 0 ? args[i] : _process.cwd();\n\n      validateString(path, 'path');\n\n      // Skip empty entries\n      if (path.length === 0) {\n        continue;\n      }\n\n      resolvedPath = `${path}/${resolvedPath}`;\n      resolvedAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n    }\n\n    // At this point the path should be resolved to a full absolute path, but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n\n    // Normalize the path\n    resolvedPath = normalizeString(resolvedPath, !resolvedAbsolute, '/', isPosixPathSeparator);\n\n    if (resolvedAbsolute) {\n      return `/${resolvedPath}`;\n    }\n    return resolvedPath.length > 0 ? resolvedPath : '.';\n  },\n\n  normalize(path) {\n    validateString(path, 'path');\n\n    if (path.length === 0) return '.';\n\n    const isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n    const trailingSeparator = path.charCodeAt(path.length - 1) === CHAR_FORWARD_SLASH;\n\n    // Normalize the path\n    path = normalizeString(path, !isAbsolute, '/', isPosixPathSeparator);\n\n    if (path.length === 0) {\n      if (isAbsolute) return '/';\n      return trailingSeparator ? './' : '.';\n    }\n    if (trailingSeparator) path += '/';\n\n    return isAbsolute ? `/${path}` : path;\n  },\n\n  isAbsolute(path) {\n    validateString(path, 'path');\n    return path.length > 0 && path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n  },\n\n  join(...args) {\n    if (args.length === 0) return '.';\n    let joined;\n    for (let i = 0; i < args.length; ++i) {\n      const arg = args[i];\n      validateString(arg, 'path');\n      if (arg.length > 0) {\n        if (joined === undefined) joined = arg;\n        else joined += `/${arg}`;\n      }\n    }\n    if (joined === undefined) return '.';\n    return posix.normalize(joined);\n  },\n\n  relative(from, to) {\n    validateString(from, 'from');\n    validateString(to, 'to');\n\n    if (from === to) return '';\n\n    // Trim leading forward slashes.\n    from = posix.resolve(from);\n    to = posix.resolve(to);\n\n    if (from === to) return '';\n\n    const fromStart = 1;\n    const fromEnd = from.length;\n    const fromLen = fromEnd - fromStart;\n    const toStart = 1;\n    const toLen = to.length - toStart;\n\n    // Compare paths to find the longest common path from root\n    const length = fromLen < toLen ? fromLen : toLen;\n    let lastCommonSep = -1;\n    let i = 0;\n    for (; i < length; i++) {\n      const fromCode = from.charCodeAt(fromStart + i);\n      if (fromCode !== to.charCodeAt(toStart + i)) break;\n      else if (fromCode === CHAR_FORWARD_SLASH) lastCommonSep = i;\n    }\n    if (i === length) {\n      if (toLen > length) {\n        if (to.charCodeAt(toStart + i) === CHAR_FORWARD_SLASH) {\n          // We get here if `from` is the exact base path for `to`.\n          // For example: from='/foo/bar'; to='/foo/bar/baz'\n          return to.slice(toStart + i + 1);\n        }\n        if (i === 0) {\n          // We get here if `from` is the root\n          // For example: from='/'; to='/foo'\n          return to.slice(toStart + i);\n        }\n      } else if (fromLen > length) {\n        if (from.charCodeAt(fromStart + i) === CHAR_FORWARD_SLASH) {\n          // We get here if `to` is the exact base path for `from`.\n          // For example: from='/foo/bar/baz'; to='/foo/bar'\n          lastCommonSep = i;\n        } else if (i === 0) {\n          // We get here if `to` is the root.\n          // For example: from='/foo/bar'; to='/'\n          lastCommonSep = 0;\n        }\n      }\n    }\n\n    let out = '';\n    // Generate the relative path based on the path difference between `to`\n    // and `from`.\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd || from.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n        out += out.length === 0 ? '..' : '/..';\n      }\n    }\n\n    // Lastly, append the rest of the destination (`to`) path that comes after\n    // the common path parts.\n    return `${out}${to.slice(toStart + lastCommonSep)}`;\n  },\n\n  toNamespacedPath(path) {\n    // Non-op on posix systems\n    return path;\n  },\n\n  dirname(path) {\n    validateString(path, 'path');\n    if (path.length === 0) return '.';\n    const hasRoot = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n    let end = -1;\n    let matchedSlash = true;\n    for (let i = path.length - 1; i >= 1; --i) {\n      if (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1) return hasRoot ? '/' : '.';\n    if (hasRoot && end === 1) return '//';\n    return path.slice(0, end);\n  },\n\n  basename(path, ext) {\n    if (ext !== undefined) validateString(ext, 'ext');\n    validateString(path, 'path');\n\n    let start = 0;\n    let end = -1;\n    let matchedSlash = true;\n\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n      if (ext === path) return '';\n      let extIdx = ext.length - 1;\n      let firstNonSlashEnd = -1;\n      for (let i = path.length - 1; i >= 0; --i) {\n        const code = path.charCodeAt(i);\n        if (code === CHAR_FORWARD_SLASH) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            start = i + 1;\n            break;\n          }\n        } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator, remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === ext.charCodeAt(extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension, so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match, so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end) end = firstNonSlashEnd;\n      else if (end === -1) end = path.length;\n      return path.slice(start, end);\n    }\n    for (let i = path.length - 1; i >= 0; --i) {\n      if (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component\n        matchedSlash = false;\n        end = i + 1;\n      }\n    }\n\n    if (end === -1) return '';\n    return path.slice(start, end);\n  },\n\n  extname(path) {\n    validateString(path, 'path');\n    let startDot = -1;\n    let startPart = 0;\n    let end = -1;\n    let matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    let preDotState = 0;\n    for (let i = path.length - 1; i >= 0; --i) {\n      const code = path.charCodeAt(i);\n      if (code === CHAR_FORWARD_SLASH) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === CHAR_DOT) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1) startDot = i;\n        else if (preDotState !== 1) preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (\n      startDot === -1 ||\n      end === -1 ||\n      // We saw a non-dot character immediately before the dot\n      preDotState === 0 ||\n      // The (right-most) trimmed path component is exactly '..'\n      (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n    ) {\n      return '';\n    }\n    return path.slice(startDot, end);\n  },\n\n  format: _format.bind(null, '/'),\n\n  parse(path) {\n    validateString(path, 'path');\n\n    const ret = { root: '', dir: '', base: '', ext: '', name: '' };\n    if (path.length === 0) return ret;\n    const isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n    let start;\n    if (isAbsolute) {\n      ret.root = '/';\n      start = 1;\n    } else {\n      start = 0;\n    }\n    let startDot = -1;\n    let startPart = 0;\n    let end = -1;\n    let matchedSlash = true;\n    let i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    let preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= start; --i) {\n      const code = path.charCodeAt(i);\n      if (code === CHAR_FORWARD_SLASH) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === CHAR_DOT) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1) startDot = i;\n        else if (preDotState !== 1) preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (end !== -1) {\n      const start = startPart === 0 && isAbsolute ? 1 : startPart;\n      if (\n        startDot === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n      ) {\n        ret.base = ret.name = path.slice(start, end);\n      } else {\n        ret.name = path.slice(start, startDot);\n        ret.base = path.slice(start, end);\n        ret.ext = path.slice(startDot, end);\n      }\n    }\n\n    if (startPart > 0) ret.dir = path.slice(0, startPart - 1);\n    else if (isAbsolute) ret.dir = '/';\n\n    return ret;\n  },\n\n  sep: '/',\n  delimiter: ':',\n  win32: null,\n  posix: null,\n};\n\nposix.win32 = win32.win32 = win32;\nposix.posix = win32.posix = posix;\n\n// Legacy internal API, docs-only deprecated: DEP0080\nwin32._makeLong = win32.toNamespacedPath;\nposix._makeLong = posix.toNamespacedPath;\n\nmodule.exports = _process.platform === 'win32' ? win32 : posix;\n", "let urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\nlet customAlphabet = (alphabet, defaultSize = 21) => {\n  return (size = defaultSize) => {\n    let id = ''\n    let i = size\n    while (i--) {\n      id += alphabet[(Math.random() * alphabet.length) | 0]\n    }\n    return id\n  }\n}\nlet nanoid = (size = 21) => {\n  let id = ''\n  let i = size\n  while (i--) {\n    id += urlAlphabet[(Math.random() * 64) | 0]\n  }\n  return id\n}\nmodule.exports = { nanoid, customAlphabet }\n", "'use strict'\n\nlet { SourceMapConsumer, SourceMapGenerator } = require('source-map-js')\nlet { existsSync, readFileSync } = require('fs')\nlet { dirname, join } = require('path')\n\nfunction fromBase64(str) {\n  if (Buffer) {\n    return Buffer.from(str, 'base64').toString()\n  } else {\n    /* c8 ignore next 2 */\n    return window.atob(str)\n  }\n}\n\nclass PreviousMap {\n  constructor(css, opts) {\n    if (opts.map === false) return\n    this.loadAnnotation(css)\n    this.inline = this.startWith(this.annotation, 'data:')\n\n    let prev = opts.map ? opts.map.prev : undefined\n    let text = this.loadMap(opts.from, prev)\n    if (!this.mapFile && opts.from) {\n      this.mapFile = opts.from\n    }\n    if (this.mapFile) this.root = dirname(this.mapFile)\n    if (text) this.text = text\n  }\n\n  consumer() {\n    if (!this.consumerCache) {\n      this.consumerCache = new SourceMapConsumer(this.text)\n    }\n    return this.consumerCache\n  }\n\n  decodeInline(text) {\n    let baseCharsetUri = /^data:application\\/json;charset=utf-?8;base64,/\n    let baseUri = /^data:application\\/json;base64,/\n    let charsetUri = /^data:application\\/json;charset=utf-?8,/\n    let uri = /^data:application\\/json,/\n\n    if (charsetUri.test(text) || uri.test(text)) {\n      return decodeURIComponent(text.substr(RegExp.lastMatch.length))\n    }\n\n    if (baseCharsetUri.test(text) || baseUri.test(text)) {\n      return fromBase64(text.substr(RegExp.lastMatch.length))\n    }\n\n    let encoding = text.match(/data:application\\/json;([^,]+),/)[1]\n    throw new Error('Unsupported source map encoding ' + encoding)\n  }\n\n  getAnnotationURL(sourceMapString) {\n    return sourceMapString.replace(/^\\/\\*\\s*# sourceMappingURL=/, '').trim()\n  }\n\n  isMap(map) {\n    if (typeof map !== 'object') return false\n    return (\n      typeof map.mappings === 'string' ||\n      typeof map._mappings === 'string' ||\n      Array.isArray(map.sections)\n    )\n  }\n\n  loadAnnotation(css) {\n    let comments = css.match(/\\/\\*\\s*# sourceMappingURL=/gm)\n    if (!comments) return\n\n    // sourceMappingURLs from comments, strings, etc.\n    let start = css.lastIndexOf(comments.pop())\n    let end = css.indexOf('*/', start)\n\n    if (start > -1 && end > -1) {\n      // Locate the last sourceMappingURL to avoid pickin\n      this.annotation = this.getAnnotationURL(css.substring(start, end))\n    }\n  }\n\n  loadFile(path) {\n    this.root = dirname(path)\n    if (existsSync(path)) {\n      this.mapFile = path\n      return readFileSync(path, 'utf-8').toString().trim()\n    }\n  }\n\n  loadMap(file, prev) {\n    if (prev === false) return false\n\n    if (prev) {\n      if (typeof prev === 'string') {\n        return prev\n      } else if (typeof prev === 'function') {\n        let prevPath = prev(file)\n        if (prevPath) {\n          let map = this.loadFile(prevPath)\n          if (!map) {\n            throw new Error(\n              'Unable to load previous source map: ' + prevPath.toString()\n            )\n          }\n          return map\n        }\n      } else if (prev instanceof SourceMapConsumer) {\n        return SourceMapGenerator.fromSourceMap(prev).toString()\n      } else if (prev instanceof SourceMapGenerator) {\n        return prev.toString()\n      } else if (this.isMap(prev)) {\n        return JSON.stringify(prev)\n      } else {\n        throw new Error(\n          'Unsupported previous source map format: ' + prev.toString()\n        )\n      }\n    } else if (this.inline) {\n      return this.decodeInline(this.annotation)\n    } else if (this.annotation) {\n      let map = this.annotation\n      if (file) map = join(dirname(file), map)\n      return this.loadFile(map)\n    }\n  }\n\n  startWith(string, start) {\n    if (!string) return false\n    return string.substr(0, start.length) === start\n  }\n\n  withContent() {\n    return !!(\n      this.consumer().sourcesContent &&\n      this.consumer().sourcesContent.length > 0\n    )\n  }\n}\n\nmodule.exports = PreviousMap\nPreviousMap.default = PreviousMap\n", "'use strict'\n\nlet { SourceMapConsumer, SourceMapGenerator } = require('source-map-js')\nlet { fileURLToPath, pathToFileURL } = require('url')\nlet { isAbsolute, resolve } = require('path')\nlet { nanoid } = require('nanoid/non-secure')\n\nlet terminalHighlight = require('./terminal-highlight')\nlet CssSyntaxError = require('./css-syntax-error')\nlet PreviousMap = require('./previous-map')\n\nlet fromOffsetCache = Symbol('fromOffsetCache')\n\nlet sourceMapAvailable = Boolean(SourceMapConsumer && SourceMapGenerator)\nlet pathAvailable = Boolean(resolve && isAbsolute)\n\nclass Input {\n  constructor(css, opts = {}) {\n    if (\n      css === null ||\n      typeof css === 'undefined' ||\n      (typeof css === 'object' && !css.toString)\n    ) {\n      throw new Error(`PostCSS received ${css} instead of CSS string`)\n    }\n\n    this.css = css.toString()\n\n    if (this.css[0] === '\\uFEFF' || this.css[0] === '\\uFFFE') {\n      this.hasBOM = true\n      this.css = this.css.slice(1)\n    } else {\n      this.hasBOM = false\n    }\n\n    if (opts.from) {\n      if (\n        !pathAvailable ||\n        /^\\w+:\\/\\//.test(opts.from) ||\n        isAbsolute(opts.from)\n      ) {\n        this.file = opts.from\n      } else {\n        this.file = resolve(opts.from)\n      }\n    }\n\n    if (pathAvailable && sourceMapAvailable) {\n      let map = new PreviousMap(this.css, opts)\n      if (map.text) {\n        this.map = map\n        let file = map.consumer().file\n        if (!this.file && file) this.file = this.mapResolve(file)\n      }\n    }\n\n    if (!this.file) {\n      this.id = '<input css ' + nanoid(6) + '>'\n    }\n    if (this.map) this.map.file = this.from\n  }\n\n  error(message, line, column, opts = {}) {\n    let result, endLine, endColumn\n\n    if (line && typeof line === 'object') {\n      let start = line\n      let end = column\n      if (typeof start.offset === 'number') {\n        let pos = this.fromOffset(start.offset)\n        line = pos.line\n        column = pos.col\n      } else {\n        line = start.line\n        column = start.column\n      }\n      if (typeof end.offset === 'number') {\n        let pos = this.fromOffset(end.offset)\n        endLine = pos.line\n        endColumn = pos.col\n      } else {\n        endLine = end.line\n        endColumn = end.column\n      }\n    } else if (!column) {\n      let pos = this.fromOffset(line)\n      line = pos.line\n      column = pos.col\n    }\n\n    let origin = this.origin(line, column, endLine, endColumn)\n    if (origin) {\n      result = new CssSyntaxError(\n        message,\n        origin.endLine === undefined\n          ? origin.line\n          : { column: origin.column, line: origin.line },\n        origin.endLine === undefined\n          ? origin.column\n          : { column: origin.endColumn, line: origin.endLine },\n        origin.source,\n        origin.file,\n        opts.plugin\n      )\n    } else {\n      result = new CssSyntaxError(\n        message,\n        endLine === undefined ? line : { column, line },\n        endLine === undefined ? column : { column: endColumn, line: endLine },\n        this.css,\n        this.file,\n        opts.plugin\n      )\n    }\n\n    result.input = { column, endColumn, endLine, line, source: this.css }\n    if (this.file) {\n      if (pathToFileURL) {\n        result.input.url = pathToFileURL(this.file).toString()\n      }\n      result.input.file = this.file\n    }\n\n    return result\n  }\n\n  fromOffset(offset) {\n    let lastLine, lineToIndex\n    if (!this[fromOffsetCache]) {\n      let lines = this.css.split('\\n')\n      lineToIndex = new Array(lines.length)\n      let prevIndex = 0\n\n      for (let i = 0, l = lines.length; i < l; i++) {\n        lineToIndex[i] = prevIndex\n        prevIndex += lines[i].length + 1\n      }\n\n      this[fromOffsetCache] = lineToIndex\n    } else {\n      lineToIndex = this[fromOffsetCache]\n    }\n    lastLine = lineToIndex[lineToIndex.length - 1]\n\n    let min = 0\n    if (offset >= lastLine) {\n      min = lineToIndex.length - 1\n    } else {\n      let max = lineToIndex.length - 2\n      let mid\n      while (min < max) {\n        mid = min + ((max - min) >> 1)\n        if (offset < lineToIndex[mid]) {\n          max = mid - 1\n        } else if (offset >= lineToIndex[mid + 1]) {\n          min = mid + 1\n        } else {\n          min = mid\n          break\n        }\n      }\n    }\n    return {\n      col: offset - lineToIndex[min] + 1,\n      line: min + 1\n    }\n  }\n\n  mapResolve(file) {\n    if (/^\\w+:\\/\\//.test(file)) {\n      return file\n    }\n    return resolve(this.map.consumer().sourceRoot || this.map.root || '.', file)\n  }\n\n  origin(line, column, endLine, endColumn) {\n    if (!this.map) return false\n    let consumer = this.map.consumer()\n\n    let from = consumer.originalPositionFor({ column, line })\n    if (!from.source) return false\n\n    let to\n    if (typeof endLine === 'number') {\n      to = consumer.originalPositionFor({ column: endColumn, line: endLine })\n    }\n\n    let fromUrl\n\n    if (isAbsolute(from.source)) {\n      fromUrl = pathToFileURL(from.source)\n    } else {\n      fromUrl = new URL(\n        from.source,\n        this.map.consumer().sourceRoot || pathToFileURL(this.map.mapFile)\n      )\n    }\n\n    let result = {\n      column: from.column,\n      endColumn: to && to.column,\n      endLine: to && to.line,\n      line: from.line,\n      url: fromUrl.toString()\n    }\n\n    if (fromUrl.protocol === 'file:') {\n      if (fileURLToPath) {\n        result.file = fileURLToPath(fromUrl)\n      } else {\n        /* c8 ignore next 2 */\n        throw new Error(`file: protocol is not available in this PostCSS build`)\n      }\n    }\n\n    let source = consumer.sourceContentFor(from.source)\n    if (source) result.source = source\n\n    return result\n  }\n\n  toJSON() {\n    let json = {}\n    for (let name of ['hasBOM', 'css', 'file', 'id']) {\n      if (this[name] != null) {\n        json[name] = this[name]\n      }\n    }\n    if (this.map) {\n      json.map = { ...this.map }\n      if (json.map.consumerCache) {\n        json.map.consumerCache = undefined\n      }\n    }\n    return json\n  }\n\n  get from() {\n    return this.file || this.id\n  }\n}\n\nmodule.exports = Input\nInput.default = Input\n\nif (terminalHighlight && terminalHighlight.registerInput) {\n  terminalHighlight.registerInput(Input)\n}\n", "'use strict'\n\nlet { SourceMapConsumer, SourceMapGenerator } = require('source-map-js')\nlet { dirname, relative, resolve, sep } = require('path')\nlet { pathToFileURL } = require('url')\n\nlet Input = require('./input')\n\nlet sourceMapAvailable = Boolean(SourceMapConsumer && SourceMapGenerator)\nlet pathAvailable = Boolean(dirname && resolve && relative && sep)\n\nclass MapGenerator {\n  constructor(stringify, root, opts, cssString) {\n    this.stringify = stringify\n    this.mapOpts = opts.map || {}\n    this.root = root\n    this.opts = opts\n    this.css = cssString\n    this.usesFileUrls = !this.mapOpts.from && this.mapOpts.absolute\n\n    this.memoizedFileURLs = new Map()\n    this.memoizedPaths = new Map()\n    this.memoizedURLs = new Map()\n  }\n\n  addAnnotation() {\n    let content\n\n    if (this.isInline()) {\n      content =\n        'data:application/json;base64,' + this.toBase64(this.map.toString())\n    } else if (typeof this.mapOpts.annotation === 'string') {\n      content = this.mapOpts.annotation\n    } else if (typeof this.mapOpts.annotation === 'function') {\n      content = this.mapOpts.annotation(this.opts.to, this.root)\n    } else {\n      content = this.outputFile() + '.map'\n    }\n    let eol = '\\n'\n    if (this.css.includes('\\r\\n')) eol = '\\r\\n'\n\n    this.css += eol + '/*# sourceMappingURL=' + content + ' */'\n  }\n\n  applyPrevMaps() {\n    for (let prev of this.previous()) {\n      let from = this.toUrl(this.path(prev.file))\n      let root = prev.root || dirname(prev.file)\n      let map\n\n      if (this.mapOpts.sourcesContent === false) {\n        map = new SourceMapConsumer(prev.text)\n        if (map.sourcesContent) {\n          map.sourcesContent = map.sourcesContent.map(() => null)\n        }\n      } else {\n        map = prev.consumer()\n      }\n\n      this.map.applySourceMap(map, from, this.toUrl(this.path(root)))\n    }\n  }\n\n  clearAnnotation() {\n    if (this.mapOpts.annotation === false) return\n\n    if (this.root) {\n      let node\n      for (let i = this.root.nodes.length - 1; i >= 0; i--) {\n        node = this.root.nodes[i]\n        if (node.type !== 'comment') continue\n        if (node.text.indexOf('# sourceMappingURL=') === 0) {\n          this.root.removeChild(i)\n        }\n      }\n    } else if (this.css) {\n      this.css = this.css.replace(/(\\n)?\\/\\*#[\\S\\s]*?\\*\\/$/gm, '')\n    }\n  }\n\n  generate() {\n    this.clearAnnotation()\n    if (pathAvailable && sourceMapAvailable && this.isMap()) {\n      return this.generateMap()\n    } else {\n      let result = ''\n      this.stringify(this.root, i => {\n        result += i\n      })\n      return [result]\n    }\n  }\n\n  generateMap() {\n    if (this.root) {\n      this.generateString()\n    } else if (this.previous().length === 1) {\n      let prev = this.previous()[0].consumer()\n      prev.file = this.outputFile()\n      this.map = SourceMapGenerator.fromSourceMap(prev)\n    } else {\n      this.map = new SourceMapGenerator({ file: this.outputFile() })\n      this.map.addMapping({\n        generated: { column: 0, line: 1 },\n        original: { column: 0, line: 1 },\n        source: this.opts.from\n          ? this.toUrl(this.path(this.opts.from))\n          : '<no source>'\n      })\n    }\n\n    if (this.isSourcesContent()) this.setSourcesContent()\n    if (this.root && this.previous().length > 0) this.applyPrevMaps()\n    if (this.isAnnotation()) this.addAnnotation()\n\n    if (this.isInline()) {\n      return [this.css]\n    } else {\n      return [this.css, this.map]\n    }\n  }\n\n  generateString() {\n    this.css = ''\n    this.map = new SourceMapGenerator({ file: this.outputFile() })\n\n    let line = 1\n    let column = 1\n\n    let noSource = '<no source>'\n    let mapping = {\n      generated: { column: 0, line: 0 },\n      original: { column: 0, line: 0 },\n      source: ''\n    }\n\n    let lines, last\n    this.stringify(this.root, (str, node, type) => {\n      this.css += str\n\n      if (node && type !== 'end') {\n        mapping.generated.line = line\n        mapping.generated.column = column - 1\n        if (node.source && node.source.start) {\n          mapping.source = this.sourcePath(node)\n          mapping.original.line = node.source.start.line\n          mapping.original.column = node.source.start.column - 1\n          this.map.addMapping(mapping)\n        } else {\n          mapping.source = noSource\n          mapping.original.line = 1\n          mapping.original.column = 0\n          this.map.addMapping(mapping)\n        }\n      }\n\n      lines = str.match(/\\n/g)\n      if (lines) {\n        line += lines.length\n        last = str.lastIndexOf('\\n')\n        column = str.length - last\n      } else {\n        column += str.length\n      }\n\n      if (node && type !== 'start') {\n        let p = node.parent || { raws: {} }\n        let childless =\n          node.type === 'decl' || (node.type === 'atrule' && !node.nodes)\n        if (!childless || node !== p.last || p.raws.semicolon) {\n          if (node.source && node.source.end) {\n            mapping.source = this.sourcePath(node)\n            mapping.original.line = node.source.end.line\n            mapping.original.column = node.source.end.column - 1\n            mapping.generated.line = line\n            mapping.generated.column = column - 2\n            this.map.addMapping(mapping)\n          } else {\n            mapping.source = noSource\n            mapping.original.line = 1\n            mapping.original.column = 0\n            mapping.generated.line = line\n            mapping.generated.column = column - 1\n            this.map.addMapping(mapping)\n          }\n        }\n      }\n    })\n  }\n\n  isAnnotation() {\n    if (this.isInline()) {\n      return true\n    }\n    if (typeof this.mapOpts.annotation !== 'undefined') {\n      return this.mapOpts.annotation\n    }\n    if (this.previous().length) {\n      return this.previous().some(i => i.annotation)\n    }\n    return true\n  }\n\n  isInline() {\n    if (typeof this.mapOpts.inline !== 'undefined') {\n      return this.mapOpts.inline\n    }\n\n    let annotation = this.mapOpts.annotation\n    if (typeof annotation !== 'undefined' && annotation !== true) {\n      return false\n    }\n\n    if (this.previous().length) {\n      return this.previous().some(i => i.inline)\n    }\n    return true\n  }\n\n  isMap() {\n    if (typeof this.opts.map !== 'undefined') {\n      return !!this.opts.map\n    }\n    return this.previous().length > 0\n  }\n\n  isSourcesContent() {\n    if (typeof this.mapOpts.sourcesContent !== 'undefined') {\n      return this.mapOpts.sourcesContent\n    }\n    if (this.previous().length) {\n      return this.previous().some(i => i.withContent())\n    }\n    return true\n  }\n\n  outputFile() {\n    if (this.opts.to) {\n      return this.path(this.opts.to)\n    } else if (this.opts.from) {\n      return this.path(this.opts.from)\n    } else {\n      return 'to.css'\n    }\n  }\n\n  path(file) {\n    if (this.mapOpts.absolute) return file\n    if (file.charCodeAt(0) === 60 /* `<` */) return file\n    if (/^\\w+:\\/\\//.test(file)) return file\n    let cached = this.memoizedPaths.get(file)\n    if (cached) return cached\n\n    let from = this.opts.to ? dirname(this.opts.to) : '.'\n\n    if (typeof this.mapOpts.annotation === 'string') {\n      from = dirname(resolve(from, this.mapOpts.annotation))\n    }\n\n    let path = relative(from, file)\n    this.memoizedPaths.set(file, path)\n\n    return path\n  }\n\n  previous() {\n    if (!this.previousMaps) {\n      this.previousMaps = []\n      if (this.root) {\n        this.root.walk(node => {\n          if (node.source && node.source.input.map) {\n            let map = node.source.input.map\n            if (!this.previousMaps.includes(map)) {\n              this.previousMaps.push(map)\n            }\n          }\n        })\n      } else {\n        let input = new Input(this.css, this.opts)\n        if (input.map) this.previousMaps.push(input.map)\n      }\n    }\n\n    return this.previousMaps\n  }\n\n  setSourcesContent() {\n    let already = {}\n    if (this.root) {\n      this.root.walk(node => {\n        if (node.source) {\n          let from = node.source.input.from\n          if (from && !already[from]) {\n            already[from] = true\n            let fromUrl = this.usesFileUrls\n              ? this.toFileUrl(from)\n              : this.toUrl(this.path(from))\n            this.map.setSourceContent(fromUrl, node.source.input.css)\n          }\n        }\n      })\n    } else if (this.css) {\n      let from = this.opts.from\n        ? this.toUrl(this.path(this.opts.from))\n        : '<no source>'\n      this.map.setSourceContent(from, this.css)\n    }\n  }\n\n  sourcePath(node) {\n    if (this.mapOpts.from) {\n      return this.toUrl(this.mapOpts.from)\n    } else if (this.usesFileUrls) {\n      return this.toFileUrl(node.source.input.from)\n    } else {\n      return this.toUrl(this.path(node.source.input.from))\n    }\n  }\n\n  toBase64(str) {\n    if (Buffer) {\n      return Buffer.from(str).toString('base64')\n    } else {\n      return window.btoa(unescape(encodeURIComponent(str)))\n    }\n  }\n\n  toFileUrl(path) {\n    let cached = this.memoizedFileURLs.get(path)\n    if (cached) return cached\n\n    if (pathToFileURL) {\n      let fileURL = pathToFileURL(path).toString()\n      this.memoizedFileURLs.set(path, fileURL)\n\n      return fileURL\n    } else {\n      throw new Error(\n        '`map.absolute` option is not available in this PostCSS build'\n      )\n    }\n  }\n\n  toUrl(path) {\n    let cached = this.memoizedURLs.get(path)\n    if (cached) return cached\n\n    if (sep === '\\\\') {\n      path = path.replace(/\\\\/g, '/')\n    }\n\n    let url = encodeURI(path).replace(/[#?]/g, encodeURIComponent)\n    this.memoizedURLs.set(path, url)\n\n    return url\n  }\n}\n\nmodule.exports = MapGenerator\n", "'use strict'\n\nlet Node = require('./node')\n\nclass Comment extends Node {\n  constructor(defaults) {\n    super(defaults)\n    this.type = 'comment'\n  }\n}\n\nmodule.exports = Comment\nComment.default = Comment\n", "'use strict'\n\nlet { isClean, my } = require('./symbols')\nlet Declaration = require('./declaration')\nlet Comment = require('./comment')\nlet Node = require('./node')\n\nlet parse, Rule, AtRule, Root\n\nfunction cleanSource(nodes) {\n  return nodes.map(i => {\n    if (i.nodes) i.nodes = cleanSource(i.nodes)\n    delete i.source\n    return i\n  })\n}\n\nfunction markDirtyUp(node) {\n  node[isClean] = false\n  if (node.proxyOf.nodes) {\n    for (let i of node.proxyOf.nodes) {\n      markDirtyUp(i)\n    }\n  }\n}\n\nclass Container extends Node {\n  append(...children) {\n    for (let child of children) {\n      let nodes = this.normalize(child, this.last)\n      for (let node of nodes) this.proxyOf.nodes.push(node)\n    }\n\n    this.markDirty()\n\n    return this\n  }\n\n  cleanRaws(keepBetween) {\n    super.cleanRaws(keepBetween)\n    if (this.nodes) {\n      for (let node of this.nodes) node.cleanRaws(keepBetween)\n    }\n  }\n\n  each(callback) {\n    if (!this.proxyOf.nodes) return undefined\n    let iterator = this.getIterator()\n\n    let index, result\n    while (this.indexes[iterator] < this.proxyOf.nodes.length) {\n      index = this.indexes[iterator]\n      result = callback(this.proxyOf.nodes[index], index)\n      if (result === false) break\n\n      this.indexes[iterator] += 1\n    }\n\n    delete this.indexes[iterator]\n    return result\n  }\n\n  every(condition) {\n    return this.nodes.every(condition)\n  }\n\n  getIterator() {\n    if (!this.lastEach) this.lastEach = 0\n    if (!this.indexes) this.indexes = {}\n\n    this.lastEach += 1\n    let iterator = this.lastEach\n    this.indexes[iterator] = 0\n\n    return iterator\n  }\n\n  getProxyProcessor() {\n    return {\n      get(node, prop) {\n        if (prop === 'proxyOf') {\n          return node\n        } else if (!node[prop]) {\n          return node[prop]\n        } else if (\n          prop === 'each' ||\n          (typeof prop === 'string' && prop.startsWith('walk'))\n        ) {\n          return (...args) => {\n            return node[prop](\n              ...args.map(i => {\n                if (typeof i === 'function') {\n                  return (child, index) => i(child.toProxy(), index)\n                } else {\n                  return i\n                }\n              })\n            )\n          }\n        } else if (prop === 'every' || prop === 'some') {\n          return cb => {\n            return node[prop]((child, ...other) =>\n              cb(child.toProxy(), ...other)\n            )\n          }\n        } else if (prop === 'root') {\n          return () => node.root().toProxy()\n        } else if (prop === 'nodes') {\n          return node.nodes.map(i => i.toProxy())\n        } else if (prop === 'first' || prop === 'last') {\n          return node[prop].toProxy()\n        } else {\n          return node[prop]\n        }\n      },\n\n      set(node, prop, value) {\n        if (node[prop] === value) return true\n        node[prop] = value\n        if (prop === 'name' || prop === 'params' || prop === 'selector') {\n          node.markDirty()\n        }\n        return true\n      }\n    }\n  }\n\n  index(child) {\n    if (typeof child === 'number') return child\n    if (child.proxyOf) child = child.proxyOf\n    return this.proxyOf.nodes.indexOf(child)\n  }\n\n  insertAfter(exist, add) {\n    let existIndex = this.index(exist)\n    let nodes = this.normalize(add, this.proxyOf.nodes[existIndex]).reverse()\n    existIndex = this.index(exist)\n    for (let node of nodes) this.proxyOf.nodes.splice(existIndex + 1, 0, node)\n\n    let index\n    for (let id in this.indexes) {\n      index = this.indexes[id]\n      if (existIndex < index) {\n        this.indexes[id] = index + nodes.length\n      }\n    }\n\n    this.markDirty()\n\n    return this\n  }\n\n  insertBefore(exist, add) {\n    let existIndex = this.index(exist)\n    let type = existIndex === 0 ? 'prepend' : false\n    let nodes = this.normalize(add, this.proxyOf.nodes[existIndex], type).reverse()\n    existIndex = this.index(exist)\n    for (let node of nodes) this.proxyOf.nodes.splice(existIndex, 0, node)\n\n    let index\n    for (let id in this.indexes) {\n      index = this.indexes[id]\n      if (existIndex <= index) {\n        this.indexes[id] = index + nodes.length\n      }\n    }\n\n    this.markDirty()\n\n    return this\n  }\n\n  normalize(nodes, sample) {\n    if (typeof nodes === 'string') {\n      nodes = cleanSource(parse(nodes).nodes)\n    } else if (Array.isArray(nodes)) {\n      nodes = nodes.slice(0)\n      for (let i of nodes) {\n        if (i.parent) i.parent.removeChild(i, 'ignore')\n      }\n    } else if (nodes.type === 'root' && this.type !== 'document') {\n      nodes = nodes.nodes.slice(0)\n      for (let i of nodes) {\n        if (i.parent) i.parent.removeChild(i, 'ignore')\n      }\n    } else if (nodes.type) {\n      nodes = [nodes]\n    } else if (nodes.prop) {\n      if (typeof nodes.value === 'undefined') {\n        throw new Error('Value field is missed in node creation')\n      } else if (typeof nodes.value !== 'string') {\n        nodes.value = String(nodes.value)\n      }\n      nodes = [new Declaration(nodes)]\n    } else if (nodes.selector) {\n      nodes = [new Rule(nodes)]\n    } else if (nodes.name) {\n      nodes = [new AtRule(nodes)]\n    } else if (nodes.text) {\n      nodes = [new Comment(nodes)]\n    } else {\n      throw new Error('Unknown node type in node creation')\n    }\n\n    let processed = nodes.map(i => {\n      /* c8 ignore next */\n      if (!i[my]) Container.rebuild(i)\n      i = i.proxyOf\n      if (i.parent) i.parent.removeChild(i)\n      if (i[isClean]) markDirtyUp(i)\n      if (typeof i.raws.before === 'undefined') {\n        if (sample && typeof sample.raws.before !== 'undefined') {\n          i.raws.before = sample.raws.before.replace(/\\S/g, '')\n        }\n      }\n      i.parent = this.proxyOf\n      return i\n    })\n\n    return processed\n  }\n\n  prepend(...children) {\n    children = children.reverse()\n    for (let child of children) {\n      let nodes = this.normalize(child, this.first, 'prepend').reverse()\n      for (let node of nodes) this.proxyOf.nodes.unshift(node)\n      for (let id in this.indexes) {\n        this.indexes[id] = this.indexes[id] + nodes.length\n      }\n    }\n\n    this.markDirty()\n\n    return this\n  }\n\n  push(child) {\n    child.parent = this\n    this.proxyOf.nodes.push(child)\n    return this\n  }\n\n  removeAll() {\n    for (let node of this.proxyOf.nodes) node.parent = undefined\n    this.proxyOf.nodes = []\n\n    this.markDirty()\n\n    return this\n  }\n\n  removeChild(child) {\n    child = this.index(child)\n    this.proxyOf.nodes[child].parent = undefined\n    this.proxyOf.nodes.splice(child, 1)\n\n    let index\n    for (let id in this.indexes) {\n      index = this.indexes[id]\n      if (index >= child) {\n        this.indexes[id] = index - 1\n      }\n    }\n\n    this.markDirty()\n\n    return this\n  }\n\n  replaceValues(pattern, opts, callback) {\n    if (!callback) {\n      callback = opts\n      opts = {}\n    }\n\n    this.walkDecls(decl => {\n      if (opts.props && !opts.props.includes(decl.prop)) return\n      if (opts.fast && !decl.value.includes(opts.fast)) return\n\n      decl.value = decl.value.replace(pattern, callback)\n    })\n\n    this.markDirty()\n\n    return this\n  }\n\n  some(condition) {\n    return this.nodes.some(condition)\n  }\n\n  walk(callback) {\n    return this.each((child, i) => {\n      let result\n      try {\n        result = callback(child, i)\n      } catch (e) {\n        throw child.addToError(e)\n      }\n      if (result !== false && child.walk) {\n        result = child.walk(callback)\n      }\n\n      return result\n    })\n  }\n\n  walkAtRules(name, callback) {\n    if (!callback) {\n      callback = name\n      return this.walk((child, i) => {\n        if (child.type === 'atrule') {\n          return callback(child, i)\n        }\n      })\n    }\n    if (name instanceof RegExp) {\n      return this.walk((child, i) => {\n        if (child.type === 'atrule' && name.test(child.name)) {\n          return callback(child, i)\n        }\n      })\n    }\n    return this.walk((child, i) => {\n      if (child.type === 'atrule' && child.name === name) {\n        return callback(child, i)\n      }\n    })\n  }\n\n  walkComments(callback) {\n    return this.walk((child, i) => {\n      if (child.type === 'comment') {\n        return callback(child, i)\n      }\n    })\n  }\n\n  walkDecls(prop, callback) {\n    if (!callback) {\n      callback = prop\n      return this.walk((child, i) => {\n        if (child.type === 'decl') {\n          return callback(child, i)\n        }\n      })\n    }\n    if (prop instanceof RegExp) {\n      return this.walk((child, i) => {\n        if (child.type === 'decl' && prop.test(child.prop)) {\n          return callback(child, i)\n        }\n      })\n    }\n    return this.walk((child, i) => {\n      if (child.type === 'decl' && child.prop === prop) {\n        return callback(child, i)\n      }\n    })\n  }\n\n  walkRules(selector, callback) {\n    if (!callback) {\n      callback = selector\n\n      return this.walk((child, i) => {\n        if (child.type === 'rule') {\n          return callback(child, i)\n        }\n      })\n    }\n    if (selector instanceof RegExp) {\n      return this.walk((child, i) => {\n        if (child.type === 'rule' && selector.test(child.selector)) {\n          return callback(child, i)\n        }\n      })\n    }\n    return this.walk((child, i) => {\n      if (child.type === 'rule' && child.selector === selector) {\n        return callback(child, i)\n      }\n    })\n  }\n\n  get first() {\n    if (!this.proxyOf.nodes) return undefined\n    return this.proxyOf.nodes[0]\n  }\n\n  get last() {\n    if (!this.proxyOf.nodes) return undefined\n    return this.proxyOf.nodes[this.proxyOf.nodes.length - 1]\n  }\n}\n\nContainer.registerParse = dependant => {\n  parse = dependant\n}\n\nContainer.registerRule = dependant => {\n  Rule = dependant\n}\n\nContainer.registerAtRule = dependant => {\n  AtRule = dependant\n}\n\nContainer.registerRoot = dependant => {\n  Root = dependant\n}\n\nmodule.exports = Container\nContainer.default = Container\n\n/* c8 ignore start */\nContainer.rebuild = node => {\n  if (node.type === 'atrule') {\n    Object.setPrototypeOf(node, AtRule.prototype)\n  } else if (node.type === 'rule') {\n    Object.setPrototypeOf(node, Rule.prototype)\n  } else if (node.type === 'decl') {\n    Object.setPrototypeOf(node, Declaration.prototype)\n  } else if (node.type === 'comment') {\n    Object.setPrototypeOf(node, Comment.prototype)\n  } else if (node.type === 'root') {\n    Object.setPrototypeOf(node, Root.prototype)\n  }\n\n  node[my] = true\n\n  if (node.nodes) {\n    node.nodes.forEach(child => {\n      Container.rebuild(child)\n    })\n  }\n}\n/* c8 ignore stop */\n", "'use strict'\n\nlet Container = require('./container')\n\nlet LazyResult, Processor\n\nclass Document extends Container {\n  constructor(defaults) {\n    // type needs to be passed to super, otherwise child roots won't be normalized correctly\n    super({ type: 'document', ...defaults })\n\n    if (!this.nodes) {\n      this.nodes = []\n    }\n  }\n\n  toResult(opts = {}) {\n    let lazy = new LazyResult(new Processor(), this, opts)\n\n    return lazy.stringify()\n  }\n}\n\nDocument.registerLazyResult = dependant => {\n  LazyResult = dependant\n}\n\nDocument.registerProcessor = dependant => {\n  Processor = dependant\n}\n\nmodule.exports = Document\nDocument.default = Document\n", "/* eslint-disable no-console */\n'use strict'\n\nlet printed = {}\n\nmodule.exports = function warnOnce(message) {\n  if (printed[message]) return\n  printed[message] = true\n\n  if (typeof console !== 'undefined' && console.warn) {\n    console.warn(message)\n  }\n}\n", "'use strict'\n\nclass Warning {\n  constructor(text, opts = {}) {\n    this.type = 'warning'\n    this.text = text\n\n    if (opts.node && opts.node.source) {\n      let range = opts.node.rangeBy(opts)\n      this.line = range.start.line\n      this.column = range.start.column\n      this.endLine = range.end.line\n      this.endColumn = range.end.column\n    }\n\n    for (let opt in opts) this[opt] = opts[opt]\n  }\n\n  toString() {\n    if (this.node) {\n      return this.node.error(this.text, {\n        index: this.index,\n        plugin: this.plugin,\n        word: this.word\n      }).message\n    }\n\n    if (this.plugin) {\n      return this.plugin + ': ' + this.text\n    }\n\n    return this.text\n  }\n}\n\nmodule.exports = Warning\nWarning.default = Warning\n", "'use strict'\n\nlet Warning = require('./warning')\n\nclass Result {\n  constructor(processor, root, opts) {\n    this.processor = processor\n    this.messages = []\n    this.root = root\n    this.opts = opts\n    this.css = undefined\n    this.map = undefined\n  }\n\n  toString() {\n    return this.css\n  }\n\n  warn(text, opts = {}) {\n    if (!opts.plugin) {\n      if (this.lastPlugin && this.lastPlugin.postcssPlugin) {\n        opts.plugin = this.lastPlugin.postcssPlugin\n      }\n    }\n\n    let warning = new Warning(text, opts)\n    this.messages.push(warning)\n\n    return warning\n  }\n\n  warnings() {\n    return this.messages.filter(i => i.type === 'warning')\n  }\n\n  get content() {\n    return this.css\n  }\n}\n\nmodule.exports = Result\nResult.default = Result\n", "'use strict'\n\nconst SINGLE_QUOTE = \"'\".charCodeAt(0)\nconst DOUBLE_QUOTE = '\"'.charCodeAt(0)\nconst BACKSLASH = '\\\\'.charCodeAt(0)\nconst SLASH = '/'.charCodeAt(0)\nconst NEWLINE = '\\n'.charCodeAt(0)\nconst SPACE = ' '.charCodeAt(0)\nconst FEED = '\\f'.charCodeAt(0)\nconst TAB = '\\t'.charCodeAt(0)\nconst CR = '\\r'.charCodeAt(0)\nconst OPEN_SQUARE = '['.charCodeAt(0)\nconst CLOSE_SQUARE = ']'.charCodeAt(0)\nconst OPEN_PARENTHESES = '('.charCodeAt(0)\nconst CLOSE_PARENTHESES = ')'.charCodeAt(0)\nconst OPEN_CURLY = '{'.charCodeAt(0)\nconst CLOSE_CURLY = '}'.charCodeAt(0)\nconst SEMICOLON = ';'.charCodeAt(0)\nconst ASTERISK = '*'.charCodeAt(0)\nconst COLON = ':'.charCodeAt(0)\nconst AT = '@'.charCodeAt(0)\n\nconst RE_AT_END = /[\\t\\n\\f\\r \"#'()/;[\\\\\\]{}]/g\nconst RE_WORD_END = /[\\t\\n\\f\\r !\"#'():;@[\\\\\\]{}]|\\/(?=\\*)/g\nconst RE_BAD_BRACKET = /.[\\r\\n\"'(/\\\\]/\nconst RE_HEX_ESCAPE = /[\\da-f]/i\n\nmodule.exports = function tokenizer(input, options = {}) {\n  let css = input.css.valueOf()\n  let ignore = options.ignoreErrors\n\n  let code, next, quote, content, escape\n  let escaped, escapePos, prev, n, currentToken\n\n  let length = css.length\n  let pos = 0\n  let buffer = []\n  let returned = []\n\n  function position() {\n    return pos\n  }\n\n  function unclosed(what) {\n    throw input.error('Unclosed ' + what, pos)\n  }\n\n  function endOfFile() {\n    return returned.length === 0 && pos >= length\n  }\n\n  function nextToken(opts) {\n    if (returned.length) return returned.pop()\n    if (pos >= length) return\n\n    let ignoreUnclosed = opts ? opts.ignoreUnclosed : false\n\n    code = css.charCodeAt(pos)\n\n    switch (code) {\n      case NEWLINE:\n      case SPACE:\n      case TAB:\n      case CR:\n      case FEED: {\n        next = pos\n        do {\n          next += 1\n          code = css.charCodeAt(next)\n        } while (\n          code === SPACE ||\n          code === NEWLINE ||\n          code === TAB ||\n          code === CR ||\n          code === FEED\n        )\n\n        currentToken = ['space', css.slice(pos, next)]\n        pos = next - 1\n        break\n      }\n\n      case OPEN_SQUARE:\n      case CLOSE_SQUARE:\n      case OPEN_CURLY:\n      case CLOSE_CURLY:\n      case COLON:\n      case SEMICOLON:\n      case CLOSE_PARENTHESES: {\n        let controlChar = String.fromCharCode(code)\n        currentToken = [controlChar, controlChar, pos]\n        break\n      }\n\n      case OPEN_PARENTHESES: {\n        prev = buffer.length ? buffer.pop()[1] : ''\n        n = css.charCodeAt(pos + 1)\n        if (\n          prev === 'url' &&\n          n !== SINGLE_QUOTE &&\n          n !== DOUBLE_QUOTE &&\n          n !== SPACE &&\n          n !== NEWLINE &&\n          n !== TAB &&\n          n !== FEED &&\n          n !== CR\n        ) {\n          next = pos\n          do {\n            escaped = false\n            next = css.indexOf(')', next + 1)\n            if (next === -1) {\n              if (ignore || ignoreUnclosed) {\n                next = pos\n                break\n              } else {\n                unclosed('bracket')\n              }\n            }\n            escapePos = next\n            while (css.charCodeAt(escapePos - 1) === BACKSLASH) {\n              escapePos -= 1\n              escaped = !escaped\n            }\n          } while (escaped)\n\n          currentToken = ['brackets', css.slice(pos, next + 1), pos, next]\n\n          pos = next\n        } else {\n          next = css.indexOf(')', pos + 1)\n          content = css.slice(pos, next + 1)\n\n          if (next === -1 || RE_BAD_BRACKET.test(content)) {\n            currentToken = ['(', '(', pos]\n          } else {\n            currentToken = ['brackets', content, pos, next]\n            pos = next\n          }\n        }\n\n        break\n      }\n\n      case SINGLE_QUOTE:\n      case DOUBLE_QUOTE: {\n        quote = code === SINGLE_QUOTE ? \"'\" : '\"'\n        next = pos\n        do {\n          escaped = false\n          next = css.indexOf(quote, next + 1)\n          if (next === -1) {\n            if (ignore || ignoreUnclosed) {\n              next = pos + 1\n              break\n            } else {\n              unclosed('string')\n            }\n          }\n          escapePos = next\n          while (css.charCodeAt(escapePos - 1) === BACKSLASH) {\n            escapePos -= 1\n            escaped = !escaped\n          }\n        } while (escaped)\n\n        currentToken = ['string', css.slice(pos, next + 1), pos, next]\n        pos = next\n        break\n      }\n\n      case AT: {\n        RE_AT_END.lastIndex = pos + 1\n        RE_AT_END.test(css)\n        if (RE_AT_END.lastIndex === 0) {\n          next = css.length - 1\n        } else {\n          next = RE_AT_END.lastIndex - 2\n        }\n\n        currentToken = ['at-word', css.slice(pos, next + 1), pos, next]\n\n        pos = next\n        break\n      }\n\n      case BACKSLASH: {\n        next = pos\n        escape = true\n        while (css.charCodeAt(next + 1) === BACKSLASH) {\n          next += 1\n          escape = !escape\n        }\n        code = css.charCodeAt(next + 1)\n        if (\n          escape &&\n          code !== SLASH &&\n          code !== SPACE &&\n          code !== NEWLINE &&\n          code !== TAB &&\n          code !== CR &&\n          code !== FEED\n        ) {\n          next += 1\n          if (RE_HEX_ESCAPE.test(css.charAt(next))) {\n            while (RE_HEX_ESCAPE.test(css.charAt(next + 1))) {\n              next += 1\n            }\n            if (css.charCodeAt(next + 1) === SPACE) {\n              next += 1\n            }\n          }\n        }\n\n        currentToken = ['word', css.slice(pos, next + 1), pos, next]\n\n        pos = next\n        break\n      }\n\n      default: {\n        if (code === SLASH && css.charCodeAt(pos + 1) === ASTERISK) {\n          next = css.indexOf('*/', pos + 2) + 1\n          if (next === 0) {\n            if (ignore || ignoreUnclosed) {\n              next = css.length\n            } else {\n              unclosed('comment')\n            }\n          }\n\n          currentToken = ['comment', css.slice(pos, next + 1), pos, next]\n          pos = next\n        } else {\n          RE_WORD_END.lastIndex = pos + 1\n          RE_WORD_END.test(css)\n          if (RE_WORD_END.lastIndex === 0) {\n            next = css.length - 1\n          } else {\n            next = RE_WORD_END.lastIndex - 2\n          }\n\n          currentToken = ['word', css.slice(pos, next + 1), pos, next]\n          buffer.push(currentToken)\n          pos = next\n        }\n\n        break\n      }\n    }\n\n    pos++\n    return currentToken\n  }\n\n  function back(token) {\n    returned.push(token)\n  }\n\n  return {\n    back,\n    endOfFile,\n    nextToken,\n    position\n  }\n}\n", "'use strict'\n\nlet Container = require('./container')\n\nclass AtRule extends Container {\n  constructor(defaults) {\n    super(defaults)\n    this.type = 'atrule'\n  }\n\n  append(...children) {\n    if (!this.proxyOf.nodes) this.nodes = []\n    return super.append(...children)\n  }\n\n  prepend(...children) {\n    if (!this.proxyOf.nodes) this.nodes = []\n    return super.prepend(...children)\n  }\n}\n\nmodule.exports = AtRule\nAtRule.default = AtRule\n\nContainer.registerAtRule(AtRule)\n", "'use strict'\n\nlet Container = require('./container')\n\nlet LazyResult, Processor\n\nclass Root extends Container {\n  constructor(defaults) {\n    super(defaults)\n    this.type = 'root'\n    if (!this.nodes) this.nodes = []\n  }\n\n  normalize(child, sample, type) {\n    let nodes = super.normalize(child)\n\n    if (sample) {\n      if (type === 'prepend') {\n        if (this.nodes.length > 1) {\n          sample.raws.before = this.nodes[1].raws.before\n        } else {\n          delete sample.raws.before\n        }\n      } else if (this.first !== sample) {\n        for (let node of nodes) {\n          node.raws.before = sample.raws.before\n        }\n      }\n    }\n\n    return nodes\n  }\n\n  removeChild(child, ignore) {\n    let index = this.index(child)\n\n    if (!ignore && index === 0 && this.nodes.length > 1) {\n      this.nodes[1].raws.before = this.nodes[index].raws.before\n    }\n\n    return super.removeChild(child)\n  }\n\n  toResult(opts = {}) {\n    let lazy = new LazyResult(new Processor(), this, opts)\n    return lazy.stringify()\n  }\n}\n\nRoot.registerLazyResult = dependant => {\n  LazyResult = dependant\n}\n\nRoot.registerProcessor = dependant => {\n  Processor = dependant\n}\n\nmodule.exports = Root\nRoot.default = Root\n\nContainer.registerRoot(Root)\n", "'use strict'\n\nlet list = {\n  comma(string) {\n    return list.split(string, [','], true)\n  },\n\n  space(string) {\n    let spaces = [' ', '\\n', '\\t']\n    return list.split(string, spaces)\n  },\n\n  split(string, separators, last) {\n    let array = []\n    let current = ''\n    let split = false\n\n    let func = 0\n    let inQuote = false\n    let prevQuote = ''\n    let escape = false\n\n    for (let letter of string) {\n      if (escape) {\n        escape = false\n      } else if (letter === '\\\\') {\n        escape = true\n      } else if (inQuote) {\n        if (letter === prevQuote) {\n          inQuote = false\n        }\n      } else if (letter === '\"' || letter === \"'\") {\n        inQuote = true\n        prevQuote = letter\n      } else if (letter === '(') {\n        func += 1\n      } else if (letter === ')') {\n        if (func > 0) func -= 1\n      } else if (func === 0) {\n        if (separators.includes(letter)) split = true\n      }\n\n      if (split) {\n        if (current !== '') array.push(current.trim())\n        current = ''\n        split = false\n      } else {\n        current += letter\n      }\n    }\n\n    if (last || current !== '') array.push(current.trim())\n    return array\n  }\n}\n\nmodule.exports = list\nlist.default = list\n", "'use strict'\n\nlet Container = require('./container')\nlet list = require('./list')\n\nclass Rule extends Container {\n  constructor(defaults) {\n    super(defaults)\n    this.type = 'rule'\n    if (!this.nodes) this.nodes = []\n  }\n\n  get selectors() {\n    return list.comma(this.selector)\n  }\n\n  set selectors(values) {\n    let match = this.selector ? this.selector.match(/,\\s*/) : null\n    let sep = match ? match[0] : ',' + this.raw('between', 'beforeOpen')\n    this.selector = values.join(sep)\n  }\n}\n\nmodule.exports = Rule\nRule.default = Rule\n\nContainer.registerRule(Rule)\n", "'use strict'\n\nlet Declaration = require('./declaration')\nlet tokenizer = require('./tokenize')\nlet Comment = require('./comment')\nlet AtRule = require('./at-rule')\nlet Root = require('./root')\nlet Rule = require('./rule')\n\nconst SAFE_COMMENT_NEIGHBOR = {\n  empty: true,\n  space: true\n}\n\nfunction findLastWithPosition(tokens) {\n  for (let i = tokens.length - 1; i >= 0; i--) {\n    let token = tokens[i]\n    let pos = token[3] || token[2]\n    if (pos) return pos\n  }\n}\n\nclass Parser {\n  constructor(input) {\n    this.input = input\n\n    this.root = new Root()\n    this.current = this.root\n    this.spaces = ''\n    this.semicolon = false\n    this.customProperty = false\n\n    this.createTokenizer()\n    this.root.source = { input, start: { column: 1, line: 1, offset: 0 } }\n  }\n\n  atrule(token) {\n    let node = new AtRule()\n    node.name = token[1].slice(1)\n    if (node.name === '') {\n      this.unnamedAtrule(node, token)\n    }\n    this.init(node, token[2])\n\n    let type\n    let prev\n    let shift\n    let last = false\n    let open = false\n    let params = []\n    let brackets = []\n\n    while (!this.tokenizer.endOfFile()) {\n      token = this.tokenizer.nextToken()\n      type = token[0]\n\n      if (type === '(' || type === '[') {\n        brackets.push(type === '(' ? ')' : ']')\n      } else if (type === '{' && brackets.length > 0) {\n        brackets.push('}')\n      } else if (type === brackets[brackets.length - 1]) {\n        brackets.pop()\n      }\n\n      if (brackets.length === 0) {\n        if (type === ';') {\n          node.source.end = this.getPosition(token[2])\n          node.source.end.offset++\n          this.semicolon = true\n          break\n        } else if (type === '{') {\n          open = true\n          break\n        } else if (type === '}') {\n          if (params.length > 0) {\n            shift = params.length - 1\n            prev = params[shift]\n            while (prev && prev[0] === 'space') {\n              prev = params[--shift]\n            }\n            if (prev) {\n              node.source.end = this.getPosition(prev[3] || prev[2])\n              node.source.end.offset++\n            }\n          }\n          this.end(token)\n          break\n        } else {\n          params.push(token)\n        }\n      } else {\n        params.push(token)\n      }\n\n      if (this.tokenizer.endOfFile()) {\n        last = true\n        break\n      }\n    }\n\n    node.raws.between = this.spacesAndCommentsFromEnd(params)\n    if (params.length) {\n      node.raws.afterName = this.spacesAndCommentsFromStart(params)\n      this.raw(node, 'params', params)\n      if (last) {\n        token = params[params.length - 1]\n        node.source.end = this.getPosition(token[3] || token[2])\n        node.source.end.offset++\n        this.spaces = node.raws.between\n        node.raws.between = ''\n      }\n    } else {\n      node.raws.afterName = ''\n      node.params = ''\n    }\n\n    if (open) {\n      node.nodes = []\n      this.current = node\n    }\n  }\n\n  checkMissedSemicolon(tokens) {\n    let colon = this.colon(tokens)\n    if (colon === false) return\n\n    let founded = 0\n    let token\n    for (let j = colon - 1; j >= 0; j--) {\n      token = tokens[j]\n      if (token[0] !== 'space') {\n        founded += 1\n        if (founded === 2) break\n      }\n    }\n    // If the token is a word, e.g. `!important`, `red` or any other valid property's value.\n    // Then we need to return the colon after that word token. [3] is the \"end\" colon of that word.\n    // And because we need it after that one we do +1 to get the next one.\n    throw this.input.error(\n      'Missed semicolon',\n      token[0] === 'word' ? token[3] + 1 : token[2]\n    )\n  }\n\n  colon(tokens) {\n    let brackets = 0\n    let token, type, prev\n    for (let [i, element] of tokens.entries()) {\n      token = element\n      type = token[0]\n\n      if (type === '(') {\n        brackets += 1\n      }\n      if (type === ')') {\n        brackets -= 1\n      }\n      if (brackets === 0 && type === ':') {\n        if (!prev) {\n          this.doubleColon(token)\n        } else if (prev[0] === 'word' && prev[1] === 'progid') {\n          continue\n        } else {\n          return i\n        }\n      }\n\n      prev = token\n    }\n    return false\n  }\n\n  comment(token) {\n    let node = new Comment()\n    this.init(node, token[2])\n    node.source.end = this.getPosition(token[3] || token[2])\n    node.source.end.offset++\n\n    let text = token[1].slice(2, -2)\n    if (/^\\s*$/.test(text)) {\n      node.text = ''\n      node.raws.left = text\n      node.raws.right = ''\n    } else {\n      let match = text.match(/^(\\s*)([^]*\\S)(\\s*)$/)\n      node.text = match[2]\n      node.raws.left = match[1]\n      node.raws.right = match[3]\n    }\n  }\n\n  createTokenizer() {\n    this.tokenizer = tokenizer(this.input)\n  }\n\n  decl(tokens, customProperty) {\n    let node = new Declaration()\n    this.init(node, tokens[0][2])\n\n    let last = tokens[tokens.length - 1]\n    if (last[0] === ';') {\n      this.semicolon = true\n      tokens.pop()\n    }\n\n    node.source.end = this.getPosition(\n      last[3] || last[2] || findLastWithPosition(tokens)\n    )\n    node.source.end.offset++\n\n    while (tokens[0][0] !== 'word') {\n      if (tokens.length === 1) this.unknownWord(tokens)\n      node.raws.before += tokens.shift()[1]\n    }\n    node.source.start = this.getPosition(tokens[0][2])\n\n    node.prop = ''\n    while (tokens.length) {\n      let type = tokens[0][0]\n      if (type === ':' || type === 'space' || type === 'comment') {\n        break\n      }\n      node.prop += tokens.shift()[1]\n    }\n\n    node.raws.between = ''\n\n    let token\n    while (tokens.length) {\n      token = tokens.shift()\n\n      if (token[0] === ':') {\n        node.raws.between += token[1]\n        break\n      } else {\n        if (token[0] === 'word' && /\\w/.test(token[1])) {\n          this.unknownWord([token])\n        }\n        node.raws.between += token[1]\n      }\n    }\n\n    if (node.prop[0] === '_' || node.prop[0] === '*') {\n      node.raws.before += node.prop[0]\n      node.prop = node.prop.slice(1)\n    }\n\n    let firstSpaces = []\n    let next\n    while (tokens.length) {\n      next = tokens[0][0]\n      if (next !== 'space' && next !== 'comment') break\n      firstSpaces.push(tokens.shift())\n    }\n\n    this.precheckMissedSemicolon(tokens)\n\n    for (let i = tokens.length - 1; i >= 0; i--) {\n      token = tokens[i]\n      if (token[1].toLowerCase() === '!important') {\n        node.important = true\n        let string = this.stringFrom(tokens, i)\n        string = this.spacesFromEnd(tokens) + string\n        if (string !== ' !important') node.raws.important = string\n        break\n      } else if (token[1].toLowerCase() === 'important') {\n        let cache = tokens.slice(0)\n        let str = ''\n        for (let j = i; j > 0; j--) {\n          let type = cache[j][0]\n          if (str.trim().indexOf('!') === 0 && type !== 'space') {\n            break\n          }\n          str = cache.pop()[1] + str\n        }\n        if (str.trim().indexOf('!') === 0) {\n          node.important = true\n          node.raws.important = str\n          tokens = cache\n        }\n      }\n\n      if (token[0] !== 'space' && token[0] !== 'comment') {\n        break\n      }\n    }\n\n    let hasWord = tokens.some(i => i[0] !== 'space' && i[0] !== 'comment')\n\n    if (hasWord) {\n      node.raws.between += firstSpaces.map(i => i[1]).join('')\n      firstSpaces = []\n    }\n    this.raw(node, 'value', firstSpaces.concat(tokens), customProperty)\n\n    if (node.value.includes(':') && !customProperty) {\n      this.checkMissedSemicolon(tokens)\n    }\n  }\n\n  doubleColon(token) {\n    throw this.input.error(\n      'Double colon',\n      { offset: token[2] },\n      { offset: token[2] + token[1].length }\n    )\n  }\n\n  emptyRule(token) {\n    let node = new Rule()\n    this.init(node, token[2])\n    node.selector = ''\n    node.raws.between = ''\n    this.current = node\n  }\n\n  end(token) {\n    if (this.current.nodes && this.current.nodes.length) {\n      this.current.raws.semicolon = this.semicolon\n    }\n    this.semicolon = false\n\n    this.current.raws.after = (this.current.raws.after || '') + this.spaces\n    this.spaces = ''\n\n    if (this.current.parent) {\n      this.current.source.end = this.getPosition(token[2])\n      this.current.source.end.offset++\n      this.current = this.current.parent\n    } else {\n      this.unexpectedClose(token)\n    }\n  }\n\n  endFile() {\n    if (this.current.parent) this.unclosedBlock()\n    if (this.current.nodes && this.current.nodes.length) {\n      this.current.raws.semicolon = this.semicolon\n    }\n    this.current.raws.after = (this.current.raws.after || '') + this.spaces\n    this.root.source.end = this.getPosition(this.tokenizer.position())\n  }\n\n  freeSemicolon(token) {\n    this.spaces += token[1]\n    if (this.current.nodes) {\n      let prev = this.current.nodes[this.current.nodes.length - 1]\n      if (prev && prev.type === 'rule' && !prev.raws.ownSemicolon) {\n        prev.raws.ownSemicolon = this.spaces\n        this.spaces = ''\n      }\n    }\n  }\n\n  // Helpers\n\n  getPosition(offset) {\n    let pos = this.input.fromOffset(offset)\n    return {\n      column: pos.col,\n      line: pos.line,\n      offset\n    }\n  }\n\n  init(node, offset) {\n    this.current.push(node)\n    node.source = {\n      input: this.input,\n      start: this.getPosition(offset)\n    }\n    node.raws.before = this.spaces\n    this.spaces = ''\n    if (node.type !== 'comment') this.semicolon = false\n  }\n\n  other(start) {\n    let end = false\n    let type = null\n    let colon = false\n    let bracket = null\n    let brackets = []\n    let customProperty = start[1].startsWith('--')\n\n    let tokens = []\n    let token = start\n    while (token) {\n      type = token[0]\n      tokens.push(token)\n\n      if (type === '(' || type === '[') {\n        if (!bracket) bracket = token\n        brackets.push(type === '(' ? ')' : ']')\n      } else if (customProperty && colon && type === '{') {\n        if (!bracket) bracket = token\n        brackets.push('}')\n      } else if (brackets.length === 0) {\n        if (type === ';') {\n          if (colon) {\n            this.decl(tokens, customProperty)\n            return\n          } else {\n            break\n          }\n        } else if (type === '{') {\n          this.rule(tokens)\n          return\n        } else if (type === '}') {\n          this.tokenizer.back(tokens.pop())\n          end = true\n          break\n        } else if (type === ':') {\n          colon = true\n        }\n      } else if (type === brackets[brackets.length - 1]) {\n        brackets.pop()\n        if (brackets.length === 0) bracket = null\n      }\n\n      token = this.tokenizer.nextToken()\n    }\n\n    if (this.tokenizer.endOfFile()) end = true\n    if (brackets.length > 0) this.unclosedBracket(bracket)\n\n    if (end && colon) {\n      if (!customProperty) {\n        while (tokens.length) {\n          token = tokens[tokens.length - 1][0]\n          if (token !== 'space' && token !== 'comment') break\n          this.tokenizer.back(tokens.pop())\n        }\n      }\n      this.decl(tokens, customProperty)\n    } else {\n      this.unknownWord(tokens)\n    }\n  }\n\n  parse() {\n    let token\n    while (!this.tokenizer.endOfFile()) {\n      token = this.tokenizer.nextToken()\n\n      switch (token[0]) {\n        case 'space':\n          this.spaces += token[1]\n          break\n\n        case ';':\n          this.freeSemicolon(token)\n          break\n\n        case '}':\n          this.end(token)\n          break\n\n        case 'comment':\n          this.comment(token)\n          break\n\n        case 'at-word':\n          this.atrule(token)\n          break\n\n        case '{':\n          this.emptyRule(token)\n          break\n\n        default:\n          this.other(token)\n          break\n      }\n    }\n    this.endFile()\n  }\n\n  precheckMissedSemicolon(/* tokens */) {\n    // Hook for Safe Parser\n  }\n\n  raw(node, prop, tokens, customProperty) {\n    let token, type\n    let length = tokens.length\n    let value = ''\n    let clean = true\n    let next, prev\n\n    for (let i = 0; i < length; i += 1) {\n      token = tokens[i]\n      type = token[0]\n      if (type === 'space' && i === length - 1 && !customProperty) {\n        clean = false\n      } else if (type === 'comment') {\n        prev = tokens[i - 1] ? tokens[i - 1][0] : 'empty'\n        next = tokens[i + 1] ? tokens[i + 1][0] : 'empty'\n        if (!SAFE_COMMENT_NEIGHBOR[prev] && !SAFE_COMMENT_NEIGHBOR[next]) {\n          if (value.slice(-1) === ',') {\n            clean = false\n          } else {\n            value += token[1]\n          }\n        } else {\n          clean = false\n        }\n      } else {\n        value += token[1]\n      }\n    }\n    if (!clean) {\n      let raw = tokens.reduce((all, i) => all + i[1], '')\n      node.raws[prop] = { raw, value }\n    }\n    node[prop] = value\n  }\n\n  rule(tokens) {\n    tokens.pop()\n\n    let node = new Rule()\n    this.init(node, tokens[0][2])\n\n    node.raws.between = this.spacesAndCommentsFromEnd(tokens)\n    this.raw(node, 'selector', tokens)\n    this.current = node\n  }\n\n  spacesAndCommentsFromEnd(tokens) {\n    let lastTokenType\n    let spaces = ''\n    while (tokens.length) {\n      lastTokenType = tokens[tokens.length - 1][0]\n      if (lastTokenType !== 'space' && lastTokenType !== 'comment') break\n      spaces = tokens.pop()[1] + spaces\n    }\n    return spaces\n  }\n\n  // Errors\n\n  spacesAndCommentsFromStart(tokens) {\n    let next\n    let spaces = ''\n    while (tokens.length) {\n      next = tokens[0][0]\n      if (next !== 'space' && next !== 'comment') break\n      spaces += tokens.shift()[1]\n    }\n    return spaces\n  }\n\n  spacesFromEnd(tokens) {\n    let lastTokenType\n    let spaces = ''\n    while (tokens.length) {\n      lastTokenType = tokens[tokens.length - 1][0]\n      if (lastTokenType !== 'space') break\n      spaces = tokens.pop()[1] + spaces\n    }\n    return spaces\n  }\n\n  stringFrom(tokens, from) {\n    let result = ''\n    for (let i = from; i < tokens.length; i++) {\n      result += tokens[i][1]\n    }\n    tokens.splice(from, tokens.length - from)\n    return result\n  }\n\n  unclosedBlock() {\n    let pos = this.current.source.start\n    throw this.input.error('Unclosed block', pos.line, pos.column)\n  }\n\n  unclosedBracket(bracket) {\n    throw this.input.error(\n      'Unclosed bracket',\n      { offset: bracket[2] },\n      { offset: bracket[2] + 1 }\n    )\n  }\n\n  unexpectedClose(token) {\n    throw this.input.error(\n      'Unexpected }',\n      { offset: token[2] },\n      { offset: token[2] + 1 }\n    )\n  }\n\n  unknownWord(tokens) {\n    throw this.input.error(\n      'Unknown word',\n      { offset: tokens[0][2] },\n      { offset: tokens[0][2] + tokens[0][1].length }\n    )\n  }\n\n  unnamedAtrule(node, token) {\n    throw this.input.error(\n      'At-rule without name',\n      { offset: token[2] },\n      { offset: token[2] + token[1].length }\n    )\n  }\n}\n\nmodule.exports = Parser\n", "'use strict'\n\nlet Container = require('./container')\nlet Parser = require('./parser')\nlet Input = require('./input')\n\nfunction parse(css, opts) {\n  let input = new Input(css, opts)\n  let parser = new Parser(input)\n  try {\n    parser.parse()\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (e.name === 'CssSyntaxError' && opts && opts.from) {\n        if (/\\.scss$/i.test(opts.from)) {\n          e.message +=\n            '\\nYou tried to parse SCSS with ' +\n            'the standard CSS parser; ' +\n            'try again with the postcss-scss parser'\n        } else if (/\\.sass/i.test(opts.from)) {\n          e.message +=\n            '\\nYou tried to parse Sass with ' +\n            'the standard CSS parser; ' +\n            'try again with the postcss-sass parser'\n        } else if (/\\.less$/i.test(opts.from)) {\n          e.message +=\n            '\\nYou tried to parse Less with ' +\n            'the standard CSS parser; ' +\n            'try again with the postcss-less parser'\n        }\n      }\n    }\n    throw e\n  }\n\n  return parser.root\n}\n\nmodule.exports = parse\nparse.default = parse\n\nContainer.registerParse(parse)\n", "'use strict'\n\nlet { isClean, my } = require('./symbols')\nlet MapGenerator = require('./map-generator')\nlet stringify = require('./stringify')\nlet Container = require('./container')\nlet Document = require('./document')\nlet warnOnce = require('./warn-once')\nlet Result = require('./result')\nlet parse = require('./parse')\nlet Root = require('./root')\n\nconst TYPE_TO_CLASS_NAME = {\n  atrule: 'AtRule',\n  comment: 'Comment',\n  decl: 'Declaration',\n  document: 'Document',\n  root: 'Root',\n  rule: 'Rule'\n}\n\nconst PLUGIN_PROPS = {\n  AtRule: true,\n  AtRuleExit: true,\n  Comment: true,\n  CommentExit: true,\n  Declaration: true,\n  DeclarationExit: true,\n  Document: true,\n  DocumentExit: true,\n  Once: true,\n  OnceExit: true,\n  postcssPlugin: true,\n  prepare: true,\n  Root: true,\n  RootExit: true,\n  Rule: true,\n  RuleExit: true\n}\n\nconst NOT_VISITORS = {\n  Once: true,\n  postcssPlugin: true,\n  prepare: true\n}\n\nconst CHILDREN = 0\n\nfunction isPromise(obj) {\n  return typeof obj === 'object' && typeof obj.then === 'function'\n}\n\nfunction getEvents(node) {\n  let key = false\n  let type = TYPE_TO_CLASS_NAME[node.type]\n  if (node.type === 'decl') {\n    key = node.prop.toLowerCase()\n  } else if (node.type === 'atrule') {\n    key = node.name.toLowerCase()\n  }\n\n  if (key && node.append) {\n    return [\n      type,\n      type + '-' + key,\n      CHILDREN,\n      type + 'Exit',\n      type + 'Exit-' + key\n    ]\n  } else if (key) {\n    return [type, type + '-' + key, type + 'Exit', type + 'Exit-' + key]\n  } else if (node.append) {\n    return [type, CHILDREN, type + 'Exit']\n  } else {\n    return [type, type + 'Exit']\n  }\n}\n\nfunction toStack(node) {\n  let events\n  if (node.type === 'document') {\n    events = ['Document', CHILDREN, 'DocumentExit']\n  } else if (node.type === 'root') {\n    events = ['Root', CHILDREN, 'RootExit']\n  } else {\n    events = getEvents(node)\n  }\n\n  return {\n    eventIndex: 0,\n    events,\n    iterator: 0,\n    node,\n    visitorIndex: 0,\n    visitors: []\n  }\n}\n\nfunction cleanMarks(node) {\n  node[isClean] = false\n  if (node.nodes) node.nodes.forEach(i => cleanMarks(i))\n  return node\n}\n\nlet postcss = {}\n\nclass LazyResult {\n  constructor(processor, css, opts) {\n    this.stringified = false\n    this.processed = false\n\n    let root\n    if (\n      typeof css === 'object' &&\n      css !== null &&\n      (css.type === 'root' || css.type === 'document')\n    ) {\n      root = cleanMarks(css)\n    } else if (css instanceof LazyResult || css instanceof Result) {\n      root = cleanMarks(css.root)\n      if (css.map) {\n        if (typeof opts.map === 'undefined') opts.map = {}\n        if (!opts.map.inline) opts.map.inline = false\n        opts.map.prev = css.map\n      }\n    } else {\n      let parser = parse\n      if (opts.syntax) parser = opts.syntax.parse\n      if (opts.parser) parser = opts.parser\n      if (parser.parse) parser = parser.parse\n\n      try {\n        root = parser(css, opts)\n      } catch (error) {\n        this.processed = true\n        this.error = error\n      }\n\n      if (root && !root[my]) {\n        /* c8 ignore next 2 */\n        Container.rebuild(root)\n      }\n    }\n\n    this.result = new Result(processor, root, opts)\n    this.helpers = { ...postcss, postcss, result: this.result }\n    this.plugins = this.processor.plugins.map(plugin => {\n      if (typeof plugin === 'object' && plugin.prepare) {\n        return { ...plugin, ...plugin.prepare(this.result) }\n      } else {\n        return plugin\n      }\n    })\n  }\n\n  async() {\n    if (this.error) return Promise.reject(this.error)\n    if (this.processed) return Promise.resolve(this.result)\n    if (!this.processing) {\n      this.processing = this.runAsync()\n    }\n    return this.processing\n  }\n\n  catch(onRejected) {\n    return this.async().catch(onRejected)\n  }\n\n  finally(onFinally) {\n    return this.async().then(onFinally, onFinally)\n  }\n\n  getAsyncError() {\n    throw new Error('Use process(css).then(cb) to work with async plugins')\n  }\n\n  handleError(error, node) {\n    let plugin = this.result.lastPlugin\n    try {\n      if (node) node.addToError(error)\n      this.error = error\n      if (error.name === 'CssSyntaxError' && !error.plugin) {\n        error.plugin = plugin.postcssPlugin\n        error.setMessage()\n      } else if (plugin.postcssVersion) {\n        if (process.env.NODE_ENV !== 'production') {\n          let pluginName = plugin.postcssPlugin\n          let pluginVer = plugin.postcssVersion\n          let runtimeVer = this.result.processor.version\n          let a = pluginVer.split('.')\n          let b = runtimeVer.split('.')\n\n          if (a[0] !== b[0] || parseInt(a[1]) > parseInt(b[1])) {\n            // eslint-disable-next-line no-console\n            console.error(\n              'Unknown error from PostCSS plugin. Your current PostCSS ' +\n                'version is ' +\n                runtimeVer +\n                ', but ' +\n                pluginName +\n                ' uses ' +\n                pluginVer +\n                '. Perhaps this is the source of the error below.'\n            )\n          }\n        }\n      }\n    } catch (err) {\n      /* c8 ignore next 3 */\n      // eslint-disable-next-line no-console\n      if (console && console.error) console.error(err)\n    }\n    return error\n  }\n\n  prepareVisitors() {\n    this.listeners = {}\n    let add = (plugin, type, cb) => {\n      if (!this.listeners[type]) this.listeners[type] = []\n      this.listeners[type].push([plugin, cb])\n    }\n    for (let plugin of this.plugins) {\n      if (typeof plugin === 'object') {\n        for (let event in plugin) {\n          if (!PLUGIN_PROPS[event] && /^[A-Z]/.test(event)) {\n            throw new Error(\n              `Unknown event ${event} in ${plugin.postcssPlugin}. ` +\n                `Try to update PostCSS (${this.processor.version} now).`\n            )\n          }\n          if (!NOT_VISITORS[event]) {\n            if (typeof plugin[event] === 'object') {\n              for (let filter in plugin[event]) {\n                if (filter === '*') {\n                  add(plugin, event, plugin[event][filter])\n                } else {\n                  add(\n                    plugin,\n                    event + '-' + filter.toLowerCase(),\n                    plugin[event][filter]\n                  )\n                }\n              }\n            } else if (typeof plugin[event] === 'function') {\n              add(plugin, event, plugin[event])\n            }\n          }\n        }\n      }\n    }\n    this.hasListener = Object.keys(this.listeners).length > 0\n  }\n\n  async runAsync() {\n    this.plugin = 0\n    for (let i = 0; i < this.plugins.length; i++) {\n      let plugin = this.plugins[i]\n      let promise = this.runOnRoot(plugin)\n      if (isPromise(promise)) {\n        try {\n          await promise\n        } catch (error) {\n          throw this.handleError(error)\n        }\n      }\n    }\n\n    this.prepareVisitors()\n    if (this.hasListener) {\n      let root = this.result.root\n      while (!root[isClean]) {\n        root[isClean] = true\n        let stack = [toStack(root)]\n        while (stack.length > 0) {\n          let promise = this.visitTick(stack)\n          if (isPromise(promise)) {\n            try {\n              await promise\n            } catch (e) {\n              let node = stack[stack.length - 1].node\n              throw this.handleError(e, node)\n            }\n          }\n        }\n      }\n\n      if (this.listeners.OnceExit) {\n        for (let [plugin, visitor] of this.listeners.OnceExit) {\n          this.result.lastPlugin = plugin\n          try {\n            if (root.type === 'document') {\n              let roots = root.nodes.map(subRoot =>\n                visitor(subRoot, this.helpers)\n              )\n\n              await Promise.all(roots)\n            } else {\n              await visitor(root, this.helpers)\n            }\n          } catch (e) {\n            throw this.handleError(e)\n          }\n        }\n      }\n    }\n\n    this.processed = true\n    return this.stringify()\n  }\n\n  runOnRoot(plugin) {\n    this.result.lastPlugin = plugin\n    try {\n      if (typeof plugin === 'object' && plugin.Once) {\n        if (this.result.root.type === 'document') {\n          let roots = this.result.root.nodes.map(root =>\n            plugin.Once(root, this.helpers)\n          )\n\n          if (isPromise(roots[0])) {\n            return Promise.all(roots)\n          }\n\n          return roots\n        }\n\n        return plugin.Once(this.result.root, this.helpers)\n      } else if (typeof plugin === 'function') {\n        return plugin(this.result.root, this.result)\n      }\n    } catch (error) {\n      throw this.handleError(error)\n    }\n  }\n\n  stringify() {\n    if (this.error) throw this.error\n    if (this.stringified) return this.result\n    this.stringified = true\n\n    this.sync()\n\n    let opts = this.result.opts\n    let str = stringify\n    if (opts.syntax) str = opts.syntax.stringify\n    if (opts.stringifier) str = opts.stringifier\n    if (str.stringify) str = str.stringify\n\n    let map = new MapGenerator(str, this.result.root, this.result.opts)\n    let data = map.generate()\n    this.result.css = data[0]\n    this.result.map = data[1]\n\n    return this.result\n  }\n\n  sync() {\n    if (this.error) throw this.error\n    if (this.processed) return this.result\n    this.processed = true\n\n    if (this.processing) {\n      throw this.getAsyncError()\n    }\n\n    for (let plugin of this.plugins) {\n      let promise = this.runOnRoot(plugin)\n      if (isPromise(promise)) {\n        throw this.getAsyncError()\n      }\n    }\n\n    this.prepareVisitors()\n    if (this.hasListener) {\n      let root = this.result.root\n      while (!root[isClean]) {\n        root[isClean] = true\n        this.walkSync(root)\n      }\n      if (this.listeners.OnceExit) {\n        if (root.type === 'document') {\n          for (let subRoot of root.nodes) {\n            this.visitSync(this.listeners.OnceExit, subRoot)\n          }\n        } else {\n          this.visitSync(this.listeners.OnceExit, root)\n        }\n      }\n    }\n\n    return this.result\n  }\n\n  then(onFulfilled, onRejected) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!('from' in this.opts)) {\n        warnOnce(\n          'Without `from` option PostCSS could generate wrong source map ' +\n            'and will not find Browserslist config. Set it to CSS file path ' +\n            'or to `undefined` to prevent this warning.'\n        )\n      }\n    }\n    return this.async().then(onFulfilled, onRejected)\n  }\n\n  toString() {\n    return this.css\n  }\n\n  visitSync(visitors, node) {\n    for (let [plugin, visitor] of visitors) {\n      this.result.lastPlugin = plugin\n      let promise\n      try {\n        promise = visitor(node, this.helpers)\n      } catch (e) {\n        throw this.handleError(e, node.proxyOf)\n      }\n      if (node.type !== 'root' && node.type !== 'document' && !node.parent) {\n        return true\n      }\n      if (isPromise(promise)) {\n        throw this.getAsyncError()\n      }\n    }\n  }\n\n  visitTick(stack) {\n    let visit = stack[stack.length - 1]\n    let { node, visitors } = visit\n\n    if (node.type !== 'root' && node.type !== 'document' && !node.parent) {\n      stack.pop()\n      return\n    }\n\n    if (visitors.length > 0 && visit.visitorIndex < visitors.length) {\n      let [plugin, visitor] = visitors[visit.visitorIndex]\n      visit.visitorIndex += 1\n      if (visit.visitorIndex === visitors.length) {\n        visit.visitors = []\n        visit.visitorIndex = 0\n      }\n      this.result.lastPlugin = plugin\n      try {\n        return visitor(node.toProxy(), this.helpers)\n      } catch (e) {\n        throw this.handleError(e, node)\n      }\n    }\n\n    if (visit.iterator !== 0) {\n      let iterator = visit.iterator\n      let child\n      while ((child = node.nodes[node.indexes[iterator]])) {\n        node.indexes[iterator] += 1\n        if (!child[isClean]) {\n          child[isClean] = true\n          stack.push(toStack(child))\n          return\n        }\n      }\n      visit.iterator = 0\n      delete node.indexes[iterator]\n    }\n\n    let events = visit.events\n    while (visit.eventIndex < events.length) {\n      let event = events[visit.eventIndex]\n      visit.eventIndex += 1\n      if (event === CHILDREN) {\n        if (node.nodes && node.nodes.length) {\n          node[isClean] = true\n          visit.iterator = node.getIterator()\n        }\n        return\n      } else if (this.listeners[event]) {\n        visit.visitors = this.listeners[event]\n        return\n      }\n    }\n    stack.pop()\n  }\n\n  walkSync(node) {\n    node[isClean] = true\n    let events = getEvents(node)\n    for (let event of events) {\n      if (event === CHILDREN) {\n        if (node.nodes) {\n          node.each(child => {\n            if (!child[isClean]) this.walkSync(child)\n          })\n        }\n      } else {\n        let visitors = this.listeners[event]\n        if (visitors) {\n          if (this.visitSync(visitors, node.toProxy())) return\n        }\n      }\n    }\n  }\n\n  warnings() {\n    return this.sync().warnings()\n  }\n\n  get content() {\n    return this.stringify().content\n  }\n\n  get css() {\n    return this.stringify().css\n  }\n\n  get map() {\n    return this.stringify().map\n  }\n\n  get messages() {\n    return this.sync().messages\n  }\n\n  get opts() {\n    return this.result.opts\n  }\n\n  get processor() {\n    return this.result.processor\n  }\n\n  get root() {\n    return this.sync().root\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'LazyResult'\n  }\n}\n\nLazyResult.registerPostcss = dependant => {\n  postcss = dependant\n}\n\nmodule.exports = LazyResult\nLazyResult.default = LazyResult\n\nRoot.registerLazyResult(LazyResult)\nDocument.registerLazyResult(LazyResult)\n", "'use strict'\n\nlet MapGenerator = require('./map-generator')\nlet stringify = require('./stringify')\nlet warnOnce = require('./warn-once')\nlet parse = require('./parse')\nconst Result = require('./result')\n\nclass NoWorkResult {\n  constructor(processor, css, opts) {\n    css = css.toString()\n    this.stringified = false\n\n    this._processor = processor\n    this._css = css\n    this._opts = opts\n    this._map = undefined\n    let root\n\n    let str = stringify\n    this.result = new Result(this._processor, root, this._opts)\n    this.result.css = css\n\n    let self = this\n    Object.defineProperty(this.result, 'root', {\n      get() {\n        return self.root\n      }\n    })\n\n    let map = new MapGenerator(str, root, this._opts, css)\n    if (map.isMap()) {\n      let [generatedCSS, generatedMap] = map.generate()\n      if (generatedCSS) {\n        this.result.css = generatedCSS\n      }\n      if (generatedMap) {\n        this.result.map = generatedMap\n      }\n    }\n  }\n\n  async() {\n    if (this.error) return Promise.reject(this.error)\n    return Promise.resolve(this.result)\n  }\n\n  catch(onRejected) {\n    return this.async().catch(onRejected)\n  }\n\n  finally(onFinally) {\n    return this.async().then(onFinally, onFinally)\n  }\n\n  sync() {\n    if (this.error) throw this.error\n    return this.result\n  }\n\n  then(onFulfilled, onRejected) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!('from' in this._opts)) {\n        warnOnce(\n          'Without `from` option PostCSS could generate wrong source map ' +\n            'and will not find Browserslist config. Set it to CSS file path ' +\n            'or to `undefined` to prevent this warning.'\n        )\n      }\n    }\n\n    return this.async().then(onFulfilled, onRejected)\n  }\n\n  toString() {\n    return this._css\n  }\n\n  warnings() {\n    return []\n  }\n\n  get content() {\n    return this.result.css\n  }\n\n  get css() {\n    return this.result.css\n  }\n\n  get map() {\n    return this.result.map\n  }\n\n  get messages() {\n    return []\n  }\n\n  get opts() {\n    return this.result.opts\n  }\n\n  get processor() {\n    return this.result.processor\n  }\n\n  get root() {\n    if (this._root) {\n      return this._root\n    }\n\n    let root\n    let parser = parse\n\n    try {\n      root = parser(this._css, this._opts)\n    } catch (error) {\n      this.error = error\n    }\n\n    if (this.error) {\n      throw this.error\n    } else {\n      this._root = root\n      return root\n    }\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'NoWorkResult'\n  }\n}\n\nmodule.exports = NoWorkResult\nNoWorkResult.default = NoWorkResult\n", "'use strict'\n\nlet NoWorkResult = require('./no-work-result')\nlet LazyResult = require('./lazy-result')\nlet Document = require('./document')\nlet Root = require('./root')\n\nclass Processor {\n  constructor(plugins = []) {\n    this.version = '8.4.31'\n    this.plugins = this.normalize(plugins)\n  }\n\n  normalize(plugins) {\n    let normalized = []\n    for (let i of plugins) {\n      if (i.postcss === true) {\n        i = i()\n      } else if (i.postcss) {\n        i = i.postcss\n      }\n\n      if (typeof i === 'object' && Array.isArray(i.plugins)) {\n        normalized = normalized.concat(i.plugins)\n      } else if (typeof i === 'object' && i.postcssPlugin) {\n        normalized.push(i)\n      } else if (typeof i === 'function') {\n        normalized.push(i)\n      } else if (typeof i === 'object' && (i.parse || i.stringify)) {\n        if (process.env.NODE_ENV !== 'production') {\n          throw new Error(\n            'PostCSS syntaxes cannot be used as plugins. Instead, please use ' +\n              'one of the syntax/parser/stringifier options as outlined ' +\n              'in your PostCSS runner documentation.'\n          )\n        }\n      } else {\n        throw new Error(i + ' is not a PostCSS plugin')\n      }\n    }\n    return normalized\n  }\n\n  process(css, opts = {}) {\n    if (\n      this.plugins.length === 0 &&\n      typeof opts.parser === 'undefined' &&\n      typeof opts.stringifier === 'undefined' &&\n      typeof opts.syntax === 'undefined'\n    ) {\n      return new NoWorkResult(this, css, opts)\n    } else {\n      return new LazyResult(this, css, opts)\n    }\n  }\n\n  use(plugin) {\n    this.plugins = this.plugins.concat(this.normalize([plugin]))\n    return this\n  }\n}\n\nmodule.exports = Processor\nProcessor.default = Processor\n\nRoot.registerProcessor(Processor)\nDocument.registerProcessor(Processor)\n", "'use strict'\n\nlet Declaration = require('./declaration')\nlet PreviousMap = require('./previous-map')\nlet Comment = require('./comment')\nlet AtRule = require('./at-rule')\nlet Input = require('./input')\nlet Root = require('./root')\nlet Rule = require('./rule')\n\nfunction fromJSON(json, inputs) {\n  if (Array.isArray(json)) return json.map(n => fromJSON(n))\n\n  let { inputs: ownInputs, ...defaults } = json\n  if (ownInputs) {\n    inputs = []\n    for (let input of ownInputs) {\n      let inputHydrated = { ...input, __proto__: Input.prototype }\n      if (inputHydrated.map) {\n        inputHydrated.map = {\n          ...inputHydrated.map,\n          __proto__: PreviousMap.prototype\n        }\n      }\n      inputs.push(inputHydrated)\n    }\n  }\n  if (defaults.nodes) {\n    defaults.nodes = json.nodes.map(n => fromJSON(n, inputs))\n  }\n  if (defaults.source) {\n    let { inputId, ...source } = defaults.source\n    defaults.source = source\n    if (inputId != null) {\n      defaults.source.input = inputs[inputId]\n    }\n  }\n  if (defaults.type === 'root') {\n    return new Root(defaults)\n  } else if (defaults.type === 'decl') {\n    return new Declaration(defaults)\n  } else if (defaults.type === 'rule') {\n    return new Rule(defaults)\n  } else if (defaults.type === 'comment') {\n    return new Comment(defaults)\n  } else if (defaults.type === 'atrule') {\n    return new AtRule(defaults)\n  } else {\n    throw new Error('Unknown node type: ' + json.type)\n  }\n}\n\nmodule.exports = fromJSON\nfromJSON.default = fromJSON\n", "'use strict'\n\nlet CssSyntaxError = require('./css-syntax-error')\nlet Declaration = require('./declaration')\nlet LazyResult = require('./lazy-result')\nlet Container = require('./container')\nlet Processor = require('./processor')\nlet stringify = require('./stringify')\nlet fromJSON = require('./fromJSON')\nlet Document = require('./document')\nlet Warning = require('./warning')\nlet Comment = require('./comment')\nlet AtRule = require('./at-rule')\nlet Result = require('./result.js')\nlet Input = require('./input')\nlet parse = require('./parse')\nlet list = require('./list')\nlet Rule = require('./rule')\nlet Root = require('./root')\nlet Node = require('./node')\n\nfunction postcss(...plugins) {\n  if (plugins.length === 1 && Array.isArray(plugins[0])) {\n    plugins = plugins[0]\n  }\n  return new Processor(plugins)\n}\n\npostcss.plugin = function plugin(name, initializer) {\n  let warningPrinted = false\n  function creator(...args) {\n    // eslint-disable-next-line no-console\n    if (console && console.warn && !warningPrinted) {\n      warningPrinted = true\n      // eslint-disable-next-line no-console\n      console.warn(\n        name +\n          ': postcss.plugin was deprecated. Migration guide:\\n' +\n          'https://evilmartians.com/chronicles/postcss-8-plugin-migration'\n      )\n      if (process.env.LANG && process.env.LANG.startsWith('cn')) {\n        /* c8 ignore next 7 */\n        // eslint-disable-next-line no-console\n        console.warn(\n          name +\n            ': \u91CC\u9762 postcss.plugin \u88AB\u5F03\u7528. \u8FC1\u79FB\u6307\u5357:\\n' +\n            'https://www.w3ctech.com/topic/2226'\n        )\n      }\n    }\n    let transformer = initializer(...args)\n    transformer.postcssPlugin = name\n    transformer.postcssVersion = new Processor().version\n    return transformer\n  }\n\n  let cache\n  Object.defineProperty(creator, 'postcss', {\n    get() {\n      if (!cache) cache = creator()\n      return cache\n    }\n  })\n\n  creator.process = function (css, processOpts, pluginOpts) {\n    return postcss([creator(pluginOpts)]).process(css, processOpts)\n  }\n\n  return creator\n}\n\npostcss.stringify = stringify\npostcss.parse = parse\npostcss.fromJSON = fromJSON\npostcss.list = list\n\npostcss.comment = defaults => new Comment(defaults)\npostcss.atRule = defaults => new AtRule(defaults)\npostcss.decl = defaults => new Declaration(defaults)\npostcss.rule = defaults => new Rule(defaults)\npostcss.root = defaults => new Root(defaults)\npostcss.document = defaults => new Document(defaults)\n\npostcss.CssSyntaxError = CssSyntaxError\npostcss.Declaration = Declaration\npostcss.Container = Container\npostcss.Processor = Processor\npostcss.Document = Document\npostcss.Comment = Comment\npostcss.Warning = Warning\npostcss.AtRule = AtRule\npostcss.Result = Result\npostcss.Input = Input\npostcss.Rule = Rule\npostcss.Root = Root\npostcss.Node = Node\n\nLazyResult.registerPostcss(postcss)\n\nmodule.exports = postcss\npostcss.default = postcss\n", "\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = unesc;\n// Many thanks for this post which made this migration much easier.\n// https://mathiasbynens.be/notes/css-escapes\n\n/**\n * \n * @param {string} str \n * @returns {[string, number]|undefined}\n */\nfunction gobbleHex(str) {\n  var lower = str.toLowerCase();\n  var hex = '';\n  var spaceTerminated = false;\n  for (var i = 0; i < 6 && lower[i] !== undefined; i++) {\n    var code = lower.charCodeAt(i);\n    // check to see if we are dealing with a valid hex char [a-f|0-9]\n    var valid = code >= 97 && code <= 102 || code >= 48 && code <= 57;\n    // https://drafts.csswg.org/css-syntax/#consume-escaped-code-point\n    spaceTerminated = code === 32;\n    if (!valid) {\n      break;\n    }\n    hex += lower[i];\n  }\n  if (hex.length === 0) {\n    return undefined;\n  }\n  var codePoint = parseInt(hex, 16);\n  var isSurrogate = codePoint >= 0xD800 && codePoint <= 0xDFFF;\n  // Add special case for\n  // \"If this number is zero, or is for a surrogate, or is greater than the maximum allowed code point\"\n  // https://drafts.csswg.org/css-syntax/#maximum-allowed-code-point\n  if (isSurrogate || codePoint === 0x0000 || codePoint > 0x10FFFF) {\n    return [\"\\uFFFD\", hex.length + (spaceTerminated ? 1 : 0)];\n  }\n  return [String.fromCodePoint(codePoint), hex.length + (spaceTerminated ? 1 : 0)];\n}\nvar CONTAINS_ESCAPE = /\\\\/;\nfunction unesc(str) {\n  var needToProcess = CONTAINS_ESCAPE.test(str);\n  if (!needToProcess) {\n    return str;\n  }\n  var ret = \"\";\n  for (var i = 0; i < str.length; i++) {\n    if (str[i] === \"\\\\\") {\n      var gobbled = gobbleHex(str.slice(i + 1, i + 7));\n      if (gobbled !== undefined) {\n        ret += gobbled[0];\n        i += gobbled[1];\n        continue;\n      }\n\n      // Retain a pair of \\\\ if double escaped `\\\\\\\\`\n      // https://github.com/postcss/postcss-selector-parser/commit/268c9a7656fb53f543dc620aa5b73a30ec3ff20e\n      if (str[i + 1] === \"\\\\\") {\n        ret += \"\\\\\";\n        i++;\n        continue;\n      }\n\n      // if \\\\ is at the end of the string retain it\n      // https://github.com/postcss/postcss-selector-parser/commit/01a6b346e3612ce1ab20219acc26abdc259ccefb\n      if (str.length === i + 1) {\n        ret += str[i];\n      }\n      continue;\n    }\n    ret += str[i];\n  }\n  return ret;\n}\nmodule.exports = exports.default;", "\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = getProp;\nfunction getProp(obj) {\n  for (var _len = arguments.length, props = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    props[_key - 1] = arguments[_key];\n  }\n  while (props.length > 0) {\n    var prop = props.shift();\n    if (!obj[prop]) {\n      return undefined;\n    }\n    obj = obj[prop];\n  }\n  return obj;\n}\nmodule.exports = exports.default;", "\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = ensureObject;\nfunction ensureObject(obj) {\n  for (var _len = arguments.length, props = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    props[_key - 1] = arguments[_key];\n  }\n  while (props.length > 0) {\n    var prop = props.shift();\n    if (!obj[prop]) {\n      obj[prop] = {};\n    }\n    obj = obj[prop];\n  }\n}\nmodule.exports = exports.default;", "\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = stripComments;\nfunction stripComments(str) {\n  var s = \"\";\n  var commentStart = str.indexOf(\"/*\");\n  var lastEnd = 0;\n  while (commentStart >= 0) {\n    s = s + str.slice(lastEnd, commentStart);\n    var commentEnd = str.indexOf(\"*/\", commentStart + 2);\n    if (commentEnd < 0) {\n      return s;\n    }\n    lastEnd = commentEnd + 2;\n    commentStart = str.indexOf(\"/*\", lastEnd);\n  }\n  s = s + str.slice(lastEnd);\n  return s;\n}\nmodule.exports = exports.default;", "\"use strict\";\n\nexports.__esModule = true;\nexports.unesc = exports.stripComments = exports.getProp = exports.ensureObject = void 0;\nvar _unesc = _interopRequireDefault(require(\"./unesc\"));\nexports.unesc = _unesc[\"default\"];\nvar _getProp = _interopRequireDefault(require(\"./getProp\"));\nexports.getProp = _getProp[\"default\"];\nvar _ensureObject = _interopRequireDefault(require(\"./ensureObject\"));\nexports.ensureObject = _ensureObject[\"default\"];\nvar _stripComments = _interopRequireDefault(require(\"./stripComments\"));\nexports.stripComments = _stripComments[\"default\"];\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }", "\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar _util = require(\"../util\");\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nvar cloneNode = function cloneNode(obj, parent) {\n  if (typeof obj !== 'object' || obj === null) {\n    return obj;\n  }\n  var cloned = new obj.constructor();\n  for (var i in obj) {\n    if (!obj.hasOwnProperty(i)) {\n      continue;\n    }\n    var value = obj[i];\n    var type = typeof value;\n    if (i === 'parent' && type === 'object') {\n      if (parent) {\n        cloned[i] = parent;\n      }\n    } else if (value instanceof Array) {\n      cloned[i] = value.map(function (j) {\n        return cloneNode(j, cloned);\n      });\n    } else {\n      cloned[i] = cloneNode(value, cloned);\n    }\n  }\n  return cloned;\n};\nvar Node = /*#__PURE__*/function () {\n  function Node(opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    Object.assign(this, opts);\n    this.spaces = this.spaces || {};\n    this.spaces.before = this.spaces.before || '';\n    this.spaces.after = this.spaces.after || '';\n  }\n  var _proto = Node.prototype;\n  _proto.remove = function remove() {\n    if (this.parent) {\n      this.parent.removeChild(this);\n    }\n    this.parent = undefined;\n    return this;\n  };\n  _proto.replaceWith = function replaceWith() {\n    if (this.parent) {\n      for (var index in arguments) {\n        this.parent.insertBefore(this, arguments[index]);\n      }\n      this.remove();\n    }\n    return this;\n  };\n  _proto.next = function next() {\n    return this.parent.at(this.parent.index(this) + 1);\n  };\n  _proto.prev = function prev() {\n    return this.parent.at(this.parent.index(this) - 1);\n  };\n  _proto.clone = function clone(overrides) {\n    if (overrides === void 0) {\n      overrides = {};\n    }\n    var cloned = cloneNode(this);\n    for (var name in overrides) {\n      cloned[name] = overrides[name];\n    }\n    return cloned;\n  }\n\n  /**\n   * Some non-standard syntax doesn't follow normal escaping rules for css.\n   * This allows non standard syntax to be appended to an existing property\n   * by specifying the escaped value. By specifying the escaped value,\n   * illegal characters are allowed to be directly inserted into css output.\n   * @param {string} name the property to set\n   * @param {any} value the unescaped value of the property\n   * @param {string} valueEscaped optional. the escaped value of the property.\n   */;\n  _proto.appendToPropertyAndEscape = function appendToPropertyAndEscape(name, value, valueEscaped) {\n    if (!this.raws) {\n      this.raws = {};\n    }\n    var originalValue = this[name];\n    var originalEscaped = this.raws[name];\n    this[name] = originalValue + value; // this may trigger a setter that updates raws, so it has to be set first.\n    if (originalEscaped || valueEscaped !== value) {\n      this.raws[name] = (originalEscaped || originalValue) + valueEscaped;\n    } else {\n      delete this.raws[name]; // delete any escaped value that was created by the setter.\n    }\n  }\n\n  /**\n   * Some non-standard syntax doesn't follow normal escaping rules for css.\n   * This allows the escaped value to be specified directly, allowing illegal\n   * characters to be directly inserted into css output.\n   * @param {string} name the property to set\n   * @param {any} value the unescaped value of the property\n   * @param {string} valueEscaped the escaped value of the property.\n   */;\n  _proto.setPropertyAndEscape = function setPropertyAndEscape(name, value, valueEscaped) {\n    if (!this.raws) {\n      this.raws = {};\n    }\n    this[name] = value; // this may trigger a setter that updates raws, so it has to be set first.\n    this.raws[name] = valueEscaped;\n  }\n\n  /**\n   * When you want a value to passed through to CSS directly. This method\n   * deletes the corresponding raw value causing the stringifier to fallback\n   * to the unescaped value.\n   * @param {string} name the property to set.\n   * @param {any} value The value that is both escaped and unescaped.\n   */;\n  _proto.setPropertyWithoutEscape = function setPropertyWithoutEscape(name, value) {\n    this[name] = value; // this may trigger a setter that updates raws, so it has to be set first.\n    if (this.raws) {\n      delete this.raws[name];\n    }\n  }\n\n  /**\n   *\n   * @param {number} line The number (starting with 1)\n   * @param {number} column The column number (starting with 1)\n   */;\n  _proto.isAtPosition = function isAtPosition(line, column) {\n    if (this.source && this.source.start && this.source.end) {\n      if (this.source.start.line > line) {\n        return false;\n      }\n      if (this.source.end.line < line) {\n        return false;\n      }\n      if (this.source.start.line === line && this.source.start.column > column) {\n        return false;\n      }\n      if (this.source.end.line === line && this.source.end.column < column) {\n        return false;\n      }\n      return true;\n    }\n    return undefined;\n  };\n  _proto.stringifyProperty = function stringifyProperty(name) {\n    return this.raws && this.raws[name] || this[name];\n  };\n  _proto.valueToString = function valueToString() {\n    return String(this.stringifyProperty(\"value\"));\n  };\n  _proto.toString = function toString() {\n    return [this.rawSpaceBefore, this.valueToString(), this.rawSpaceAfter].join('');\n  };\n  _createClass(Node, [{\n    key: \"rawSpaceBefore\",\n    get: function get() {\n      var rawSpace = this.raws && this.raws.spaces && this.raws.spaces.before;\n      if (rawSpace === undefined) {\n        rawSpace = this.spaces && this.spaces.before;\n      }\n      return rawSpace || \"\";\n    },\n    set: function set(raw) {\n      (0, _util.ensureObject)(this, \"raws\", \"spaces\");\n      this.raws.spaces.before = raw;\n    }\n  }, {\n    key: \"rawSpaceAfter\",\n    get: function get() {\n      var rawSpace = this.raws && this.raws.spaces && this.raws.spaces.after;\n      if (rawSpace === undefined) {\n        rawSpace = this.spaces.after;\n      }\n      return rawSpace || \"\";\n    },\n    set: function set(raw) {\n      (0, _util.ensureObject)(this, \"raws\", \"spaces\");\n      this.raws.spaces.after = raw;\n    }\n  }]);\n  return Node;\n}();\nexports[\"default\"] = Node;\nmodule.exports = exports.default;", "\"use strict\";\n\nexports.__esModule = true;\nexports.UNIVERSAL = exports.TAG = exports.STRING = exports.SELECTOR = exports.ROOT = exports.PSEUDO = exports.NESTING = exports.ID = exports.COMMENT = exports.COMBINATOR = exports.CLASS = exports.ATTRIBUTE = void 0;\nvar TAG = 'tag';\nexports.TAG = TAG;\nvar STRING = 'string';\nexports.STRING = STRING;\nvar SELECTOR = 'selector';\nexports.SELECTOR = SELECTOR;\nvar ROOT = 'root';\nexports.ROOT = ROOT;\nvar PSEUDO = 'pseudo';\nexports.PSEUDO = PSEUDO;\nvar NESTING = 'nesting';\nexports.NESTING = NESTING;\nvar ID = 'id';\nexports.ID = ID;\nvar COMMENT = 'comment';\nexports.COMMENT = COMMENT;\nvar COMBINATOR = 'combinator';\nexports.COMBINATOR = COMBINATOR;\nvar CLASS = 'class';\nexports.CLASS = CLASS;\nvar ATTRIBUTE = 'attribute';\nexports.ATTRIBUTE = ATTRIBUTE;\nvar UNIVERSAL = 'universal';\nexports.UNIVERSAL = UNIVERSAL;", "\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar _node = _interopRequireDefault(require(\"./node\"));\nvar types = _interopRequireWildcard(require(\"./types\"));\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nvar Container = /*#__PURE__*/function (_Node) {\n  _inheritsLoose(Container, _Node);\n  function Container(opts) {\n    var _this;\n    _this = _Node.call(this, opts) || this;\n    if (!_this.nodes) {\n      _this.nodes = [];\n    }\n    return _this;\n  }\n  var _proto = Container.prototype;\n  _proto.append = function append(selector) {\n    selector.parent = this;\n    this.nodes.push(selector);\n    return this;\n  };\n  _proto.prepend = function prepend(selector) {\n    selector.parent = this;\n    this.nodes.unshift(selector);\n    return this;\n  };\n  _proto.at = function at(index) {\n    return this.nodes[index];\n  };\n  _proto.index = function index(child) {\n    if (typeof child === 'number') {\n      return child;\n    }\n    return this.nodes.indexOf(child);\n  };\n  _proto.removeChild = function removeChild(child) {\n    child = this.index(child);\n    this.at(child).parent = undefined;\n    this.nodes.splice(child, 1);\n    var index;\n    for (var id in this.indexes) {\n      index = this.indexes[id];\n      if (index >= child) {\n        this.indexes[id] = index - 1;\n      }\n    }\n    return this;\n  };\n  _proto.removeAll = function removeAll() {\n    for (var _iterator = _createForOfIteratorHelperLoose(this.nodes), _step; !(_step = _iterator()).done;) {\n      var node = _step.value;\n      node.parent = undefined;\n    }\n    this.nodes = [];\n    return this;\n  };\n  _proto.empty = function empty() {\n    return this.removeAll();\n  };\n  _proto.insertAfter = function insertAfter(oldNode, newNode) {\n    newNode.parent = this;\n    var oldIndex = this.index(oldNode);\n    this.nodes.splice(oldIndex + 1, 0, newNode);\n    newNode.parent = this;\n    var index;\n    for (var id in this.indexes) {\n      index = this.indexes[id];\n      if (oldIndex <= index) {\n        this.indexes[id] = index + 1;\n      }\n    }\n    return this;\n  };\n  _proto.insertBefore = function insertBefore(oldNode, newNode) {\n    newNode.parent = this;\n    var oldIndex = this.index(oldNode);\n    this.nodes.splice(oldIndex, 0, newNode);\n    newNode.parent = this;\n    var index;\n    for (var id in this.indexes) {\n      index = this.indexes[id];\n      if (index <= oldIndex) {\n        this.indexes[id] = index + 1;\n      }\n    }\n    return this;\n  };\n  _proto._findChildAtPosition = function _findChildAtPosition(line, col) {\n    var found = undefined;\n    this.each(function (node) {\n      if (node.atPosition) {\n        var foundChild = node.atPosition(line, col);\n        if (foundChild) {\n          found = foundChild;\n          return false;\n        }\n      } else if (node.isAtPosition(line, col)) {\n        found = node;\n        return false;\n      }\n    });\n    return found;\n  }\n\n  /**\n   * Return the most specific node at the line and column number given.\n   * The source location is based on the original parsed location, locations aren't\n   * updated as selector nodes are mutated.\n   * \n   * Note that this location is relative to the location of the first character\n   * of the selector, and not the location of the selector in the overall document\n   * when used in conjunction with postcss.\n   *\n   * If not found, returns undefined.\n   * @param {number} line The line number of the node to find. (1-based index)\n   * @param {number} col  The column number of the node to find. (1-based index)\n   */;\n  _proto.atPosition = function atPosition(line, col) {\n    if (this.isAtPosition(line, col)) {\n      return this._findChildAtPosition(line, col) || this;\n    } else {\n      return undefined;\n    }\n  };\n  _proto._inferEndPosition = function _inferEndPosition() {\n    if (this.last && this.last.source && this.last.source.end) {\n      this.source = this.source || {};\n      this.source.end = this.source.end || {};\n      Object.assign(this.source.end, this.last.source.end);\n    }\n  };\n  _proto.each = function each(callback) {\n    if (!this.lastEach) {\n      this.lastEach = 0;\n    }\n    if (!this.indexes) {\n      this.indexes = {};\n    }\n    this.lastEach++;\n    var id = this.lastEach;\n    this.indexes[id] = 0;\n    if (!this.length) {\n      return undefined;\n    }\n    var index, result;\n    while (this.indexes[id] < this.length) {\n      index = this.indexes[id];\n      result = callback(this.at(index), index);\n      if (result === false) {\n        break;\n      }\n      this.indexes[id] += 1;\n    }\n    delete this.indexes[id];\n    if (result === false) {\n      return false;\n    }\n  };\n  _proto.walk = function walk(callback) {\n    return this.each(function (node, i) {\n      var result = callback(node, i);\n      if (result !== false && node.length) {\n        result = node.walk(callback);\n      }\n      if (result === false) {\n        return false;\n      }\n    });\n  };\n  _proto.walkAttributes = function walkAttributes(callback) {\n    var _this2 = this;\n    return this.walk(function (selector) {\n      if (selector.type === types.ATTRIBUTE) {\n        return callback.call(_this2, selector);\n      }\n    });\n  };\n  _proto.walkClasses = function walkClasses(callback) {\n    var _this3 = this;\n    return this.walk(function (selector) {\n      if (selector.type === types.CLASS) {\n        return callback.call(_this3, selector);\n      }\n    });\n  };\n  _proto.walkCombinators = function walkCombinators(callback) {\n    var _this4 = this;\n    return this.walk(function (selector) {\n      if (selector.type === types.COMBINATOR) {\n        return callback.call(_this4, selector);\n      }\n    });\n  };\n  _proto.walkComments = function walkComments(callback) {\n    var _this5 = this;\n    return this.walk(function (selector) {\n      if (selector.type === types.COMMENT) {\n        return callback.call(_this5, selector);\n      }\n    });\n  };\n  _proto.walkIds = function walkIds(callback) {\n    var _this6 = this;\n    return this.walk(function (selector) {\n      if (selector.type === types.ID) {\n        return callback.call(_this6, selector);\n      }\n    });\n  };\n  _proto.walkNesting = function walkNesting(callback) {\n    var _this7 = this;\n    return this.walk(function (selector) {\n      if (selector.type === types.NESTING) {\n        return callback.call(_this7, selector);\n      }\n    });\n  };\n  _proto.walkPseudos = function walkPseudos(callback) {\n    var _this8 = this;\n    return this.walk(function (selector) {\n      if (selector.type === types.PSEUDO) {\n        return callback.call(_this8, selector);\n      }\n    });\n  };\n  _proto.walkTags = function walkTags(callback) {\n    var _this9 = this;\n    return this.walk(function (selector) {\n      if (selector.type === types.TAG) {\n        return callback.call(_this9, selector);\n      }\n    });\n  };\n  _proto.walkUniversals = function walkUniversals(callback) {\n    var _this10 = this;\n    return this.walk(function (selector) {\n      if (selector.type === types.UNIVERSAL) {\n        return callback.call(_this10, selector);\n      }\n    });\n  };\n  _proto.split = function split(callback) {\n    var _this11 = this;\n    var current = [];\n    return this.reduce(function (memo, node, index) {\n      var split = callback.call(_this11, node);\n      current.push(node);\n      if (split) {\n        memo.push(current);\n        current = [];\n      } else if (index === _this11.length - 1) {\n        memo.push(current);\n      }\n      return memo;\n    }, []);\n  };\n  _proto.map = function map(callback) {\n    return this.nodes.map(callback);\n  };\n  _proto.reduce = function reduce(callback, memo) {\n    return this.nodes.reduce(callback, memo);\n  };\n  _proto.every = function every(callback) {\n    return this.nodes.every(callback);\n  };\n  _proto.some = function some(callback) {\n    return this.nodes.some(callback);\n  };\n  _proto.filter = function filter(callback) {\n    return this.nodes.filter(callback);\n  };\n  _proto.sort = function sort(callback) {\n    return this.nodes.sort(callback);\n  };\n  _proto.toString = function toString() {\n    return this.map(String).join('');\n  };\n  _createClass(Container, [{\n    key: \"first\",\n    get: function get() {\n      return this.at(0);\n    }\n  }, {\n    key: \"last\",\n    get: function get() {\n      return this.at(this.length - 1);\n    }\n  }, {\n    key: \"length\",\n    get: function get() {\n      return this.nodes.length;\n    }\n  }]);\n  return Container;\n}(_node[\"default\"]);\nexports[\"default\"] = Container;\nmodule.exports = exports.default;", "\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar _container = _interopRequireDefault(require(\"./container\"));\nvar _types = require(\"./types\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nvar Root = /*#__PURE__*/function (_Container) {\n  _inheritsLoose(Root, _Container);\n  function Root(opts) {\n    var _this;\n    _this = _Container.call(this, opts) || this;\n    _this.type = _types.ROOT;\n    return _this;\n  }\n  var _proto = Root.prototype;\n  _proto.toString = function toString() {\n    var str = this.reduce(function (memo, selector) {\n      memo.push(String(selector));\n      return memo;\n    }, []).join(',');\n    return this.trailingComma ? str + ',' : str;\n  };\n  _proto.error = function error(message, options) {\n    if (this._error) {\n      return this._error(message, options);\n    } else {\n      return new Error(message);\n    }\n  };\n  _createClass(Root, [{\n    key: \"errorGenerator\",\n    set: function set(handler) {\n      this._error = handler;\n    }\n  }]);\n  return Root;\n}(_container[\"default\"]);\nexports[\"default\"] = Root;\nmodule.exports = exports.default;", "\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar _container = _interopRequireDefault(require(\"./container\"));\nvar _types = require(\"./types\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nvar Selector = /*#__PURE__*/function (_Container) {\n  _inheritsLoose(Selector, _Container);\n  function Selector(opts) {\n    var _this;\n    _this = _Container.call(this, opts) || this;\n    _this.type = _types.SELECTOR;\n    return _this;\n  }\n  return Selector;\n}(_container[\"default\"]);\nexports[\"default\"] = Selector;\nmodule.exports = exports.default;", "/*! https://mths.be/cssesc v3.0.0 by @mathias */\n'use strict';\n\nvar object = {};\nvar hasOwnProperty = object.hasOwnProperty;\nvar merge = function merge(options, defaults) {\n\tif (!options) {\n\t\treturn defaults;\n\t}\n\tvar result = {};\n\tfor (var key in defaults) {\n\t\t// `if (defaults.hasOwnProperty(key) { \u2026 }` is not needed here, since\n\t\t// only recognized option names are used.\n\t\tresult[key] = hasOwnProperty.call(options, key) ? options[key] : defaults[key];\n\t}\n\treturn result;\n};\n\nvar regexAnySingleEscape = /[ -,\\.\\/:-@\\[-\\^`\\{-~]/;\nvar regexSingleEscape = /[ -,\\.\\/:-@\\[\\]\\^`\\{-~]/;\nvar regexAlwaysEscape = /['\"\\\\]/;\nvar regexExcessiveSpaces = /(^|\\\\+)?(\\\\[A-F0-9]{1,6})\\x20(?![a-fA-F0-9\\x20])/g;\n\n// https://mathiasbynens.be/notes/css-escapes#css\nvar cssesc = function cssesc(string, options) {\n\toptions = merge(options, cssesc.options);\n\tif (options.quotes != 'single' && options.quotes != 'double') {\n\t\toptions.quotes = 'single';\n\t}\n\tvar quote = options.quotes == 'double' ? '\"' : '\\'';\n\tvar isIdentifier = options.isIdentifier;\n\n\tvar firstChar = string.charAt(0);\n\tvar output = '';\n\tvar counter = 0;\n\tvar length = string.length;\n\twhile (counter < length) {\n\t\tvar character = string.charAt(counter++);\n\t\tvar codePoint = character.charCodeAt();\n\t\tvar value = void 0;\n\t\t// If it\u2019s not a printable ASCII character\u2026\n\t\tif (codePoint < 0x20 || codePoint > 0x7E) {\n\t\t\tif (codePoint >= 0xD800 && codePoint <= 0xDBFF && counter < length) {\n\t\t\t\t// It\u2019s a high surrogate, and there is a next character.\n\t\t\t\tvar extra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) {\n\t\t\t\t\t// next character is low surrogate\n\t\t\t\t\tcodePoint = ((codePoint & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000;\n\t\t\t\t} else {\n\t\t\t\t\t// It\u2019s an unmatched surrogate; only append this code unit, in case\n\t\t\t\t\t// the next code unit is the high surrogate of a surrogate pair.\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvalue = '\\\\' + codePoint.toString(16).toUpperCase() + ' ';\n\t\t} else {\n\t\t\tif (options.escapeEverything) {\n\t\t\t\tif (regexAnySingleEscape.test(character)) {\n\t\t\t\t\tvalue = '\\\\' + character;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = '\\\\' + codePoint.toString(16).toUpperCase() + ' ';\n\t\t\t\t}\n\t\t\t} else if (/[\\t\\n\\f\\r\\x0B]/.test(character)) {\n\t\t\t\tvalue = '\\\\' + codePoint.toString(16).toUpperCase() + ' ';\n\t\t\t} else if (character == '\\\\' || !isIdentifier && (character == '\"' && quote == character || character == '\\'' && quote == character) || isIdentifier && regexSingleEscape.test(character)) {\n\t\t\t\tvalue = '\\\\' + character;\n\t\t\t} else {\n\t\t\t\tvalue = character;\n\t\t\t}\n\t\t}\n\t\toutput += value;\n\t}\n\n\tif (isIdentifier) {\n\t\tif (/^-[-\\d]/.test(output)) {\n\t\t\toutput = '\\\\-' + output.slice(1);\n\t\t} else if (/\\d/.test(firstChar)) {\n\t\t\toutput = '\\\\3' + firstChar + ' ' + output.slice(1);\n\t\t}\n\t}\n\n\t// Remove spaces after `\\HEX` escapes that are not followed by a hex digit,\n\t// since they\u2019re redundant. Note that this is only possible if the escape\n\t// sequence isn\u2019t preceded by an odd number of backslashes.\n\toutput = output.replace(regexExcessiveSpaces, function ($0, $1, $2) {\n\t\tif ($1 && $1.length % 2) {\n\t\t\t// It\u2019s not safe to remove the space, so don\u2019t.\n\t\t\treturn $0;\n\t\t}\n\t\t// Strip the space.\n\t\treturn ($1 || '') + $2;\n\t});\n\n\tif (!isIdentifier && options.wrap) {\n\t\treturn quote + output + quote;\n\t}\n\treturn output;\n};\n\n// Expose default options (so they can be overridden globally).\ncssesc.options = {\n\t'escapeEverything': false,\n\t'isIdentifier': false,\n\t'quotes': 'single',\n\t'wrap': false\n};\n\ncssesc.version = '3.0.0';\n\nmodule.exports = cssesc;\n", "\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar _cssesc = _interopRequireDefault(require(\"cssesc\"));\nvar _util = require(\"../util\");\nvar _node = _interopRequireDefault(require(\"./node\"));\nvar _types = require(\"./types\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nvar ClassName = /*#__PURE__*/function (_Node) {\n  _inheritsLoose(ClassName, _Node);\n  function ClassName(opts) {\n    var _this;\n    _this = _Node.call(this, opts) || this;\n    _this.type = _types.CLASS;\n    _this._constructed = true;\n    return _this;\n  }\n  var _proto = ClassName.prototype;\n  _proto.valueToString = function valueToString() {\n    return '.' + _Node.prototype.valueToString.call(this);\n  };\n  _createClass(ClassName, [{\n    key: \"value\",\n    get: function get() {\n      return this._value;\n    },\n    set: function set(v) {\n      if (this._constructed) {\n        var escaped = (0, _cssesc[\"default\"])(v, {\n          isIdentifier: true\n        });\n        if (escaped !== v) {\n          (0, _util.ensureObject)(this, \"raws\");\n          this.raws.value = escaped;\n        } else if (this.raws) {\n          delete this.raws.value;\n        }\n      }\n      this._value = v;\n    }\n  }]);\n  return ClassName;\n}(_node[\"default\"]);\nexports[\"default\"] = ClassName;\nmodule.exports = exports.default;", "\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar _node = _interopRequireDefault(require(\"./node\"));\nvar _types = require(\"./types\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nvar Comment = /*#__PURE__*/function (_Node) {\n  _inheritsLoose(Comment, _Node);\n  function Comment(opts) {\n    var _this;\n    _this = _Node.call(this, opts) || this;\n    _this.type = _types.COMMENT;\n    return _this;\n  }\n  return Comment;\n}(_node[\"default\"]);\nexports[\"default\"] = Comment;\nmodule.exports = exports.default;", "\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar _node = _interopRequireDefault(require(\"./node\"));\nvar _types = require(\"./types\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nvar ID = /*#__PURE__*/function (_Node) {\n  _inheritsLoose(ID, _Node);\n  function ID(opts) {\n    var _this;\n    _this = _Node.call(this, opts) || this;\n    _this.type = _types.ID;\n    return _this;\n  }\n  var _proto = ID.prototype;\n  _proto.valueToString = function valueToString() {\n    return '#' + _Node.prototype.valueToString.call(this);\n  };\n  return ID;\n}(_node[\"default\"]);\nexports[\"default\"] = ID;\nmodule.exports = exports.default;", "\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar _cssesc = _interopRequireDefault(require(\"cssesc\"));\nvar _util = require(\"../util\");\nvar _node = _interopRequireDefault(require(\"./node\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nvar Namespace = /*#__PURE__*/function (_Node) {\n  _inheritsLoose(Namespace, _Node);\n  function Namespace() {\n    return _Node.apply(this, arguments) || this;\n  }\n  var _proto = Namespace.prototype;\n  _proto.qualifiedName = function qualifiedName(value) {\n    if (this.namespace) {\n      return this.namespaceString + \"|\" + value;\n    } else {\n      return value;\n    }\n  };\n  _proto.valueToString = function valueToString() {\n    return this.qualifiedName(_Node.prototype.valueToString.call(this));\n  };\n  _createClass(Namespace, [{\n    key: \"namespace\",\n    get: function get() {\n      return this._namespace;\n    },\n    set: function set(namespace) {\n      if (namespace === true || namespace === \"*\" || namespace === \"&\") {\n        this._namespace = namespace;\n        if (this.raws) {\n          delete this.raws.namespace;\n        }\n        return;\n      }\n      var escaped = (0, _cssesc[\"default\"])(namespace, {\n        isIdentifier: true\n      });\n      this._namespace = namespace;\n      if (escaped !== namespace) {\n        (0, _util.ensureObject)(this, \"raws\");\n        this.raws.namespace = escaped;\n      } else if (this.raws) {\n        delete this.raws.namespace;\n      }\n    }\n  }, {\n    key: \"ns\",\n    get: function get() {\n      return this._namespace;\n    },\n    set: function set(namespace) {\n      this.namespace = namespace;\n    }\n  }, {\n    key: \"namespaceString\",\n    get: function get() {\n      if (this.namespace) {\n        var ns = this.stringifyProperty(\"namespace\");\n        if (ns === true) {\n          return '';\n        } else {\n          return ns;\n        }\n      } else {\n        return '';\n      }\n    }\n  }]);\n  return Namespace;\n}(_node[\"default\"]);\nexports[\"default\"] = Namespace;\n;\nmodule.exports = exports.default;", "\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar _namespace = _interopRequireDefault(require(\"./namespace\"));\nvar _types = require(\"./types\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nvar Tag = /*#__PURE__*/function (_Namespace) {\n  _inheritsLoose(Tag, _Namespace);\n  function Tag(opts) {\n    var _this;\n    _this = _Namespace.call(this, opts) || this;\n    _this.type = _types.TAG;\n    return _this;\n  }\n  return Tag;\n}(_namespace[\"default\"]);\nexports[\"default\"] = Tag;\nmodule.exports = exports.default;", "\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar _node = _interopRequireDefault(require(\"./node\"));\nvar _types = require(\"./types\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nvar String = /*#__PURE__*/function (_Node) {\n  _inheritsLoose(String, _Node);\n  function String(opts) {\n    var _this;\n    _this = _Node.call(this, opts) || this;\n    _this.type = _types.STRING;\n    return _this;\n  }\n  return String;\n}(_node[\"default\"]);\nexports[\"default\"] = String;\nmodule.exports = exports.default;", "\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar _container = _interopRequireDefault(require(\"./container\"));\nvar _types = require(\"./types\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nvar Pseudo = /*#__PURE__*/function (_Container) {\n  _inheritsLoose(Pseudo, _Container);\n  function Pseudo(opts) {\n    var _this;\n    _this = _Container.call(this, opts) || this;\n    _this.type = _types.PSEUDO;\n    return _this;\n  }\n  var _proto = Pseudo.prototype;\n  _proto.toString = function toString() {\n    var params = this.length ? '(' + this.map(String).join(',') + ')' : '';\n    return [this.rawSpaceBefore, this.stringifyProperty(\"value\"), params, this.rawSpaceAfter].join('');\n  };\n  return Pseudo;\n}(_container[\"default\"]);\nexports[\"default\"] = Pseudo;\nmodule.exports = exports.default;", "\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n", "\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nexports.unescapeValue = unescapeValue;\nvar _cssesc = _interopRequireDefault(require(\"cssesc\"));\nvar _unesc = _interopRequireDefault(require(\"../util/unesc\"));\nvar _namespace = _interopRequireDefault(require(\"./namespace\"));\nvar _types = require(\"./types\");\nvar _CSSESC_QUOTE_OPTIONS;\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nvar deprecate = require(\"util-deprecate\");\nvar WRAPPED_IN_QUOTES = /^('|\")([^]*)\\1$/;\nvar warnOfDeprecatedValueAssignment = deprecate(function () {}, \"Assigning an attribute a value containing characters that might need to be escaped is deprecated. \" + \"Call attribute.setValue() instead.\");\nvar warnOfDeprecatedQuotedAssignment = deprecate(function () {}, \"Assigning attr.quoted is deprecated and has no effect. Assign to attr.quoteMark instead.\");\nvar warnOfDeprecatedConstructor = deprecate(function () {}, \"Constructing an Attribute selector with a value without specifying quoteMark is deprecated. Note: The value should be unescaped now.\");\nfunction unescapeValue(value) {\n  var deprecatedUsage = false;\n  var quoteMark = null;\n  var unescaped = value;\n  var m = unescaped.match(WRAPPED_IN_QUOTES);\n  if (m) {\n    quoteMark = m[1];\n    unescaped = m[2];\n  }\n  unescaped = (0, _unesc[\"default\"])(unescaped);\n  if (unescaped !== value) {\n    deprecatedUsage = true;\n  }\n  return {\n    deprecatedUsage: deprecatedUsage,\n    unescaped: unescaped,\n    quoteMark: quoteMark\n  };\n}\nfunction handleDeprecatedContructorOpts(opts) {\n  if (opts.quoteMark !== undefined) {\n    return opts;\n  }\n  if (opts.value === undefined) {\n    return opts;\n  }\n  warnOfDeprecatedConstructor();\n  var _unescapeValue = unescapeValue(opts.value),\n    quoteMark = _unescapeValue.quoteMark,\n    unescaped = _unescapeValue.unescaped;\n  if (!opts.raws) {\n    opts.raws = {};\n  }\n  if (opts.raws.value === undefined) {\n    opts.raws.value = opts.value;\n  }\n  opts.value = unescaped;\n  opts.quoteMark = quoteMark;\n  return opts;\n}\nvar Attribute = /*#__PURE__*/function (_Namespace) {\n  _inheritsLoose(Attribute, _Namespace);\n  function Attribute(opts) {\n    var _this;\n    if (opts === void 0) {\n      opts = {};\n    }\n    _this = _Namespace.call(this, handleDeprecatedContructorOpts(opts)) || this;\n    _this.type = _types.ATTRIBUTE;\n    _this.raws = _this.raws || {};\n    Object.defineProperty(_this.raws, 'unquoted', {\n      get: deprecate(function () {\n        return _this.value;\n      }, \"attr.raws.unquoted is deprecated. Call attr.value instead.\"),\n      set: deprecate(function () {\n        return _this.value;\n      }, \"Setting attr.raws.unquoted is deprecated and has no effect. attr.value is unescaped by default now.\")\n    });\n    _this._constructed = true;\n    return _this;\n  }\n\n  /**\n   * Returns the Attribute's value quoted such that it would be legal to use\n   * in the value of a css file. The original value's quotation setting\n   * used for stringification is left unchanged. See `setValue(value, options)`\n   * if you want to control the quote settings of a new value for the attribute.\n   *\n   * You can also change the quotation used for the current value by setting quoteMark.\n   *\n   * Options:\n   *   * quoteMark {'\"' | \"'\" | null} - Use this value to quote the value. If this\n   *     option is not set, the original value for quoteMark will be used. If\n   *     indeterminate, a double quote is used. The legal values are:\n   *     * `null` - the value will be unquoted and characters will be escaped as necessary.\n   *     * `'` - the value will be quoted with a single quote and single quotes are escaped.\n   *     * `\"` - the value will be quoted with a double quote and double quotes are escaped.\n   *   * preferCurrentQuoteMark {boolean} - if true, prefer the source quote mark\n   *     over the quoteMark option value.\n   *   * smart {boolean} - if true, will select a quote mark based on the value\n   *     and the other options specified here. See the `smartQuoteMark()`\n   *     method.\n   **/\n  var _proto = Attribute.prototype;\n  _proto.getQuotedValue = function getQuotedValue(options) {\n    if (options === void 0) {\n      options = {};\n    }\n    var quoteMark = this._determineQuoteMark(options);\n    var cssescopts = CSSESC_QUOTE_OPTIONS[quoteMark];\n    var escaped = (0, _cssesc[\"default\"])(this._value, cssescopts);\n    return escaped;\n  };\n  _proto._determineQuoteMark = function _determineQuoteMark(options) {\n    return options.smart ? this.smartQuoteMark(options) : this.preferredQuoteMark(options);\n  }\n\n  /**\n   * Set the unescaped value with the specified quotation options. The value\n   * provided must not include any wrapping quote marks -- those quotes will\n   * be interpreted as part of the value and escaped accordingly.\n   */;\n  _proto.setValue = function setValue(value, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    this._value = value;\n    this._quoteMark = this._determineQuoteMark(options);\n    this._syncRawValue();\n  }\n\n  /**\n   * Intelligently select a quoteMark value based on the value's contents. If\n   * the value is a legal CSS ident, it will not be quoted. Otherwise a quote\n   * mark will be picked that minimizes the number of escapes.\n   *\n   * If there's no clear winner, the quote mark from these options is used,\n   * then the source quote mark (this is inverted if `preferCurrentQuoteMark` is\n   * true). If the quoteMark is unspecified, a double quote is used.\n   *\n   * @param options This takes the quoteMark and preferCurrentQuoteMark options\n   * from the quoteValue method.\n   */;\n  _proto.smartQuoteMark = function smartQuoteMark(options) {\n    var v = this.value;\n    var numSingleQuotes = v.replace(/[^']/g, '').length;\n    var numDoubleQuotes = v.replace(/[^\"]/g, '').length;\n    if (numSingleQuotes + numDoubleQuotes === 0) {\n      var escaped = (0, _cssesc[\"default\"])(v, {\n        isIdentifier: true\n      });\n      if (escaped === v) {\n        return Attribute.NO_QUOTE;\n      } else {\n        var pref = this.preferredQuoteMark(options);\n        if (pref === Attribute.NO_QUOTE) {\n          // pick a quote mark that isn't none and see if it's smaller\n          var quote = this.quoteMark || options.quoteMark || Attribute.DOUBLE_QUOTE;\n          var opts = CSSESC_QUOTE_OPTIONS[quote];\n          var quoteValue = (0, _cssesc[\"default\"])(v, opts);\n          if (quoteValue.length < escaped.length) {\n            return quote;\n          }\n        }\n        return pref;\n      }\n    } else if (numDoubleQuotes === numSingleQuotes) {\n      return this.preferredQuoteMark(options);\n    } else if (numDoubleQuotes < numSingleQuotes) {\n      return Attribute.DOUBLE_QUOTE;\n    } else {\n      return Attribute.SINGLE_QUOTE;\n    }\n  }\n\n  /**\n   * Selects the preferred quote mark based on the options and the current quote mark value.\n   * If you want the quote mark to depend on the attribute value, call `smartQuoteMark(opts)`\n   * instead.\n   */;\n  _proto.preferredQuoteMark = function preferredQuoteMark(options) {\n    var quoteMark = options.preferCurrentQuoteMark ? this.quoteMark : options.quoteMark;\n    if (quoteMark === undefined) {\n      quoteMark = options.preferCurrentQuoteMark ? options.quoteMark : this.quoteMark;\n    }\n    if (quoteMark === undefined) {\n      quoteMark = Attribute.DOUBLE_QUOTE;\n    }\n    return quoteMark;\n  };\n  _proto._syncRawValue = function _syncRawValue() {\n    var rawValue = (0, _cssesc[\"default\"])(this._value, CSSESC_QUOTE_OPTIONS[this.quoteMark]);\n    if (rawValue === this._value) {\n      if (this.raws) {\n        delete this.raws.value;\n      }\n    } else {\n      this.raws.value = rawValue;\n    }\n  };\n  _proto._handleEscapes = function _handleEscapes(prop, value) {\n    if (this._constructed) {\n      var escaped = (0, _cssesc[\"default\"])(value, {\n        isIdentifier: true\n      });\n      if (escaped !== value) {\n        this.raws[prop] = escaped;\n      } else {\n        delete this.raws[prop];\n      }\n    }\n  };\n  _proto._spacesFor = function _spacesFor(name) {\n    var attrSpaces = {\n      before: '',\n      after: ''\n    };\n    var spaces = this.spaces[name] || {};\n    var rawSpaces = this.raws.spaces && this.raws.spaces[name] || {};\n    return Object.assign(attrSpaces, spaces, rawSpaces);\n  };\n  _proto._stringFor = function _stringFor(name, spaceName, concat) {\n    if (spaceName === void 0) {\n      spaceName = name;\n    }\n    if (concat === void 0) {\n      concat = defaultAttrConcat;\n    }\n    var attrSpaces = this._spacesFor(spaceName);\n    return concat(this.stringifyProperty(name), attrSpaces);\n  }\n\n  /**\n   * returns the offset of the attribute part specified relative to the\n   * start of the node of the output string.\n   *\n   * * \"ns\" - alias for \"namespace\"\n   * * \"namespace\" - the namespace if it exists.\n   * * \"attribute\" - the attribute name\n   * * \"attributeNS\" - the start of the attribute or its namespace\n   * * \"operator\" - the match operator of the attribute\n   * * \"value\" - The value (string or identifier)\n   * * \"insensitive\" - the case insensitivity flag;\n   * @param part One of the possible values inside an attribute.\n   * @returns -1 if the name is invalid or the value doesn't exist in this attribute.\n   */;\n  _proto.offsetOf = function offsetOf(name) {\n    var count = 1;\n    var attributeSpaces = this._spacesFor(\"attribute\");\n    count += attributeSpaces.before.length;\n    if (name === \"namespace\" || name === \"ns\") {\n      return this.namespace ? count : -1;\n    }\n    if (name === \"attributeNS\") {\n      return count;\n    }\n    count += this.namespaceString.length;\n    if (this.namespace) {\n      count += 1;\n    }\n    if (name === \"attribute\") {\n      return count;\n    }\n    count += this.stringifyProperty(\"attribute\").length;\n    count += attributeSpaces.after.length;\n    var operatorSpaces = this._spacesFor(\"operator\");\n    count += operatorSpaces.before.length;\n    var operator = this.stringifyProperty(\"operator\");\n    if (name === \"operator\") {\n      return operator ? count : -1;\n    }\n    count += operator.length;\n    count += operatorSpaces.after.length;\n    var valueSpaces = this._spacesFor(\"value\");\n    count += valueSpaces.before.length;\n    var value = this.stringifyProperty(\"value\");\n    if (name === \"value\") {\n      return value ? count : -1;\n    }\n    count += value.length;\n    count += valueSpaces.after.length;\n    var insensitiveSpaces = this._spacesFor(\"insensitive\");\n    count += insensitiveSpaces.before.length;\n    if (name === \"insensitive\") {\n      return this.insensitive ? count : -1;\n    }\n    return -1;\n  };\n  _proto.toString = function toString() {\n    var _this2 = this;\n    var selector = [this.rawSpaceBefore, '['];\n    selector.push(this._stringFor('qualifiedAttribute', 'attribute'));\n    if (this.operator && (this.value || this.value === '')) {\n      selector.push(this._stringFor('operator'));\n      selector.push(this._stringFor('value'));\n      selector.push(this._stringFor('insensitiveFlag', 'insensitive', function (attrValue, attrSpaces) {\n        if (attrValue.length > 0 && !_this2.quoted && attrSpaces.before.length === 0 && !(_this2.spaces.value && _this2.spaces.value.after)) {\n          attrSpaces.before = \" \";\n        }\n        return defaultAttrConcat(attrValue, attrSpaces);\n      }));\n    }\n    selector.push(']');\n    selector.push(this.rawSpaceAfter);\n    return selector.join('');\n  };\n  _createClass(Attribute, [{\n    key: \"quoted\",\n    get: function get() {\n      var qm = this.quoteMark;\n      return qm === \"'\" || qm === '\"';\n    },\n    set: function set(value) {\n      warnOfDeprecatedQuotedAssignment();\n    }\n\n    /**\n     * returns a single (`'`) or double (`\"`) quote character if the value is quoted.\n     * returns `null` if the value is not quoted.\n     * returns `undefined` if the quotation state is unknown (this can happen when\n     * the attribute is constructed without specifying a quote mark.)\n     */\n  }, {\n    key: \"quoteMark\",\n    get: function get() {\n      return this._quoteMark;\n    }\n\n    /**\n     * Set the quote mark to be used by this attribute's value.\n     * If the quote mark changes, the raw (escaped) value at `attr.raws.value` of the attribute\n     * value is updated accordingly.\n     *\n     * @param {\"'\" | '\"' | null} quoteMark The quote mark or `null` if the value should be unquoted.\n     */,\n    set: function set(quoteMark) {\n      if (!this._constructed) {\n        this._quoteMark = quoteMark;\n        return;\n      }\n      if (this._quoteMark !== quoteMark) {\n        this._quoteMark = quoteMark;\n        this._syncRawValue();\n      }\n    }\n  }, {\n    key: \"qualifiedAttribute\",\n    get: function get() {\n      return this.qualifiedName(this.raws.attribute || this.attribute);\n    }\n  }, {\n    key: \"insensitiveFlag\",\n    get: function get() {\n      return this.insensitive ? 'i' : '';\n    }\n  }, {\n    key: \"value\",\n    get: function get() {\n      return this._value;\n    },\n    set:\n    /**\n     * Before 3.0, the value had to be set to an escaped value including any wrapped\n     * quote marks. In 3.0, the semantics of `Attribute.value` changed so that the value\n     * is unescaped during parsing and any quote marks are removed.\n     *\n     * Because the ambiguity of this semantic change, if you set `attr.value = newValue`,\n     * a deprecation warning is raised when the new value contains any characters that would\n     * require escaping (including if it contains wrapped quotes).\n     *\n     * Instead, you should call `attr.setValue(newValue, opts)` and pass options that describe\n     * how the new value is quoted.\n     */\n    function set(v) {\n      if (this._constructed) {\n        var _unescapeValue2 = unescapeValue(v),\n          deprecatedUsage = _unescapeValue2.deprecatedUsage,\n          unescaped = _unescapeValue2.unescaped,\n          quoteMark = _unescapeValue2.quoteMark;\n        if (deprecatedUsage) {\n          warnOfDeprecatedValueAssignment();\n        }\n        if (unescaped === this._value && quoteMark === this._quoteMark) {\n          return;\n        }\n        this._value = unescaped;\n        this._quoteMark = quoteMark;\n        this._syncRawValue();\n      } else {\n        this._value = v;\n      }\n    }\n  }, {\n    key: \"insensitive\",\n    get: function get() {\n      return this._insensitive;\n    }\n\n    /**\n     * Set the case insensitive flag.\n     * If the case insensitive flag changes, the raw (escaped) value at `attr.raws.insensitiveFlag`\n     * of the attribute is updated accordingly.\n     *\n     * @param {true | false} insensitive true if the attribute should match case-insensitively.\n     */,\n    set: function set(insensitive) {\n      if (!insensitive) {\n        this._insensitive = false;\n\n        // \"i\" and \"I\" can be used in \"this.raws.insensitiveFlag\" to store the original notation.\n        // When setting `attr.insensitive = false` both should be erased to ensure correct serialization.\n        if (this.raws && (this.raws.insensitiveFlag === 'I' || this.raws.insensitiveFlag === 'i')) {\n          this.raws.insensitiveFlag = undefined;\n        }\n      }\n      this._insensitive = insensitive;\n    }\n  }, {\n    key: \"attribute\",\n    get: function get() {\n      return this._attribute;\n    },\n    set: function set(name) {\n      this._handleEscapes(\"attribute\", name);\n      this._attribute = name;\n    }\n  }]);\n  return Attribute;\n}(_namespace[\"default\"]);\nexports[\"default\"] = Attribute;\nAttribute.NO_QUOTE = null;\nAttribute.SINGLE_QUOTE = \"'\";\nAttribute.DOUBLE_QUOTE = '\"';\nvar CSSESC_QUOTE_OPTIONS = (_CSSESC_QUOTE_OPTIONS = {\n  \"'\": {\n    quotes: 'single',\n    wrap: true\n  },\n  '\"': {\n    quotes: 'double',\n    wrap: true\n  }\n}, _CSSESC_QUOTE_OPTIONS[null] = {\n  isIdentifier: true\n}, _CSSESC_QUOTE_OPTIONS);\nfunction defaultAttrConcat(attrValue, attrSpaces) {\n  return \"\" + attrSpaces.before + attrValue + attrSpaces.after;\n}", "\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar _namespace = _interopRequireDefault(require(\"./namespace\"));\nvar _types = require(\"./types\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nvar Universal = /*#__PURE__*/function (_Namespace) {\n  _inheritsLoose(Universal, _Namespace);\n  function Universal(opts) {\n    var _this;\n    _this = _Namespace.call(this, opts) || this;\n    _this.type = _types.UNIVERSAL;\n    _this.value = '*';\n    return _this;\n  }\n  return Universal;\n}(_namespace[\"default\"]);\nexports[\"default\"] = Universal;\nmodule.exports = exports.default;", "\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar _node = _interopRequireDefault(require(\"./node\"));\nvar _types = require(\"./types\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nvar Combinator = /*#__PURE__*/function (_Node) {\n  _inheritsLoose(Combinator, _Node);\n  function Combinator(opts) {\n    var _this;\n    _this = _Node.call(this, opts) || this;\n    _this.type = _types.COMBINATOR;\n    return _this;\n  }\n  return Combinator;\n}(_node[\"default\"]);\nexports[\"default\"] = Combinator;\nmodule.exports = exports.default;", "\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar _node = _interopRequireDefault(require(\"./node\"));\nvar _types = require(\"./types\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nvar Nesting = /*#__PURE__*/function (_Node) {\n  _inheritsLoose(Nesting, _Node);\n  function Nesting(opts) {\n    var _this;\n    _this = _Node.call(this, opts) || this;\n    _this.type = _types.NESTING;\n    _this.value = '&';\n    return _this;\n  }\n  return Nesting;\n}(_node[\"default\"]);\nexports[\"default\"] = Nesting;\nmodule.exports = exports.default;", "\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = sortAscending;\nfunction sortAscending(list) {\n  return list.sort(function (a, b) {\n    return a - b;\n  });\n}\n;\nmodule.exports = exports.default;", "\"use strict\";\n\nexports.__esModule = true;\nexports.word = exports.tilde = exports.tab = exports.str = exports.space = exports.slash = exports.singleQuote = exports.semicolon = exports.plus = exports.pipe = exports.openSquare = exports.openParenthesis = exports.newline = exports.greaterThan = exports.feed = exports.equals = exports.doubleQuote = exports.dollar = exports.cr = exports.comment = exports.comma = exports.combinator = exports.colon = exports.closeSquare = exports.closeParenthesis = exports.caret = exports.bang = exports.backslash = exports.at = exports.asterisk = exports.ampersand = void 0;\nvar ampersand = 38; // `&`.charCodeAt(0);\nexports.ampersand = ampersand;\nvar asterisk = 42; // `*`.charCodeAt(0);\nexports.asterisk = asterisk;\nvar at = 64; // `@`.charCodeAt(0);\nexports.at = at;\nvar comma = 44; // `,`.charCodeAt(0);\nexports.comma = comma;\nvar colon = 58; // `:`.charCodeAt(0);\nexports.colon = colon;\nvar semicolon = 59; // `;`.charCodeAt(0);\nexports.semicolon = semicolon;\nvar openParenthesis = 40; // `(`.charCodeAt(0);\nexports.openParenthesis = openParenthesis;\nvar closeParenthesis = 41; // `)`.charCodeAt(0);\nexports.closeParenthesis = closeParenthesis;\nvar openSquare = 91; // `[`.charCodeAt(0);\nexports.openSquare = openSquare;\nvar closeSquare = 93; // `]`.charCodeAt(0);\nexports.closeSquare = closeSquare;\nvar dollar = 36; // `$`.charCodeAt(0);\nexports.dollar = dollar;\nvar tilde = 126; // `~`.charCodeAt(0);\nexports.tilde = tilde;\nvar caret = 94; // `^`.charCodeAt(0);\nexports.caret = caret;\nvar plus = 43; // `+`.charCodeAt(0);\nexports.plus = plus;\nvar equals = 61; // `=`.charCodeAt(0);\nexports.equals = equals;\nvar pipe = 124; // `|`.charCodeAt(0);\nexports.pipe = pipe;\nvar greaterThan = 62; // `>`.charCodeAt(0);\nexports.greaterThan = greaterThan;\nvar space = 32; // ` `.charCodeAt(0);\nexports.space = space;\nvar singleQuote = 39; // `'`.charCodeAt(0);\nexports.singleQuote = singleQuote;\nvar doubleQuote = 34; // `\"`.charCodeAt(0);\nexports.doubleQuote = doubleQuote;\nvar slash = 47; // `/`.charCodeAt(0);\nexports.slash = slash;\nvar bang = 33; // `!`.charCodeAt(0);\nexports.bang = bang;\nvar backslash = 92; // '\\\\'.charCodeAt(0);\nexports.backslash = backslash;\nvar cr = 13; // '\\r'.charCodeAt(0);\nexports.cr = cr;\nvar feed = 12; // '\\f'.charCodeAt(0);\nexports.feed = feed;\nvar newline = 10; // '\\n'.charCodeAt(0);\nexports.newline = newline;\nvar tab = 9; // '\\t'.charCodeAt(0);\n\n// Expose aliases primarily for readability.\nexports.tab = tab;\nvar str = singleQuote;\n\n// No good single character representation!\nexports.str = str;\nvar comment = -1;\nexports.comment = comment;\nvar word = -2;\nexports.word = word;\nvar combinator = -3;\nexports.combinator = combinator;", "\"use strict\";\n\nexports.__esModule = true;\nexports.FIELDS = void 0;\nexports[\"default\"] = tokenize;\nvar t = _interopRequireWildcard(require(\"./tokenTypes\"));\nvar _unescapable, _wordDelimiters;\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nvar unescapable = (_unescapable = {}, _unescapable[t.tab] = true, _unescapable[t.newline] = true, _unescapable[t.cr] = true, _unescapable[t.feed] = true, _unescapable);\nvar wordDelimiters = (_wordDelimiters = {}, _wordDelimiters[t.space] = true, _wordDelimiters[t.tab] = true, _wordDelimiters[t.newline] = true, _wordDelimiters[t.cr] = true, _wordDelimiters[t.feed] = true, _wordDelimiters[t.ampersand] = true, _wordDelimiters[t.asterisk] = true, _wordDelimiters[t.bang] = true, _wordDelimiters[t.comma] = true, _wordDelimiters[t.colon] = true, _wordDelimiters[t.semicolon] = true, _wordDelimiters[t.openParenthesis] = true, _wordDelimiters[t.closeParenthesis] = true, _wordDelimiters[t.openSquare] = true, _wordDelimiters[t.closeSquare] = true, _wordDelimiters[t.singleQuote] = true, _wordDelimiters[t.doubleQuote] = true, _wordDelimiters[t.plus] = true, _wordDelimiters[t.pipe] = true, _wordDelimiters[t.tilde] = true, _wordDelimiters[t.greaterThan] = true, _wordDelimiters[t.equals] = true, _wordDelimiters[t.dollar] = true, _wordDelimiters[t.caret] = true, _wordDelimiters[t.slash] = true, _wordDelimiters);\nvar hex = {};\nvar hexChars = \"0123456789abcdefABCDEF\";\nfor (var i = 0; i < hexChars.length; i++) {\n  hex[hexChars.charCodeAt(i)] = true;\n}\n\n/**\n *  Returns the last index of the bar css word\n * @param {string} css The string in which the word begins\n * @param {number} start The index into the string where word's first letter occurs\n */\nfunction consumeWord(css, start) {\n  var next = start;\n  var code;\n  do {\n    code = css.charCodeAt(next);\n    if (wordDelimiters[code]) {\n      return next - 1;\n    } else if (code === t.backslash) {\n      next = consumeEscape(css, next) + 1;\n    } else {\n      // All other characters are part of the word\n      next++;\n    }\n  } while (next < css.length);\n  return next - 1;\n}\n\n/**\n *  Returns the last index of the escape sequence\n * @param {string} css The string in which the sequence begins\n * @param {number} start The index into the string where escape character (`\\`) occurs.\n */\nfunction consumeEscape(css, start) {\n  var next = start;\n  var code = css.charCodeAt(next + 1);\n  if (unescapable[code]) {\n    // just consume the escape char\n  } else if (hex[code]) {\n    var hexDigits = 0;\n    // consume up to 6 hex chars\n    do {\n      next++;\n      hexDigits++;\n      code = css.charCodeAt(next + 1);\n    } while (hex[code] && hexDigits < 6);\n    // if fewer than 6 hex chars, a trailing space ends the escape\n    if (hexDigits < 6 && code === t.space) {\n      next++;\n    }\n  } else {\n    // the next char is part of the current word\n    next++;\n  }\n  return next;\n}\nvar FIELDS = {\n  TYPE: 0,\n  START_LINE: 1,\n  START_COL: 2,\n  END_LINE: 3,\n  END_COL: 4,\n  START_POS: 5,\n  END_POS: 6\n};\nexports.FIELDS = FIELDS;\nfunction tokenize(input) {\n  var tokens = [];\n  var css = input.css.valueOf();\n  var _css = css,\n    length = _css.length;\n  var offset = -1;\n  var line = 1;\n  var start = 0;\n  var end = 0;\n  var code, content, endColumn, endLine, escaped, escapePos, last, lines, next, nextLine, nextOffset, quote, tokenType;\n  function unclosed(what, fix) {\n    if (input.safe) {\n      // fyi: this is never set to true.\n      css += fix;\n      next = css.length - 1;\n    } else {\n      throw input.error('Unclosed ' + what, line, start - offset, start);\n    }\n  }\n  while (start < length) {\n    code = css.charCodeAt(start);\n    if (code === t.newline) {\n      offset = start;\n      line += 1;\n    }\n    switch (code) {\n      case t.space:\n      case t.tab:\n      case t.newline:\n      case t.cr:\n      case t.feed:\n        next = start;\n        do {\n          next += 1;\n          code = css.charCodeAt(next);\n          if (code === t.newline) {\n            offset = next;\n            line += 1;\n          }\n        } while (code === t.space || code === t.newline || code === t.tab || code === t.cr || code === t.feed);\n        tokenType = t.space;\n        endLine = line;\n        endColumn = next - offset - 1;\n        end = next;\n        break;\n      case t.plus:\n      case t.greaterThan:\n      case t.tilde:\n      case t.pipe:\n        next = start;\n        do {\n          next += 1;\n          code = css.charCodeAt(next);\n        } while (code === t.plus || code === t.greaterThan || code === t.tilde || code === t.pipe);\n        tokenType = t.combinator;\n        endLine = line;\n        endColumn = start - offset;\n        end = next;\n        break;\n\n      // Consume these characters as single tokens.\n      case t.asterisk:\n      case t.ampersand:\n      case t.bang:\n      case t.comma:\n      case t.equals:\n      case t.dollar:\n      case t.caret:\n      case t.openSquare:\n      case t.closeSquare:\n      case t.colon:\n      case t.semicolon:\n      case t.openParenthesis:\n      case t.closeParenthesis:\n        next = start;\n        tokenType = code;\n        endLine = line;\n        endColumn = start - offset;\n        end = next + 1;\n        break;\n      case t.singleQuote:\n      case t.doubleQuote:\n        quote = code === t.singleQuote ? \"'\" : '\"';\n        next = start;\n        do {\n          escaped = false;\n          next = css.indexOf(quote, next + 1);\n          if (next === -1) {\n            unclosed('quote', quote);\n          }\n          escapePos = next;\n          while (css.charCodeAt(escapePos - 1) === t.backslash) {\n            escapePos -= 1;\n            escaped = !escaped;\n          }\n        } while (escaped);\n        tokenType = t.str;\n        endLine = line;\n        endColumn = start - offset;\n        end = next + 1;\n        break;\n      default:\n        if (code === t.slash && css.charCodeAt(start + 1) === t.asterisk) {\n          next = css.indexOf('*/', start + 2) + 1;\n          if (next === 0) {\n            unclosed('comment', '*/');\n          }\n          content = css.slice(start, next + 1);\n          lines = content.split('\\n');\n          last = lines.length - 1;\n          if (last > 0) {\n            nextLine = line + last;\n            nextOffset = next - lines[last].length;\n          } else {\n            nextLine = line;\n            nextOffset = offset;\n          }\n          tokenType = t.comment;\n          line = nextLine;\n          endLine = nextLine;\n          endColumn = next - nextOffset;\n        } else if (code === t.slash) {\n          next = start;\n          tokenType = code;\n          endLine = line;\n          endColumn = start - offset;\n          end = next + 1;\n        } else {\n          next = consumeWord(css, start);\n          tokenType = t.word;\n          endLine = line;\n          endColumn = next - offset;\n        }\n        end = next + 1;\n        break;\n    }\n\n    // Ensure that the token structure remains consistent\n    tokens.push([tokenType,\n    // [0] Token type\n    line,\n    // [1] Starting line\n    start - offset,\n    // [2] Starting column\n    endLine,\n    // [3] Ending line\n    endColumn,\n    // [4] Ending column\n    start,\n    // [5] Start position / Source index\n    end // [6] End position\n    ]);\n\n    // Reset offset for the next token\n    if (nextOffset) {\n      offset = nextOffset;\n      nextOffset = null;\n    }\n    start = end;\n  }\n  return tokens;\n}", "\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar _root = _interopRequireDefault(require(\"./selectors/root\"));\nvar _selector = _interopRequireDefault(require(\"./selectors/selector\"));\nvar _className = _interopRequireDefault(require(\"./selectors/className\"));\nvar _comment = _interopRequireDefault(require(\"./selectors/comment\"));\nvar _id = _interopRequireDefault(require(\"./selectors/id\"));\nvar _tag = _interopRequireDefault(require(\"./selectors/tag\"));\nvar _string = _interopRequireDefault(require(\"./selectors/string\"));\nvar _pseudo = _interopRequireDefault(require(\"./selectors/pseudo\"));\nvar _attribute = _interopRequireWildcard(require(\"./selectors/attribute\"));\nvar _universal = _interopRequireDefault(require(\"./selectors/universal\"));\nvar _combinator = _interopRequireDefault(require(\"./selectors/combinator\"));\nvar _nesting = _interopRequireDefault(require(\"./selectors/nesting\"));\nvar _sortAscending = _interopRequireDefault(require(\"./sortAscending\"));\nvar _tokenize = _interopRequireWildcard(require(\"./tokenize\"));\nvar tokens = _interopRequireWildcard(require(\"./tokenTypes\"));\nvar types = _interopRequireWildcard(require(\"./selectors/types\"));\nvar _util = require(\"./util\");\nvar _WHITESPACE_TOKENS, _Object$assign;\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nvar WHITESPACE_TOKENS = (_WHITESPACE_TOKENS = {}, _WHITESPACE_TOKENS[tokens.space] = true, _WHITESPACE_TOKENS[tokens.cr] = true, _WHITESPACE_TOKENS[tokens.feed] = true, _WHITESPACE_TOKENS[tokens.newline] = true, _WHITESPACE_TOKENS[tokens.tab] = true, _WHITESPACE_TOKENS);\nvar WHITESPACE_EQUIV_TOKENS = Object.assign({}, WHITESPACE_TOKENS, (_Object$assign = {}, _Object$assign[tokens.comment] = true, _Object$assign));\nfunction tokenStart(token) {\n  return {\n    line: token[_tokenize.FIELDS.START_LINE],\n    column: token[_tokenize.FIELDS.START_COL]\n  };\n}\nfunction tokenEnd(token) {\n  return {\n    line: token[_tokenize.FIELDS.END_LINE],\n    column: token[_tokenize.FIELDS.END_COL]\n  };\n}\nfunction getSource(startLine, startColumn, endLine, endColumn) {\n  return {\n    start: {\n      line: startLine,\n      column: startColumn\n    },\n    end: {\n      line: endLine,\n      column: endColumn\n    }\n  };\n}\nfunction getTokenSource(token) {\n  return getSource(token[_tokenize.FIELDS.START_LINE], token[_tokenize.FIELDS.START_COL], token[_tokenize.FIELDS.END_LINE], token[_tokenize.FIELDS.END_COL]);\n}\nfunction getTokenSourceSpan(startToken, endToken) {\n  if (!startToken) {\n    return undefined;\n  }\n  return getSource(startToken[_tokenize.FIELDS.START_LINE], startToken[_tokenize.FIELDS.START_COL], endToken[_tokenize.FIELDS.END_LINE], endToken[_tokenize.FIELDS.END_COL]);\n}\nfunction unescapeProp(node, prop) {\n  var value = node[prop];\n  if (typeof value !== \"string\") {\n    return;\n  }\n  if (value.indexOf(\"\\\\\") !== -1) {\n    (0, _util.ensureObject)(node, 'raws');\n    node[prop] = (0, _util.unesc)(value);\n    if (node.raws[prop] === undefined) {\n      node.raws[prop] = value;\n    }\n  }\n  return node;\n}\nfunction indexesOf(array, item) {\n  var i = -1;\n  var indexes = [];\n  while ((i = array.indexOf(item, i + 1)) !== -1) {\n    indexes.push(i);\n  }\n  return indexes;\n}\nfunction uniqs() {\n  var list = Array.prototype.concat.apply([], arguments);\n  return list.filter(function (item, i) {\n    return i === list.indexOf(item);\n  });\n}\nvar Parser = /*#__PURE__*/function () {\n  function Parser(rule, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    this.rule = rule;\n    this.options = Object.assign({\n      lossy: false,\n      safe: false\n    }, options);\n    this.position = 0;\n    this.css = typeof this.rule === 'string' ? this.rule : this.rule.selector;\n    this.tokens = (0, _tokenize[\"default\"])({\n      css: this.css,\n      error: this._errorGenerator(),\n      safe: this.options.safe\n    });\n    var rootSource = getTokenSourceSpan(this.tokens[0], this.tokens[this.tokens.length - 1]);\n    this.root = new _root[\"default\"]({\n      source: rootSource\n    });\n    this.root.errorGenerator = this._errorGenerator();\n    var selector = new _selector[\"default\"]({\n      source: {\n        start: {\n          line: 1,\n          column: 1\n        }\n      }\n    });\n    this.root.append(selector);\n    this.current = selector;\n    this.loop();\n  }\n  var _proto = Parser.prototype;\n  _proto._errorGenerator = function _errorGenerator() {\n    var _this = this;\n    return function (message, errorOptions) {\n      if (typeof _this.rule === 'string') {\n        return new Error(message);\n      }\n      return _this.rule.error(message, errorOptions);\n    };\n  };\n  _proto.attribute = function attribute() {\n    var attr = [];\n    var startingToken = this.currToken;\n    this.position++;\n    while (this.position < this.tokens.length && this.currToken[_tokenize.FIELDS.TYPE] !== tokens.closeSquare) {\n      attr.push(this.currToken);\n      this.position++;\n    }\n    if (this.currToken[_tokenize.FIELDS.TYPE] !== tokens.closeSquare) {\n      return this.expected('closing square bracket', this.currToken[_tokenize.FIELDS.START_POS]);\n    }\n    var len = attr.length;\n    var node = {\n      source: getSource(startingToken[1], startingToken[2], this.currToken[3], this.currToken[4]),\n      sourceIndex: startingToken[_tokenize.FIELDS.START_POS]\n    };\n    if (len === 1 && !~[tokens.word].indexOf(attr[0][_tokenize.FIELDS.TYPE])) {\n      return this.expected('attribute', attr[0][_tokenize.FIELDS.START_POS]);\n    }\n    var pos = 0;\n    var spaceBefore = '';\n    var commentBefore = '';\n    var lastAdded = null;\n    var spaceAfterMeaningfulToken = false;\n    while (pos < len) {\n      var token = attr[pos];\n      var content = this.content(token);\n      var next = attr[pos + 1];\n      switch (token[_tokenize.FIELDS.TYPE]) {\n        case tokens.space:\n          // if (\n          //     len === 1 ||\n          //     pos === 0 && this.content(next) === '|'\n          // ) {\n          //     return this.expected('attribute', token[TOKEN.START_POS], content);\n          // }\n          spaceAfterMeaningfulToken = true;\n          if (this.options.lossy) {\n            break;\n          }\n          if (lastAdded) {\n            (0, _util.ensureObject)(node, 'spaces', lastAdded);\n            var prevContent = node.spaces[lastAdded].after || '';\n            node.spaces[lastAdded].after = prevContent + content;\n            var existingComment = (0, _util.getProp)(node, 'raws', 'spaces', lastAdded, 'after') || null;\n            if (existingComment) {\n              node.raws.spaces[lastAdded].after = existingComment + content;\n            }\n          } else {\n            spaceBefore = spaceBefore + content;\n            commentBefore = commentBefore + content;\n          }\n          break;\n        case tokens.asterisk:\n          if (next[_tokenize.FIELDS.TYPE] === tokens.equals) {\n            node.operator = content;\n            lastAdded = 'operator';\n          } else if ((!node.namespace || lastAdded === \"namespace\" && !spaceAfterMeaningfulToken) && next) {\n            if (spaceBefore) {\n              (0, _util.ensureObject)(node, 'spaces', 'attribute');\n              node.spaces.attribute.before = spaceBefore;\n              spaceBefore = '';\n            }\n            if (commentBefore) {\n              (0, _util.ensureObject)(node, 'raws', 'spaces', 'attribute');\n              node.raws.spaces.attribute.before = spaceBefore;\n              commentBefore = '';\n            }\n            node.namespace = (node.namespace || \"\") + content;\n            var rawValue = (0, _util.getProp)(node, 'raws', 'namespace') || null;\n            if (rawValue) {\n              node.raws.namespace += content;\n            }\n            lastAdded = 'namespace';\n          }\n          spaceAfterMeaningfulToken = false;\n          break;\n        case tokens.dollar:\n          if (lastAdded === \"value\") {\n            var oldRawValue = (0, _util.getProp)(node, 'raws', 'value');\n            node.value += \"$\";\n            if (oldRawValue) {\n              node.raws.value = oldRawValue + \"$\";\n            }\n            break;\n          }\n        // Falls through\n        case tokens.caret:\n          if (next[_tokenize.FIELDS.TYPE] === tokens.equals) {\n            node.operator = content;\n            lastAdded = 'operator';\n          }\n          spaceAfterMeaningfulToken = false;\n          break;\n        case tokens.combinator:\n          if (content === '~' && next[_tokenize.FIELDS.TYPE] === tokens.equals) {\n            node.operator = content;\n            lastAdded = 'operator';\n          }\n          if (content !== '|') {\n            spaceAfterMeaningfulToken = false;\n            break;\n          }\n          if (next[_tokenize.FIELDS.TYPE] === tokens.equals) {\n            node.operator = content;\n            lastAdded = 'operator';\n          } else if (!node.namespace && !node.attribute) {\n            node.namespace = true;\n          }\n          spaceAfterMeaningfulToken = false;\n          break;\n        case tokens.word:\n          if (next && this.content(next) === '|' && attr[pos + 2] && attr[pos + 2][_tokenize.FIELDS.TYPE] !== tokens.equals &&\n          // this look-ahead probably fails with comment nodes involved.\n          !node.operator && !node.namespace) {\n            node.namespace = content;\n            lastAdded = 'namespace';\n          } else if (!node.attribute || lastAdded === \"attribute\" && !spaceAfterMeaningfulToken) {\n            if (spaceBefore) {\n              (0, _util.ensureObject)(node, 'spaces', 'attribute');\n              node.spaces.attribute.before = spaceBefore;\n              spaceBefore = '';\n            }\n            if (commentBefore) {\n              (0, _util.ensureObject)(node, 'raws', 'spaces', 'attribute');\n              node.raws.spaces.attribute.before = commentBefore;\n              commentBefore = '';\n            }\n            node.attribute = (node.attribute || \"\") + content;\n            var _rawValue = (0, _util.getProp)(node, 'raws', 'attribute') || null;\n            if (_rawValue) {\n              node.raws.attribute += content;\n            }\n            lastAdded = 'attribute';\n          } else if (!node.value && node.value !== \"\" || lastAdded === \"value\" && !(spaceAfterMeaningfulToken || node.quoteMark)) {\n            var _unescaped = (0, _util.unesc)(content);\n            var _oldRawValue = (0, _util.getProp)(node, 'raws', 'value') || '';\n            var oldValue = node.value || '';\n            node.value = oldValue + _unescaped;\n            node.quoteMark = null;\n            if (_unescaped !== content || _oldRawValue) {\n              (0, _util.ensureObject)(node, 'raws');\n              node.raws.value = (_oldRawValue || oldValue) + content;\n            }\n            lastAdded = 'value';\n          } else {\n            var insensitive = content === 'i' || content === \"I\";\n            if ((node.value || node.value === '') && (node.quoteMark || spaceAfterMeaningfulToken)) {\n              node.insensitive = insensitive;\n              if (!insensitive || content === \"I\") {\n                (0, _util.ensureObject)(node, 'raws');\n                node.raws.insensitiveFlag = content;\n              }\n              lastAdded = 'insensitive';\n              if (spaceBefore) {\n                (0, _util.ensureObject)(node, 'spaces', 'insensitive');\n                node.spaces.insensitive.before = spaceBefore;\n                spaceBefore = '';\n              }\n              if (commentBefore) {\n                (0, _util.ensureObject)(node, 'raws', 'spaces', 'insensitive');\n                node.raws.spaces.insensitive.before = commentBefore;\n                commentBefore = '';\n              }\n            } else if (node.value || node.value === '') {\n              lastAdded = 'value';\n              node.value += content;\n              if (node.raws.value) {\n                node.raws.value += content;\n              }\n            }\n          }\n          spaceAfterMeaningfulToken = false;\n          break;\n        case tokens.str:\n          if (!node.attribute || !node.operator) {\n            return this.error(\"Expected an attribute followed by an operator preceding the string.\", {\n              index: token[_tokenize.FIELDS.START_POS]\n            });\n          }\n          var _unescapeValue = (0, _attribute.unescapeValue)(content),\n            unescaped = _unescapeValue.unescaped,\n            quoteMark = _unescapeValue.quoteMark;\n          node.value = unescaped;\n          node.quoteMark = quoteMark;\n          lastAdded = 'value';\n          (0, _util.ensureObject)(node, 'raws');\n          node.raws.value = content;\n          spaceAfterMeaningfulToken = false;\n          break;\n        case tokens.equals:\n          if (!node.attribute) {\n            return this.expected('attribute', token[_tokenize.FIELDS.START_POS], content);\n          }\n          if (node.value) {\n            return this.error('Unexpected \"=\" found; an operator was already defined.', {\n              index: token[_tokenize.FIELDS.START_POS]\n            });\n          }\n          node.operator = node.operator ? node.operator + content : content;\n          lastAdded = 'operator';\n          spaceAfterMeaningfulToken = false;\n          break;\n        case tokens.comment:\n          if (lastAdded) {\n            if (spaceAfterMeaningfulToken || next && next[_tokenize.FIELDS.TYPE] === tokens.space || lastAdded === 'insensitive') {\n              var lastComment = (0, _util.getProp)(node, 'spaces', lastAdded, 'after') || '';\n              var rawLastComment = (0, _util.getProp)(node, 'raws', 'spaces', lastAdded, 'after') || lastComment;\n              (0, _util.ensureObject)(node, 'raws', 'spaces', lastAdded);\n              node.raws.spaces[lastAdded].after = rawLastComment + content;\n            } else {\n              var lastValue = node[lastAdded] || '';\n              var rawLastValue = (0, _util.getProp)(node, 'raws', lastAdded) || lastValue;\n              (0, _util.ensureObject)(node, 'raws');\n              node.raws[lastAdded] = rawLastValue + content;\n            }\n          } else {\n            commentBefore = commentBefore + content;\n          }\n          break;\n        default:\n          return this.error(\"Unexpected \\\"\" + content + \"\\\" found.\", {\n            index: token[_tokenize.FIELDS.START_POS]\n          });\n      }\n      pos++;\n    }\n    unescapeProp(node, \"attribute\");\n    unescapeProp(node, \"namespace\");\n    this.newNode(new _attribute[\"default\"](node));\n    this.position++;\n  }\n\n  /**\n   * return a node containing meaningless garbage up to (but not including) the specified token position.\n   * if the token position is negative, all remaining tokens are consumed.\n   *\n   * This returns an array containing a single string node if all whitespace,\n   * otherwise an array of comment nodes with space before and after.\n   *\n   * These tokens are not added to the current selector, the caller can add them or use them to amend\n   * a previous node's space metadata.\n   *\n   * In lossy mode, this returns only comments.\n   */;\n  _proto.parseWhitespaceEquivalentTokens = function parseWhitespaceEquivalentTokens(stopPosition) {\n    if (stopPosition < 0) {\n      stopPosition = this.tokens.length;\n    }\n    var startPosition = this.position;\n    var nodes = [];\n    var space = \"\";\n    var lastComment = undefined;\n    do {\n      if (WHITESPACE_TOKENS[this.currToken[_tokenize.FIELDS.TYPE]]) {\n        if (!this.options.lossy) {\n          space += this.content();\n        }\n      } else if (this.currToken[_tokenize.FIELDS.TYPE] === tokens.comment) {\n        var spaces = {};\n        if (space) {\n          spaces.before = space;\n          space = \"\";\n        }\n        lastComment = new _comment[\"default\"]({\n          value: this.content(),\n          source: getTokenSource(this.currToken),\n          sourceIndex: this.currToken[_tokenize.FIELDS.START_POS],\n          spaces: spaces\n        });\n        nodes.push(lastComment);\n      }\n    } while (++this.position < stopPosition);\n    if (space) {\n      if (lastComment) {\n        lastComment.spaces.after = space;\n      } else if (!this.options.lossy) {\n        var firstToken = this.tokens[startPosition];\n        var lastToken = this.tokens[this.position - 1];\n        nodes.push(new _string[\"default\"]({\n          value: '',\n          source: getSource(firstToken[_tokenize.FIELDS.START_LINE], firstToken[_tokenize.FIELDS.START_COL], lastToken[_tokenize.FIELDS.END_LINE], lastToken[_tokenize.FIELDS.END_COL]),\n          sourceIndex: firstToken[_tokenize.FIELDS.START_POS],\n          spaces: {\n            before: space,\n            after: ''\n          }\n        }));\n      }\n    }\n    return nodes;\n  }\n\n  /**\n   *\n   * @param {*} nodes\n   */;\n  _proto.convertWhitespaceNodesToSpace = function convertWhitespaceNodesToSpace(nodes, requiredSpace) {\n    var _this2 = this;\n    if (requiredSpace === void 0) {\n      requiredSpace = false;\n    }\n    var space = \"\";\n    var rawSpace = \"\";\n    nodes.forEach(function (n) {\n      var spaceBefore = _this2.lossySpace(n.spaces.before, requiredSpace);\n      var rawSpaceBefore = _this2.lossySpace(n.rawSpaceBefore, requiredSpace);\n      space += spaceBefore + _this2.lossySpace(n.spaces.after, requiredSpace && spaceBefore.length === 0);\n      rawSpace += spaceBefore + n.value + _this2.lossySpace(n.rawSpaceAfter, requiredSpace && rawSpaceBefore.length === 0);\n    });\n    if (rawSpace === space) {\n      rawSpace = undefined;\n    }\n    var result = {\n      space: space,\n      rawSpace: rawSpace\n    };\n    return result;\n  };\n  _proto.isNamedCombinator = function isNamedCombinator(position) {\n    if (position === void 0) {\n      position = this.position;\n    }\n    return this.tokens[position + 0] && this.tokens[position + 0][_tokenize.FIELDS.TYPE] === tokens.slash && this.tokens[position + 1] && this.tokens[position + 1][_tokenize.FIELDS.TYPE] === tokens.word && this.tokens[position + 2] && this.tokens[position + 2][_tokenize.FIELDS.TYPE] === tokens.slash;\n  };\n  _proto.namedCombinator = function namedCombinator() {\n    if (this.isNamedCombinator()) {\n      var nameRaw = this.content(this.tokens[this.position + 1]);\n      var name = (0, _util.unesc)(nameRaw).toLowerCase();\n      var raws = {};\n      if (name !== nameRaw) {\n        raws.value = \"/\" + nameRaw + \"/\";\n      }\n      var node = new _combinator[\"default\"]({\n        value: \"/\" + name + \"/\",\n        source: getSource(this.currToken[_tokenize.FIELDS.START_LINE], this.currToken[_tokenize.FIELDS.START_COL], this.tokens[this.position + 2][_tokenize.FIELDS.END_LINE], this.tokens[this.position + 2][_tokenize.FIELDS.END_COL]),\n        sourceIndex: this.currToken[_tokenize.FIELDS.START_POS],\n        raws: raws\n      });\n      this.position = this.position + 3;\n      return node;\n    } else {\n      this.unexpected();\n    }\n  };\n  _proto.combinator = function combinator() {\n    var _this3 = this;\n    if (this.content() === '|') {\n      return this.namespace();\n    }\n    // We need to decide between a space that's a descendant combinator and meaningless whitespace at the end of a selector.\n    var nextSigTokenPos = this.locateNextMeaningfulToken(this.position);\n    if (nextSigTokenPos < 0 || this.tokens[nextSigTokenPos][_tokenize.FIELDS.TYPE] === tokens.comma) {\n      var nodes = this.parseWhitespaceEquivalentTokens(nextSigTokenPos);\n      if (nodes.length > 0) {\n        var last = this.current.last;\n        if (last) {\n          var _this$convertWhitespa = this.convertWhitespaceNodesToSpace(nodes),\n            space = _this$convertWhitespa.space,\n            rawSpace = _this$convertWhitespa.rawSpace;\n          if (rawSpace !== undefined) {\n            last.rawSpaceAfter += rawSpace;\n          }\n          last.spaces.after += space;\n        } else {\n          nodes.forEach(function (n) {\n            return _this3.newNode(n);\n          });\n        }\n      }\n      return;\n    }\n    var firstToken = this.currToken;\n    var spaceOrDescendantSelectorNodes = undefined;\n    if (nextSigTokenPos > this.position) {\n      spaceOrDescendantSelectorNodes = this.parseWhitespaceEquivalentTokens(nextSigTokenPos);\n    }\n    var node;\n    if (this.isNamedCombinator()) {\n      node = this.namedCombinator();\n    } else if (this.currToken[_tokenize.FIELDS.TYPE] === tokens.combinator) {\n      node = new _combinator[\"default\"]({\n        value: this.content(),\n        source: getTokenSource(this.currToken),\n        sourceIndex: this.currToken[_tokenize.FIELDS.START_POS]\n      });\n      this.position++;\n    } else if (WHITESPACE_TOKENS[this.currToken[_tokenize.FIELDS.TYPE]]) {\n      // pass\n    } else if (!spaceOrDescendantSelectorNodes) {\n      this.unexpected();\n    }\n    if (node) {\n      if (spaceOrDescendantSelectorNodes) {\n        var _this$convertWhitespa2 = this.convertWhitespaceNodesToSpace(spaceOrDescendantSelectorNodes),\n          _space = _this$convertWhitespa2.space,\n          _rawSpace = _this$convertWhitespa2.rawSpace;\n        node.spaces.before = _space;\n        node.rawSpaceBefore = _rawSpace;\n      }\n    } else {\n      // descendant combinator\n      var _this$convertWhitespa3 = this.convertWhitespaceNodesToSpace(spaceOrDescendantSelectorNodes, true),\n        _space2 = _this$convertWhitespa3.space,\n        _rawSpace2 = _this$convertWhitespa3.rawSpace;\n      if (!_rawSpace2) {\n        _rawSpace2 = _space2;\n      }\n      var spaces = {};\n      var raws = {\n        spaces: {}\n      };\n      if (_space2.endsWith(' ') && _rawSpace2.endsWith(' ')) {\n        spaces.before = _space2.slice(0, _space2.length - 1);\n        raws.spaces.before = _rawSpace2.slice(0, _rawSpace2.length - 1);\n      } else if (_space2.startsWith(' ') && _rawSpace2.startsWith(' ')) {\n        spaces.after = _space2.slice(1);\n        raws.spaces.after = _rawSpace2.slice(1);\n      } else {\n        raws.value = _rawSpace2;\n      }\n      node = new _combinator[\"default\"]({\n        value: ' ',\n        source: getTokenSourceSpan(firstToken, this.tokens[this.position - 1]),\n        sourceIndex: firstToken[_tokenize.FIELDS.START_POS],\n        spaces: spaces,\n        raws: raws\n      });\n    }\n    if (this.currToken && this.currToken[_tokenize.FIELDS.TYPE] === tokens.space) {\n      node.spaces.after = this.optionalSpace(this.content());\n      this.position++;\n    }\n    return this.newNode(node);\n  };\n  _proto.comma = function comma() {\n    if (this.position === this.tokens.length - 1) {\n      this.root.trailingComma = true;\n      this.position++;\n      return;\n    }\n    this.current._inferEndPosition();\n    var selector = new _selector[\"default\"]({\n      source: {\n        start: tokenStart(this.tokens[this.position + 1])\n      }\n    });\n    this.current.parent.append(selector);\n    this.current = selector;\n    this.position++;\n  };\n  _proto.comment = function comment() {\n    var current = this.currToken;\n    this.newNode(new _comment[\"default\"]({\n      value: this.content(),\n      source: getTokenSource(current),\n      sourceIndex: current[_tokenize.FIELDS.START_POS]\n    }));\n    this.position++;\n  };\n  _proto.error = function error(message, opts) {\n    throw this.root.error(message, opts);\n  };\n  _proto.missingBackslash = function missingBackslash() {\n    return this.error('Expected a backslash preceding the semicolon.', {\n      index: this.currToken[_tokenize.FIELDS.START_POS]\n    });\n  };\n  _proto.missingParenthesis = function missingParenthesis() {\n    return this.expected('opening parenthesis', this.currToken[_tokenize.FIELDS.START_POS]);\n  };\n  _proto.missingSquareBracket = function missingSquareBracket() {\n    return this.expected('opening square bracket', this.currToken[_tokenize.FIELDS.START_POS]);\n  };\n  _proto.unexpected = function unexpected() {\n    return this.error(\"Unexpected '\" + this.content() + \"'. Escaping special characters with \\\\ may help.\", this.currToken[_tokenize.FIELDS.START_POS]);\n  };\n  _proto.unexpectedPipe = function unexpectedPipe() {\n    return this.error(\"Unexpected '|'.\", this.currToken[_tokenize.FIELDS.START_POS]);\n  };\n  _proto.namespace = function namespace() {\n    var before = this.prevToken && this.content(this.prevToken) || true;\n    if (this.nextToken[_tokenize.FIELDS.TYPE] === tokens.word) {\n      this.position++;\n      return this.word(before);\n    } else if (this.nextToken[_tokenize.FIELDS.TYPE] === tokens.asterisk) {\n      this.position++;\n      return this.universal(before);\n    }\n    this.unexpectedPipe();\n  };\n  _proto.nesting = function nesting() {\n    if (this.nextToken) {\n      var nextContent = this.content(this.nextToken);\n      if (nextContent === \"|\") {\n        this.position++;\n        return;\n      }\n    }\n    var current = this.currToken;\n    this.newNode(new _nesting[\"default\"]({\n      value: this.content(),\n      source: getTokenSource(current),\n      sourceIndex: current[_tokenize.FIELDS.START_POS]\n    }));\n    this.position++;\n  };\n  _proto.parentheses = function parentheses() {\n    var last = this.current.last;\n    var unbalanced = 1;\n    this.position++;\n    if (last && last.type === types.PSEUDO) {\n      var selector = new _selector[\"default\"]({\n        source: {\n          start: tokenStart(this.tokens[this.position - 1])\n        }\n      });\n      var cache = this.current;\n      last.append(selector);\n      this.current = selector;\n      while (this.position < this.tokens.length && unbalanced) {\n        if (this.currToken[_tokenize.FIELDS.TYPE] === tokens.openParenthesis) {\n          unbalanced++;\n        }\n        if (this.currToken[_tokenize.FIELDS.TYPE] === tokens.closeParenthesis) {\n          unbalanced--;\n        }\n        if (unbalanced) {\n          this.parse();\n        } else {\n          this.current.source.end = tokenEnd(this.currToken);\n          this.current.parent.source.end = tokenEnd(this.currToken);\n          this.position++;\n        }\n      }\n      this.current = cache;\n    } else {\n      // I think this case should be an error. It's used to implement a basic parse of media queries\n      // but I don't think it's a good idea.\n      var parenStart = this.currToken;\n      var parenValue = \"(\";\n      var parenEnd;\n      while (this.position < this.tokens.length && unbalanced) {\n        if (this.currToken[_tokenize.FIELDS.TYPE] === tokens.openParenthesis) {\n          unbalanced++;\n        }\n        if (this.currToken[_tokenize.FIELDS.TYPE] === tokens.closeParenthesis) {\n          unbalanced--;\n        }\n        parenEnd = this.currToken;\n        parenValue += this.parseParenthesisToken(this.currToken);\n        this.position++;\n      }\n      if (last) {\n        last.appendToPropertyAndEscape(\"value\", parenValue, parenValue);\n      } else {\n        this.newNode(new _string[\"default\"]({\n          value: parenValue,\n          source: getSource(parenStart[_tokenize.FIELDS.START_LINE], parenStart[_tokenize.FIELDS.START_COL], parenEnd[_tokenize.FIELDS.END_LINE], parenEnd[_tokenize.FIELDS.END_COL]),\n          sourceIndex: parenStart[_tokenize.FIELDS.START_POS]\n        }));\n      }\n    }\n    if (unbalanced) {\n      return this.expected('closing parenthesis', this.currToken[_tokenize.FIELDS.START_POS]);\n    }\n  };\n  _proto.pseudo = function pseudo() {\n    var _this4 = this;\n    var pseudoStr = '';\n    var startingToken = this.currToken;\n    while (this.currToken && this.currToken[_tokenize.FIELDS.TYPE] === tokens.colon) {\n      pseudoStr += this.content();\n      this.position++;\n    }\n    if (!this.currToken) {\n      return this.expected(['pseudo-class', 'pseudo-element'], this.position - 1);\n    }\n    if (this.currToken[_tokenize.FIELDS.TYPE] === tokens.word) {\n      this.splitWord(false, function (first, length) {\n        pseudoStr += first;\n        _this4.newNode(new _pseudo[\"default\"]({\n          value: pseudoStr,\n          source: getTokenSourceSpan(startingToken, _this4.currToken),\n          sourceIndex: startingToken[_tokenize.FIELDS.START_POS]\n        }));\n        if (length > 1 && _this4.nextToken && _this4.nextToken[_tokenize.FIELDS.TYPE] === tokens.openParenthesis) {\n          _this4.error('Misplaced parenthesis.', {\n            index: _this4.nextToken[_tokenize.FIELDS.START_POS]\n          });\n        }\n      });\n    } else {\n      return this.expected(['pseudo-class', 'pseudo-element'], this.currToken[_tokenize.FIELDS.START_POS]);\n    }\n  };\n  _proto.space = function space() {\n    var content = this.content();\n    // Handle space before and after the selector\n    if (this.position === 0 || this.prevToken[_tokenize.FIELDS.TYPE] === tokens.comma || this.prevToken[_tokenize.FIELDS.TYPE] === tokens.openParenthesis || this.current.nodes.every(function (node) {\n      return node.type === 'comment';\n    })) {\n      this.spaces = this.optionalSpace(content);\n      this.position++;\n    } else if (this.position === this.tokens.length - 1 || this.nextToken[_tokenize.FIELDS.TYPE] === tokens.comma || this.nextToken[_tokenize.FIELDS.TYPE] === tokens.closeParenthesis) {\n      this.current.last.spaces.after = this.optionalSpace(content);\n      this.position++;\n    } else {\n      this.combinator();\n    }\n  };\n  _proto.string = function string() {\n    var current = this.currToken;\n    this.newNode(new _string[\"default\"]({\n      value: this.content(),\n      source: getTokenSource(current),\n      sourceIndex: current[_tokenize.FIELDS.START_POS]\n    }));\n    this.position++;\n  };\n  _proto.universal = function universal(namespace) {\n    var nextToken = this.nextToken;\n    if (nextToken && this.content(nextToken) === '|') {\n      this.position++;\n      return this.namespace();\n    }\n    var current = this.currToken;\n    this.newNode(new _universal[\"default\"]({\n      value: this.content(),\n      source: getTokenSource(current),\n      sourceIndex: current[_tokenize.FIELDS.START_POS]\n    }), namespace);\n    this.position++;\n  };\n  _proto.splitWord = function splitWord(namespace, firstCallback) {\n    var _this5 = this;\n    var nextToken = this.nextToken;\n    var word = this.content();\n    while (nextToken && ~[tokens.dollar, tokens.caret, tokens.equals, tokens.word].indexOf(nextToken[_tokenize.FIELDS.TYPE])) {\n      this.position++;\n      var current = this.content();\n      word += current;\n      if (current.lastIndexOf('\\\\') === current.length - 1) {\n        var next = this.nextToken;\n        if (next && next[_tokenize.FIELDS.TYPE] === tokens.space) {\n          word += this.requiredSpace(this.content(next));\n          this.position++;\n        }\n      }\n      nextToken = this.nextToken;\n    }\n    var hasClass = indexesOf(word, '.').filter(function (i) {\n      // Allow escaped dot within class name\n      var escapedDot = word[i - 1] === '\\\\';\n      // Allow decimal numbers percent in @keyframes\n      var isKeyframesPercent = /^\\d+\\.\\d+%$/.test(word);\n      return !escapedDot && !isKeyframesPercent;\n    });\n    var hasId = indexesOf(word, '#').filter(function (i) {\n      return word[i - 1] !== '\\\\';\n    });\n    // Eliminate Sass interpolations from the list of id indexes\n    var interpolations = indexesOf(word, '#{');\n    if (interpolations.length) {\n      hasId = hasId.filter(function (hashIndex) {\n        return !~interpolations.indexOf(hashIndex);\n      });\n    }\n    var indices = (0, _sortAscending[\"default\"])(uniqs([0].concat(hasClass, hasId)));\n    indices.forEach(function (ind, i) {\n      var index = indices[i + 1] || word.length;\n      var value = word.slice(ind, index);\n      if (i === 0 && firstCallback) {\n        return firstCallback.call(_this5, value, indices.length);\n      }\n      var node;\n      var current = _this5.currToken;\n      var sourceIndex = current[_tokenize.FIELDS.START_POS] + indices[i];\n      var source = getSource(current[1], current[2] + ind, current[3], current[2] + (index - 1));\n      if (~hasClass.indexOf(ind)) {\n        var classNameOpts = {\n          value: value.slice(1),\n          source: source,\n          sourceIndex: sourceIndex\n        };\n        node = new _className[\"default\"](unescapeProp(classNameOpts, \"value\"));\n      } else if (~hasId.indexOf(ind)) {\n        var idOpts = {\n          value: value.slice(1),\n          source: source,\n          sourceIndex: sourceIndex\n        };\n        node = new _id[\"default\"](unescapeProp(idOpts, \"value\"));\n      } else {\n        var tagOpts = {\n          value: value,\n          source: source,\n          sourceIndex: sourceIndex\n        };\n        unescapeProp(tagOpts, \"value\");\n        node = new _tag[\"default\"](tagOpts);\n      }\n      _this5.newNode(node, namespace);\n      // Ensure that the namespace is used only once\n      namespace = null;\n    });\n    this.position++;\n  };\n  _proto.word = function word(namespace) {\n    var nextToken = this.nextToken;\n    if (nextToken && this.content(nextToken) === '|') {\n      this.position++;\n      return this.namespace();\n    }\n    return this.splitWord(namespace);\n  };\n  _proto.loop = function loop() {\n    while (this.position < this.tokens.length) {\n      this.parse(true);\n    }\n    this.current._inferEndPosition();\n    return this.root;\n  };\n  _proto.parse = function parse(throwOnParenthesis) {\n    switch (this.currToken[_tokenize.FIELDS.TYPE]) {\n      case tokens.space:\n        this.space();\n        break;\n      case tokens.comment:\n        this.comment();\n        break;\n      case tokens.openParenthesis:\n        this.parentheses();\n        break;\n      case tokens.closeParenthesis:\n        if (throwOnParenthesis) {\n          this.missingParenthesis();\n        }\n        break;\n      case tokens.openSquare:\n        this.attribute();\n        break;\n      case tokens.dollar:\n      case tokens.caret:\n      case tokens.equals:\n      case tokens.word:\n        this.word();\n        break;\n      case tokens.colon:\n        this.pseudo();\n        break;\n      case tokens.comma:\n        this.comma();\n        break;\n      case tokens.asterisk:\n        this.universal();\n        break;\n      case tokens.ampersand:\n        this.nesting();\n        break;\n      case tokens.slash:\n      case tokens.combinator:\n        this.combinator();\n        break;\n      case tokens.str:\n        this.string();\n        break;\n      // These cases throw; no break needed.\n      case tokens.closeSquare:\n        this.missingSquareBracket();\n      case tokens.semicolon:\n        this.missingBackslash();\n      default:\n        this.unexpected();\n    }\n  }\n\n  /**\n   * Helpers\n   */;\n  _proto.expected = function expected(description, index, found) {\n    if (Array.isArray(description)) {\n      var last = description.pop();\n      description = description.join(', ') + \" or \" + last;\n    }\n    var an = /^[aeiou]/.test(description[0]) ? 'an' : 'a';\n    if (!found) {\n      return this.error(\"Expected \" + an + \" \" + description + \".\", {\n        index: index\n      });\n    }\n    return this.error(\"Expected \" + an + \" \" + description + \", found \\\"\" + found + \"\\\" instead.\", {\n      index: index\n    });\n  };\n  _proto.requiredSpace = function requiredSpace(space) {\n    return this.options.lossy ? ' ' : space;\n  };\n  _proto.optionalSpace = function optionalSpace(space) {\n    return this.options.lossy ? '' : space;\n  };\n  _proto.lossySpace = function lossySpace(space, required) {\n    if (this.options.lossy) {\n      return required ? ' ' : '';\n    } else {\n      return space;\n    }\n  };\n  _proto.parseParenthesisToken = function parseParenthesisToken(token) {\n    var content = this.content(token);\n    if (token[_tokenize.FIELDS.TYPE] === tokens.space) {\n      return this.requiredSpace(content);\n    } else {\n      return content;\n    }\n  };\n  _proto.newNode = function newNode(node, namespace) {\n    if (namespace) {\n      if (/^ +$/.test(namespace)) {\n        if (!this.options.lossy) {\n          this.spaces = (this.spaces || '') + namespace;\n        }\n        namespace = true;\n      }\n      node.namespace = namespace;\n      unescapeProp(node, \"namespace\");\n    }\n    if (this.spaces) {\n      node.spaces.before = this.spaces;\n      this.spaces = '';\n    }\n    return this.current.append(node);\n  };\n  _proto.content = function content(token) {\n    if (token === void 0) {\n      token = this.currToken;\n    }\n    return this.css.slice(token[_tokenize.FIELDS.START_POS], token[_tokenize.FIELDS.END_POS]);\n  };\n  /**\n   * returns the index of the next non-whitespace, non-comment token.\n   * returns -1 if no meaningful token is found.\n   */\n  _proto.locateNextMeaningfulToken = function locateNextMeaningfulToken(startPosition) {\n    if (startPosition === void 0) {\n      startPosition = this.position + 1;\n    }\n    var searchPosition = startPosition;\n    while (searchPosition < this.tokens.length) {\n      if (WHITESPACE_EQUIV_TOKENS[this.tokens[searchPosition][_tokenize.FIELDS.TYPE]]) {\n        searchPosition++;\n        continue;\n      } else {\n        return searchPosition;\n      }\n    }\n    return -1;\n  };\n  _createClass(Parser, [{\n    key: \"currToken\",\n    get: function get() {\n      return this.tokens[this.position];\n    }\n  }, {\n    key: \"nextToken\",\n    get: function get() {\n      return this.tokens[this.position + 1];\n    }\n  }, {\n    key: \"prevToken\",\n    get: function get() {\n      return this.tokens[this.position - 1];\n    }\n  }]);\n  return Parser;\n}();\nexports[\"default\"] = Parser;\nmodule.exports = exports.default;", "\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar _parser = _interopRequireDefault(require(\"./parser\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nvar Processor = /*#__PURE__*/function () {\n  function Processor(func, options) {\n    this.func = func || function noop() {};\n    this.funcRes = null;\n    this.options = options;\n  }\n  var _proto = Processor.prototype;\n  _proto._shouldUpdateSelector = function _shouldUpdateSelector(rule, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    var merged = Object.assign({}, this.options, options);\n    if (merged.updateSelector === false) {\n      return false;\n    } else {\n      return typeof rule !== \"string\";\n    }\n  };\n  _proto._isLossy = function _isLossy(options) {\n    if (options === void 0) {\n      options = {};\n    }\n    var merged = Object.assign({}, this.options, options);\n    if (merged.lossless === false) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n  _proto._root = function _root(rule, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    var parser = new _parser[\"default\"](rule, this._parseOptions(options));\n    return parser.root;\n  };\n  _proto._parseOptions = function _parseOptions(options) {\n    return {\n      lossy: this._isLossy(options)\n    };\n  };\n  _proto._run = function _run(rule, options) {\n    var _this = this;\n    if (options === void 0) {\n      options = {};\n    }\n    return new Promise(function (resolve, reject) {\n      try {\n        var root = _this._root(rule, options);\n        Promise.resolve(_this.func(root)).then(function (transform) {\n          var string = undefined;\n          if (_this._shouldUpdateSelector(rule, options)) {\n            string = root.toString();\n            rule.selector = string;\n          }\n          return {\n            transform: transform,\n            root: root,\n            string: string\n          };\n        }).then(resolve, reject);\n      } catch (e) {\n        reject(e);\n        return;\n      }\n    });\n  };\n  _proto._runSync = function _runSync(rule, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    var root = this._root(rule, options);\n    var transform = this.func(root);\n    if (transform && typeof transform.then === \"function\") {\n      throw new Error(\"Selector processor returned a promise to a synchronous call.\");\n    }\n    var string = undefined;\n    if (options.updateSelector && typeof rule !== \"string\") {\n      string = root.toString();\n      rule.selector = string;\n    }\n    return {\n      transform: transform,\n      root: root,\n      string: string\n    };\n  }\n\n  /**\n   * Process rule into a selector AST.\n   *\n   * @param rule {postcss.Rule | string} The css selector to be processed\n   * @param options The options for processing\n   * @returns {Promise<parser.Root>} The AST of the selector after processing it.\n   */;\n  _proto.ast = function ast(rule, options) {\n    return this._run(rule, options).then(function (result) {\n      return result.root;\n    });\n  }\n\n  /**\n   * Process rule into a selector AST synchronously.\n   *\n   * @param rule {postcss.Rule | string} The css selector to be processed\n   * @param options The options for processing\n   * @returns {parser.Root} The AST of the selector after processing it.\n   */;\n  _proto.astSync = function astSync(rule, options) {\n    return this._runSync(rule, options).root;\n  }\n\n  /**\n   * Process a selector into a transformed value asynchronously\n   *\n   * @param rule {postcss.Rule | string} The css selector to be processed\n   * @param options The options for processing\n   * @returns {Promise<any>} The value returned by the processor.\n   */;\n  _proto.transform = function transform(rule, options) {\n    return this._run(rule, options).then(function (result) {\n      return result.transform;\n    });\n  }\n\n  /**\n   * Process a selector into a transformed value synchronously.\n   *\n   * @param rule {postcss.Rule | string} The css selector to be processed\n   * @param options The options for processing\n   * @returns {any} The value returned by the processor.\n   */;\n  _proto.transformSync = function transformSync(rule, options) {\n    return this._runSync(rule, options).transform;\n  }\n\n  /**\n   * Process a selector into a new selector string asynchronously.\n   *\n   * @param rule {postcss.Rule | string} The css selector to be processed\n   * @param options The options for processing\n   * @returns {string} the selector after processing.\n   */;\n  _proto.process = function process(rule, options) {\n    return this._run(rule, options).then(function (result) {\n      return result.string || result.root.toString();\n    });\n  }\n\n  /**\n   * Process a selector into a new selector string synchronously.\n   *\n   * @param rule {postcss.Rule | string} The css selector to be processed\n   * @param options The options for processing\n   * @returns {string} the selector after processing.\n   */;\n  _proto.processSync = function processSync(rule, options) {\n    var result = this._runSync(rule, options);\n    return result.string || result.root.toString();\n  };\n  return Processor;\n}();\nexports[\"default\"] = Processor;\nmodule.exports = exports.default;", "\"use strict\";\n\nexports.__esModule = true;\nexports.universal = exports.tag = exports.string = exports.selector = exports.root = exports.pseudo = exports.nesting = exports.id = exports.comment = exports.combinator = exports.className = exports.attribute = void 0;\nvar _attribute = _interopRequireDefault(require(\"./attribute\"));\nvar _className = _interopRequireDefault(require(\"./className\"));\nvar _combinator = _interopRequireDefault(require(\"./combinator\"));\nvar _comment = _interopRequireDefault(require(\"./comment\"));\nvar _id = _interopRequireDefault(require(\"./id\"));\nvar _nesting = _interopRequireDefault(require(\"./nesting\"));\nvar _pseudo = _interopRequireDefault(require(\"./pseudo\"));\nvar _root = _interopRequireDefault(require(\"./root\"));\nvar _selector = _interopRequireDefault(require(\"./selector\"));\nvar _string = _interopRequireDefault(require(\"./string\"));\nvar _tag = _interopRequireDefault(require(\"./tag\"));\nvar _universal = _interopRequireDefault(require(\"./universal\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nvar attribute = function attribute(opts) {\n  return new _attribute[\"default\"](opts);\n};\nexports.attribute = attribute;\nvar className = function className(opts) {\n  return new _className[\"default\"](opts);\n};\nexports.className = className;\nvar combinator = function combinator(opts) {\n  return new _combinator[\"default\"](opts);\n};\nexports.combinator = combinator;\nvar comment = function comment(opts) {\n  return new _comment[\"default\"](opts);\n};\nexports.comment = comment;\nvar id = function id(opts) {\n  return new _id[\"default\"](opts);\n};\nexports.id = id;\nvar nesting = function nesting(opts) {\n  return new _nesting[\"default\"](opts);\n};\nexports.nesting = nesting;\nvar pseudo = function pseudo(opts) {\n  return new _pseudo[\"default\"](opts);\n};\nexports.pseudo = pseudo;\nvar root = function root(opts) {\n  return new _root[\"default\"](opts);\n};\nexports.root = root;\nvar selector = function selector(opts) {\n  return new _selector[\"default\"](opts);\n};\nexports.selector = selector;\nvar string = function string(opts) {\n  return new _string[\"default\"](opts);\n};\nexports.string = string;\nvar tag = function tag(opts) {\n  return new _tag[\"default\"](opts);\n};\nexports.tag = tag;\nvar universal = function universal(opts) {\n  return new _universal[\"default\"](opts);\n};\nexports.universal = universal;", "\"use strict\";\n\nexports.__esModule = true;\nexports.isComment = exports.isCombinator = exports.isClassName = exports.isAttribute = void 0;\nexports.isContainer = isContainer;\nexports.isIdentifier = void 0;\nexports.isNamespace = isNamespace;\nexports.isNesting = void 0;\nexports.isNode = isNode;\nexports.isPseudo = void 0;\nexports.isPseudoClass = isPseudoClass;\nexports.isPseudoElement = isPseudoElement;\nexports.isUniversal = exports.isTag = exports.isString = exports.isSelector = exports.isRoot = void 0;\nvar _types = require(\"./types\");\nvar _IS_TYPE;\nvar IS_TYPE = (_IS_TYPE = {}, _IS_TYPE[_types.ATTRIBUTE] = true, _IS_TYPE[_types.CLASS] = true, _IS_TYPE[_types.COMBINATOR] = true, _IS_TYPE[_types.COMMENT] = true, _IS_TYPE[_types.ID] = true, _IS_TYPE[_types.NESTING] = true, _IS_TYPE[_types.PSEUDO] = true, _IS_TYPE[_types.ROOT] = true, _IS_TYPE[_types.SELECTOR] = true, _IS_TYPE[_types.STRING] = true, _IS_TYPE[_types.TAG] = true, _IS_TYPE[_types.UNIVERSAL] = true, _IS_TYPE);\nfunction isNode(node) {\n  return typeof node === \"object\" && IS_TYPE[node.type];\n}\nfunction isNodeType(type, node) {\n  return isNode(node) && node.type === type;\n}\nvar isAttribute = isNodeType.bind(null, _types.ATTRIBUTE);\nexports.isAttribute = isAttribute;\nvar isClassName = isNodeType.bind(null, _types.CLASS);\nexports.isClassName = isClassName;\nvar isCombinator = isNodeType.bind(null, _types.COMBINATOR);\nexports.isCombinator = isCombinator;\nvar isComment = isNodeType.bind(null, _types.COMMENT);\nexports.isComment = isComment;\nvar isIdentifier = isNodeType.bind(null, _types.ID);\nexports.isIdentifier = isIdentifier;\nvar isNesting = isNodeType.bind(null, _types.NESTING);\nexports.isNesting = isNesting;\nvar isPseudo = isNodeType.bind(null, _types.PSEUDO);\nexports.isPseudo = isPseudo;\nvar isRoot = isNodeType.bind(null, _types.ROOT);\nexports.isRoot = isRoot;\nvar isSelector = isNodeType.bind(null, _types.SELECTOR);\nexports.isSelector = isSelector;\nvar isString = isNodeType.bind(null, _types.STRING);\nexports.isString = isString;\nvar isTag = isNodeType.bind(null, _types.TAG);\nexports.isTag = isTag;\nvar isUniversal = isNodeType.bind(null, _types.UNIVERSAL);\nexports.isUniversal = isUniversal;\nfunction isPseudoElement(node) {\n  return isPseudo(node) && node.value && (node.value.startsWith(\"::\") || node.value.toLowerCase() === \":before\" || node.value.toLowerCase() === \":after\" || node.value.toLowerCase() === \":first-letter\" || node.value.toLowerCase() === \":first-line\");\n}\nfunction isPseudoClass(node) {\n  return isPseudo(node) && !isPseudoElement(node);\n}\nfunction isContainer(node) {\n  return !!(isNode(node) && node.walk);\n}\nfunction isNamespace(node) {\n  return isAttribute(node) || isTag(node);\n}", "\"use strict\";\n\nexports.__esModule = true;\nvar _types = require(\"./types\");\nObject.keys(_types).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === _types[key]) return;\n  exports[key] = _types[key];\n});\nvar _constructors = require(\"./constructors\");\nObject.keys(_constructors).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === _constructors[key]) return;\n  exports[key] = _constructors[key];\n});\nvar _guards = require(\"./guards\");\nObject.keys(_guards).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === _guards[key]) return;\n  exports[key] = _guards[key];\n});", "\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar _processor = _interopRequireDefault(require(\"./processor\"));\nvar selectors = _interopRequireWildcard(require(\"./selectors\"));\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nvar parser = function parser(processor) {\n  return new _processor[\"default\"](processor);\n};\nObject.assign(parser, selectors);\ndelete parser.__esModule;\nvar _default = parser;\nexports[\"default\"] = _default;\nmodule.exports = exports.default;", "const { Rule, AtRule } = require('postcss')\nlet parser = require('postcss-selector-parser')\n\n/**\n * Run a selector string through postcss-selector-parser\n */\nfunction parse(rawSelector, rule) {\n  let nodes\n  try {\n    parser(parsed => {\n      nodes = parsed\n    }).processSync(rawSelector)\n  } catch (e) {\n    if (rawSelector.includes(':')) {\n      throw rule ? rule.error('Missed semicolon') : e\n    } else {\n      throw rule ? rule.error(e.message) : e\n    }\n  }\n  return nodes.at(0)\n}\n\n/**\n * Replaces the \"&\" token in a node's selector with the parent selector\n * similar to what SCSS does.\n *\n * Mutates the nodes list\n */\nfunction interpolateAmpInSelector(nodes, parent) {\n  let replaced = false\n  nodes.each(node => {\n    if (node.type === 'nesting') {\n      let clonedParent = parent.clone({})\n      if (node.value !== '&') {\n        node.replaceWith(\n          parse(node.value.replace('&', clonedParent.toString()))\n        )\n      } else {\n        node.replaceWith(clonedParent)\n      }\n      replaced = true\n    } else if ('nodes' in node && node.nodes) {\n      if (interpolateAmpInSelector(node, parent)) {\n        replaced = true\n      }\n    }\n  })\n  return replaced\n}\n\n/**\n * Combines parent and child selectors, in a SCSS-like way\n */\nfunction mergeSelectors(parent, child) {\n  let merged = []\n  parent.selectors.forEach(sel => {\n    let parentNode = parse(sel, parent)\n\n    child.selectors.forEach(selector => {\n      if (!selector) {\n        return\n      }\n      let node = parse(selector, child)\n      let replaced = interpolateAmpInSelector(node, parentNode)\n      if (!replaced) {\n        node.prepend(parser.combinator({ value: ' ' }))\n        node.prepend(parentNode.clone({}))\n      }\n      merged.push(node.toString())\n    })\n  })\n  return merged\n}\n\n/**\n * Move a child and its preceeding comment(s) to after \"after\"\n */\nfunction breakOut(child, after) {\n  let prev = child.prev()\n  after.after(child)\n  while (prev && prev.type === 'comment') {\n    let nextPrev = prev.prev()\n    after.after(prev)\n    prev = nextPrev\n  }\n  return child\n}\n\nfunction createFnAtruleChilds(bubble) {\n  return function atruleChilds(rule, atrule, bubbling, mergeSels = bubbling) {\n    let children = []\n    atrule.each(child => {\n      if (child.type === 'rule' && bubbling) {\n        if (mergeSels) {\n          child.selectors = mergeSelectors(rule, child)\n        }\n      } else if (child.type === 'atrule' && child.nodes) {\n        if (bubble[child.name]) {\n          atruleChilds(rule, child, mergeSels)\n        } else if (atrule[rootRuleMergeSel] !== false) {\n          children.push(child)\n        }\n      } else {\n        children.push(child)\n      }\n    })\n    if (bubbling) {\n      if (children.length) {\n        let clone = rule.clone({ nodes: [] })\n        for (let child of children) {\n          clone.append(child)\n        }\n        atrule.prepend(clone)\n      }\n    }\n  }\n}\n\nfunction pickDeclarations(selector, declarations, after) {\n  let parent = new Rule({\n    selector,\n    nodes: []\n  })\n  parent.append(declarations)\n  after.after(parent)\n  return parent\n}\n\nfunction atruleNames(defaults, custom) {\n  let list = {}\n  for (let name of defaults) {\n    list[name] = true\n  }\n  if (custom) {\n    for (let name of custom) {\n      list[name.replace(/^@/, '')] = true\n    }\n  }\n  return list\n}\n\nfunction parseRootRuleParams(params) {\n  params = params.trim()\n  let braceBlock = params.match(/^\\((.*)\\)$/)\n  if (!braceBlock) {\n    return { type: 'basic', selector: params }\n  }\n  let bits = braceBlock[1].match(/^(with(?:out)?):(.+)$/)\n  if (bits) {\n    let allowlist = bits[1] === 'with'\n    let rules = Object.fromEntries(\n      bits[2]\n        .trim()\n        .split(/\\s+/)\n        .map(name => [name, true])\n    )\n    if (allowlist && rules.all) {\n      return { type: 'noop' }\n    }\n    let escapes = rule => !!rules[rule]\n    if (rules.all) {\n      escapes = () => true\n    } else if (allowlist) {\n      escapes = rule => (rule === 'all' ? false : !rules[rule])\n    }\n\n    return {\n      type: 'withrules',\n      escapes\n    }\n  }\n  // Unrecognized brace block\n  return { type: 'unknown' }\n}\n\nfunction getAncestorRules(leaf) {\n  let lineage = []\n  let parent = leaf.parent\n\n  while (parent && parent instanceof AtRule) {\n    lineage.push(parent)\n    parent = parent.parent\n  }\n  return lineage\n}\n\nfunction unwrapRootRule(rule) {\n  let escapes = rule[rootRuleEscapes]\n\n  if (!escapes) {\n    rule.after(rule.nodes)\n  } else {\n    let nodes = rule.nodes\n\n    let topEscaped\n    let topEscapedIdx = -1\n    let breakoutLeaf\n    let breakoutRoot\n    let clone\n\n    let lineage = getAncestorRules(rule)\n    lineage.forEach((parent, i) => {\n      if (escapes(parent.name)) {\n        topEscaped = parent\n        topEscapedIdx = i\n        breakoutRoot = clone\n      } else {\n        let oldClone = clone\n        clone = parent.clone({ nodes: [] })\n        oldClone && clone.append(oldClone)\n        breakoutLeaf = breakoutLeaf || clone\n      }\n    })\n\n    if (!topEscaped) {\n      rule.after(nodes)\n    } else if (!breakoutRoot) {\n      topEscaped.after(nodes)\n    } else {\n      let leaf = breakoutLeaf\n      leaf.append(nodes)\n      topEscaped.after(breakoutRoot)\n    }\n\n    if (rule.next() && topEscaped) {\n      let restRoot\n      lineage.slice(0, topEscapedIdx + 1).forEach((parent, i, arr) => {\n        let oldRoot = restRoot\n        restRoot = parent.clone({ nodes: [] })\n        oldRoot && restRoot.append(oldRoot)\n\n        let nextSibs = []\n        let _child = arr[i - 1] || rule\n        let next = _child.next()\n        while (next) {\n          nextSibs.push(next)\n          next = next.next()\n        }\n        restRoot.append(nextSibs)\n      })\n      restRoot && (breakoutRoot || nodes[nodes.length - 1]).after(restRoot)\n    }\n  }\n\n  rule.remove()\n}\n\nconst rootRuleMergeSel = Symbol('rootRuleMergeSel')\nconst rootRuleEscapes = Symbol('rootRuleEscapes')\n\nfunction normalizeRootRule(rule) {\n  let { params } = rule\n  let { type, selector, escapes } = parseRootRuleParams(params)\n  if (type === 'unknown') {\n    throw rule.error(\n      `Unknown @${rule.name} parameter ${JSON.stringify(params)}`\n    )\n  }\n  if (type === 'basic' && selector) {\n    let selectorBlock = new Rule({ selector, nodes: rule.nodes })\n    rule.removeAll()\n    rule.append(selectorBlock)\n  }\n  rule[rootRuleEscapes] = escapes\n  rule[rootRuleMergeSel] = escapes ? !escapes('all') : type === 'noop'\n}\n\nconst hasRootRule = Symbol('hasRootRule')\n\nmodule.exports = (opts = {}) => {\n  let bubble = atruleNames(\n    ['media', 'supports', 'layer', 'container'],\n    opts.bubble\n  )\n  let atruleChilds = createFnAtruleChilds(bubble)\n  let unwrap = atruleNames(\n    [\n      'document',\n      'font-face',\n      'keyframes',\n      '-webkit-keyframes',\n      '-moz-keyframes'\n    ],\n    opts.unwrap\n  )\n  let rootRuleName = (opts.rootRuleName || 'at-root').replace(/^@/, '')\n  let preserveEmpty = opts.preserveEmpty\n\n  return {\n    postcssPlugin: 'postcss-nested',\n\n    Once(root) {\n      root.walkAtRules(rootRuleName, node => {\n        normalizeRootRule(node)\n        root[hasRootRule] = true\n      })\n    },\n\n    Rule(rule) {\n      let unwrapped = false\n      let after = rule\n      let copyDeclarations = false\n      let declarations = []\n\n      rule.each(child => {\n        if (child.type === 'rule') {\n          if (declarations.length) {\n            after = pickDeclarations(rule.selector, declarations, after)\n            declarations = []\n          }\n\n          copyDeclarations = true\n          unwrapped = true\n          child.selectors = mergeSelectors(rule, child)\n          after = breakOut(child, after)\n        } else if (child.type === 'atrule') {\n          if (declarations.length) {\n            after = pickDeclarations(rule.selector, declarations, after)\n            declarations = []\n          }\n          if (child.name === rootRuleName) {\n            unwrapped = true\n            atruleChilds(rule, child, true, child[rootRuleMergeSel])\n            after = breakOut(child, after)\n          } else if (bubble[child.name]) {\n            copyDeclarations = true\n            unwrapped = true\n            atruleChilds(rule, child, true)\n            after = breakOut(child, after)\n          } else if (unwrap[child.name]) {\n            copyDeclarations = true\n            unwrapped = true\n            atruleChilds(rule, child, false)\n            after = breakOut(child, after)\n          } else if (copyDeclarations) {\n            declarations.push(child)\n          }\n        } else if (child.type === 'decl' && copyDeclarations) {\n          declarations.push(child)\n        }\n      })\n\n      if (declarations.length) {\n        after = pickDeclarations(rule.selector, declarations, after)\n      }\n\n      if (unwrapped && preserveEmpty !== true) {\n        rule.raws.semicolon = true\n        if (rule.nodes.length === 0) rule.remove()\n      }\n    },\n\n    RootExit(root) {\n      if (root[hasRootRule]) {\n        root.walkAtRules(rootRuleName, unwrapRootRule)\n        root[hasRootRule] = false\n      }\n    }\n  }\n}\nmodule.exports.postcss = true\n", "\"use strict\";\n\nvar pattern = /-(\\w|$)/g;\n\nvar callback = function callback(dashChar, char) {\n\treturn char.toUpperCase();\n};\n\nvar camelCaseCSS = function camelCaseCSS(property) {\n\tproperty = property.toLowerCase();\n\n\t// NOTE :: IE8's \"styleFloat\" is intentionally not supported\n\tif (property === \"float\") {\n\t\treturn \"cssFloat\";\n\t}\n\t// Microsoft vendor-prefixes are uniquely cased\n\telse if (property.charCodeAt(0) === 45&& property.charCodeAt(1) === 109&& property.charCodeAt(2) === 115&& property.charCodeAt(3) === 45) {\n\t\t\treturn property.substr(1).replace(pattern, callback);\n\t\t} else {\n\t\t\treturn property.replace(pattern, callback);\n\t\t}\n};\n\nmodule.exports = camelCaseCSS;\n", "let camelcase = require('camelcase-css')\n\nlet UNITLESS = {\n  boxFlex: true,\n  boxFlexGroup: true,\n  columnCount: true,\n  flex: true,\n  flexGrow: true,\n  flexPositive: true,\n  flexShrink: true,\n  flexNegative: true,\n  fontWeight: true,\n  lineClamp: true,\n  lineHeight: true,\n  opacity: true,\n  order: true,\n  orphans: true,\n  tabSize: true,\n  widows: true,\n  zIndex: true,\n  zoom: true,\n  fillOpacity: true,\n  strokeDashoffset: true,\n  strokeOpacity: true,\n  strokeWidth: true\n}\n\nfunction atRule(node) {\n  if (typeof node.nodes === 'undefined') {\n    return true\n  } else {\n    return process(node)\n  }\n}\n\nfunction process(node) {\n  let name\n  let result = {}\n\n  node.each(child => {\n    if (child.type === 'atrule') {\n      name = '@' + child.name\n      if (child.params) name += ' ' + child.params\n      if (typeof result[name] === 'undefined') {\n        result[name] = atRule(child)\n      } else if (Array.isArray(result[name])) {\n        result[name].push(atRule(child))\n      } else {\n        result[name] = [result[name], atRule(child)]\n      }\n    } else if (child.type === 'rule') {\n      let body = process(child)\n      if (result[child.selector]) {\n        for (let i in body) {\n          result[child.selector][i] = body[i]\n        }\n      } else {\n        result[child.selector] = body\n      }\n    } else if (child.type === 'decl') {\n      if (child.prop[0] === '-' && child.prop[1] === '-') {\n        name = child.prop\n      } else if (child.parent && child.parent.selector === ':export') {\n        name = child.prop\n      } else {\n        name = camelcase(child.prop)\n      }\n      let value = child.value\n      if (!isNaN(child.value) && UNITLESS[name]) {\n        value = parseFloat(child.value)\n      }\n      if (child.important) value += ' !important'\n      if (typeof result[name] === 'undefined') {\n        result[name] = value\n      } else if (Array.isArray(result[name])) {\n        result[name].push(value)\n      } else {\n        result[name] = [result[name], value]\n      }\n    }\n  })\n  return result\n}\n\nmodule.exports = process\n", "let postcss = require('postcss')\n\nlet IMPORTANT = /\\s*!important\\s*$/i\n\nlet UNITLESS = {\n  'box-flex': true,\n  'box-flex-group': true,\n  'column-count': true,\n  'flex': true,\n  'flex-grow': true,\n  'flex-positive': true,\n  'flex-shrink': true,\n  'flex-negative': true,\n  'font-weight': true,\n  'line-clamp': true,\n  'line-height': true,\n  'opacity': true,\n  'order': true,\n  'orphans': true,\n  'tab-size': true,\n  'widows': true,\n  'z-index': true,\n  'zoom': true,\n  'fill-opacity': true,\n  'stroke-dashoffset': true,\n  'stroke-opacity': true,\n  'stroke-width': true\n}\n\nfunction dashify(str) {\n  return str\n    .replace(/([A-Z])/g, '-$1')\n    .replace(/^ms-/, '-ms-')\n    .toLowerCase()\n}\n\nfunction decl(parent, name, value) {\n  if (value === false || value === null) return\n\n  if (!name.startsWith('--')) {\n    name = dashify(name)\n  }\n\n  if (typeof value === 'number') {\n    if (value === 0 || UNITLESS[name]) {\n      value = value.toString()\n    } else {\n      value += 'px'\n    }\n  }\n\n  if (name === 'css-float') name = 'float'\n\n  if (IMPORTANT.test(value)) {\n    value = value.replace(IMPORTANT, '')\n    parent.push(postcss.decl({ prop: name, value, important: true }))\n  } else {\n    parent.push(postcss.decl({ prop: name, value }))\n  }\n}\n\nfunction atRule(parent, parts, value) {\n  let node = postcss.atRule({ name: parts[1], params: parts[3] || '' })\n  if (typeof value === 'object') {\n    node.nodes = []\n    parse(value, node)\n  }\n  parent.push(node)\n}\n\nfunction parse(obj, parent) {\n  let name, value, node\n  for (name in obj) {\n    value = obj[name]\n    if (value === null || typeof value === 'undefined') {\n      continue\n    } else if (name[0] === '@') {\n      let parts = name.match(/@(\\S+)(\\s+([\\W\\w]*)\\s*)?/)\n      if (Array.isArray(value)) {\n        for (let i of value) {\n          atRule(parent, parts, i)\n        }\n      } else {\n        atRule(parent, parts, value)\n      }\n    } else if (Array.isArray(value)) {\n      for (let i of value) {\n        decl(parent, name, i)\n      }\n    } else if (typeof value === 'object') {\n      node = postcss.rule({ selector: name })\n      parse(value, node)\n      parent.push(node)\n    } else {\n      decl(parent, name, value)\n    }\n  }\n}\n\nmodule.exports = function (obj) {\n  let root = postcss.root()\n  parse(obj, root)\n  return root\n}\n", "let objectify = require('./objectifier')\n\nmodule.exports = function processResult(result) {\n  if (console && console.warn) {\n    result.warnings().forEach(warn => {\n      let source = warn.plugin || 'PostCSS'\n      console.warn(source + ': ' + warn.text)\n    })\n  }\n  return objectify(result.root)\n}\n", "let postcss = require('postcss')\n\nlet processResult = require('./process-result')\nlet parse = require('./parser')\n\nmodule.exports = function async(plugins) {\n  let processor = postcss(plugins)\n  return async input => {\n    let result = await processor.process(input, {\n      parser: parse,\n      from: undefined\n    })\n    return processResult(result)\n  }\n}\n", "let postcss = require('postcss')\n\nlet processResult = require('./process-result')\nlet parse = require('./parser')\n\nmodule.exports = function (plugins) {\n  let processor = postcss(plugins)\n  return input => {\n    let result = processor.process(input, { parser: parse, from: undefined })\n    return processResult(result)\n  }\n}\n", "let objectify = require('./objectifier')\nlet parse = require('./parser')\nlet async = require('./async')\nlet sync = require('./sync')\n\nmodule.exports = {\n  objectify,\n  parse,\n  async,\n  sync\n}\n", "let tokenizer = require('postcss/lib/tokenize')\nlet Comment = require('postcss/lib/comment')\nlet Parser = require('postcss/lib/parser')\n\nclass SafeParser extends Parser {\n  createTokenizer() {\n    this.tokenizer = tokenizer(this.input, { ignoreErrors: true })\n  }\n\n  comment(token) {\n    let node = new Comment()\n    this.init(node, token[2])\n    let pos =\n      this.input.fromOffset(token[3]) ||\n      this.input.fromOffset(this.input.css.length - 1)\n    node.source.end = {\n      offset: token[3],\n      line: pos.line,\n      column: pos.col\n    }\n\n    let text = token[1].slice(2)\n    if (text.slice(-2) === '*/') text = text.slice(0, -2)\n\n    if (/^\\s*$/.test(text)) {\n      node.text = ''\n      node.raws.left = text\n      node.raws.right = ''\n    } else {\n      let match = text.match(/^(\\s*)([^]*\\S)(\\s*)$/)\n      node.text = match[2]\n      node.raws.left = match[1]\n      node.raws.right = match[3]\n    }\n  }\n\n  decl(tokens) {\n    if (tokens.length > 1 && tokens.some(i => i[0] === 'word')) {\n      super.decl(tokens)\n    }\n  }\n\n  unclosedBracket() {}\n\n  unknownWord(tokens) {\n    this.spaces += tokens.map(i => i[1]).join('')\n  }\n\n  unexpectedClose() {\n    this.current.raws.after += '}'\n  }\n\n  doubleColon() {}\n\n  unnamedAtrule(node) {\n    node.name = ''\n  }\n\n  precheckMissedSemicolon(tokens) {\n    let colon = this.colon(tokens)\n    if (colon === false) return\n\n    let nextStart, prevEnd\n    for (nextStart = colon - 1; nextStart >= 0; nextStart--) {\n      if (tokens[nextStart][0] === 'word') break\n    }\n    if (nextStart === 0) return\n\n    for (prevEnd = nextStart - 1; prevEnd >= 0; prevEnd--) {\n      if (tokens[prevEnd][0] !== 'space') {\n        prevEnd += 1\n        break\n      }\n    }\n\n    let other = tokens.slice(nextStart)\n    let spaces = tokens.slice(prevEnd, nextStart)\n    tokens.splice(prevEnd, tokens.length - prevEnd)\n    this.spaces = spaces.map(i => i[1]).join('')\n\n    this.decl(other)\n  }\n\n  checkMissedSemicolon() {}\n\n  endFile() {\n    if (this.current.nodes && this.current.nodes.length) {\n      this.current.raws.semicolon = this.semicolon\n    }\n    this.current.raws.after = (this.current.raws.after || '') + this.spaces\n\n    while (this.current.parent) {\n      this.current = this.current.parent\n      this.current.raws.after = ''\n    }\n  }\n}\n\nmodule.exports = SafeParser\n", "let { Input } = require('postcss')\n\nlet SafeParser = require('./safe-parser')\n\nmodule.exports = function safeParse(css, opts) {\n  let input = new Input(css, opts)\n\n  let parser = new SafeParser(input)\n  parser.parse()\n\n  return parser.root\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=types.js.map", "import type { Token } from './types';\n\nexport interface TokyOptions<T extends Token<unknown>> {\n    shouldAddToken(type: T['type'], value: string): boolean;\n    isStringDelimiter(char: string, previousChar: string): boolean;\n    isDelimiter(char: string, previousChar: string): boolean;\n    isWhitespace(char: string): boolean;\n    getCommentStartType(ch: string, source: string, nextCharIndex: number): string;\n    isCommentEnd(\n        inComment: string,\n        ch: string,\n        source: string,\n        nextCharIndex: number,\n        previousChar: string\n    ): boolean;\n    getUnclosedComment(inComment: string): string;\n    createToken(value: string, type: T['type'], start: number, end: number): T;\n    shouldClose?(ch: string, previousChar: string): boolean;\n    offset?: number;\n}\n\nexport function tokenize<T extends Token<unknown>>(\n    source: string,\n    {\n        shouldClose,\n        isDelimiter,\n        isStringDelimiter,\n        isWhitespace,\n        shouldAddToken,\n        createToken,\n        getCommentStartType,\n        isCommentEnd,\n        getUnclosedComment,\n        offset = 0,\n    }: TokyOptions<T>\n): T[] {\n    const tokens: T[] = [];\n    let previousChar = '';\n    let buffer = '';\n    let inComment = '';\n    let inString = '';\n    let start = offset;\n    let nextCharIndex = 0;\n    for (const ch of source) {\n        nextCharIndex += ch.length;\n        if (inString) {\n            buffer += ch;\n            if (ch === inString && previousChar !== '\\\\') {\n                pushBuffer('string');\n                inString = '';\n            }\n        } else if (inComment) {\n            buffer += ch;\n            if (isCommentEnd(inComment, ch, source, nextCharIndex, previousChar)) {\n                pushBuffer(inComment);\n                inComment = '';\n            }\n        } else if ((inComment = getCommentStartType(ch, source, nextCharIndex))) {\n            pushBuffer();\n            buffer += ch;\n        } else if (isStringDelimiter(ch, previousChar)) {\n            pushBuffer();\n            buffer += ch;\n            inString = ch;\n        } else if (isDelimiter(ch, previousChar)) {\n            pushBuffer();\n            buffer += ch;\n            pushBuffer(ch);\n        } else if (isWhitespace(ch) && !isWhitespace(previousChar)) {\n            pushBuffer();\n            buffer += ch;\n        } else if (!isWhitespace(ch) && isWhitespace(previousChar)) {\n            pushBuffer();\n            buffer += ch;\n        } else if(shouldClose?.(ch, previousChar)) {\n            pushBuffer();\n            buffer += ch;\n            pushBuffer(ch);\n        } else {\n            buffer += ch;\n        }\n        previousChar = ch;\n    }\n    if (buffer.length) {\n        if (inComment) {\n            pushBuffer(getUnclosedComment(inComment));\n        } else if (inString) {\n            pushBuffer('unclosed-string');\n        } else {\n            pushBuffer();\n        }\n    }\n    function pushBuffer(type?: T['type']) {\n        if (buffer.length === 0) {\n            return;\n        }\n        const end = start + buffer.length;\n        type = type ?? (buffer.trim().length ? 'text' : 'space');\n        if (shouldAddToken(type, buffer)) {\n            tokens[tokens.length] = createToken(buffer, type, start, end);\n        }\n        start = end;\n        buffer = '';\n    }\n    return tokens;\n}\n", "import type { Token } from './types';\n\n/**\n * Checks if a token type is comment\n */\nexport function isComment(type: string) {\n    return type === 'line-comment' || type === 'multi-comment' || type === 'unclosed-comment';\n}\n\n/**\n * Checks if a token type is string\n */\nexport function isString(type: string) {\n    return type === 'string' || type === 'unclosed-string';\n}\n\n/**\n * Checks for a set of JS strings\n */\nexport const isStringDelimiter = (char: string) => char === `'` || char === `\"` || char === '`';\n\n/**\n * Checks for a set of Whitespace\n */\nexport const isWhitespace = (char: string) =>\n    char === ' ' || char === `\\t` || char === `\\r` || char === '\\n';\n\n/**\n * Creates a basic token\n */\nexport const createToken = <Type extends string>(\n    value: string,\n    type: Type,\n    start: number,\n    end: number\n) => {\n    return {\n        value,\n        type,\n        start,\n        end,\n    };\n};\n\n/**\n * Get JS type of comments for a specific set of start chars when no comment is detected empty string is used\n */\nexport function getJSCommentStartType(\n    ch: string,\n    source: string,\n    nextCharIndex: number\n): '' | 'line-comment' | 'multi-comment' {\n    if (ch === '/' && source[nextCharIndex] === '/') {\n        return 'line-comment';\n    } else {\n        return ch === '/' && source[nextCharIndex] === '*' ? 'multi-comment' : '';\n    }\n}\n\n/**\n * Get CSS type of comments for a specific set of start chars when no comment is detected empty string is used\n */\nexport function getMultilineCommentStartType(\n    ch: string,\n    source: string,\n    nextCharIndex: number\n): '' | 'multi-comment' {\n    return ch === '/' && source[nextCharIndex] === '*' ? 'multi-comment' : '';\n}\n\n/**\n * Given a JS comment type determine if this is the end of the comment\n */\nexport function isCommentEnd(\n    commentType: string,\n    ch: string,\n    _source: string,\n    _nextCharIndex: number,\n    previousChar: string\n): boolean {\n    if (commentType === 'line-comment' && ch === '\\n') {\n        return true;\n    } else if (commentType === 'multi-comment' && ch === '/' && previousChar === '*') {\n        return true;\n    }\n    return false;\n}\n\n/**\n * Get the type of unclosed comment\n */\nexport function getUnclosedComment(commentType: string): 'line-comment' | 'unclosed-comment' {\n    if (commentType === 'line-comment') {\n        return commentType;\n    } else {\n        return 'unclosed-comment';\n    }\n}\n/**\n * Get the text between two token indexes\n * if source is provided it will slice the text from original source\n * otherwise the value of the tokens will be concatenated\n */\nexport function getText(tokens: Token<any>[], startIndex = 0, upToIndex = -1, source?: string) {\n    if (tokens.length === 0) {\n        return '';\n    }\n    if (upToIndex === -1) {\n        upToIndex = tokens.length;\n    }\n\n    if (source) {\n        return source.slice(tokens[startIndex].start, tokens[upToIndex - 1].end);\n    } else {\n        let res = '';\n        for (let i = startIndex; i < upToIndex; i++) {\n            res += tokens[i].value;\n        }\n        return res;\n    }\n}\n\n/**\n * Takes an array of tokens and group them into a single token.\n * If source is provided the value will contain the text between the tokens,\n * instead of the tokens concatenated text.\n */\nexport function groupTokens<Tokens extends Token<any>[], T extends string = 'tokens'>(\n    tokens: Tokens,\n    type: T = 'tokens' as T,\n    source?: string\n) {\n    return {\n        type,\n        start: tokens[0].start,\n        end: tokens[tokens.length - 1].end,\n        value: getText(tokens, undefined, undefined, source),\n        tokens,\n    };\n}\n\n/**\n * Trim tokens from both ends with a matcher function\n */\nexport function trimTokens<Tokens extends Token<any>[]>(\n    tokens: Tokens,\n    shouldTrimToken: (token: Token<any>) => boolean\n) {\n    let start = 0;\n    let end = tokens.length;\n    for (let i = 0; i < tokens.length; i++) {\n        if (shouldTrimToken(tokens[i])) {\n            start = i + 1;\n        } else {\n            break;\n        }\n    }\n    for (let i = tokens.length - 1; i > start; i--) {\n        if (shouldTrimToken(tokens[i])) {\n            end = i;\n        } else {\n            break;\n        }\n    }\n    return tokens.slice(start, end);\n}\n\n/**\n * get last item in array\n */\nexport function last<T>(arr: T[]): T | undefined {\n    return arr[arr.length - 1];\n}\n", "import type { Token } from './types';\n\n/**\n * Minimal token traverse helper used to create structure from tokens\n */\nexport class Seeker<T extends Token<unknown>> {\n    index = -1;\n    constructor(public tokens: T[]) {}\n    next() {\n        this.index++;\n        return this.tokens[this.index] || { type: '' };\n    }\n    back() {\n        this.index--;\n    }\n    peekBack() {\n        return this.tokens[this.index - 1] || { type: '' };\n    }\n    peek(num = 1) {\n        return this.tokens[this.index + num] || { type: '' };\n    }\n    take(type: T['type']) {\n        if (this.peek().type === type) {\n            return this.next();\n        }\n        return undefined;\n    }\n    eat(type: T['type']) {\n        while (this.peek().type === type) {\n            this.index++;\n        }\n        return this;\n    }\n    takeMany(type: T['type']) {\n        const tokens = [];\n        while (this.peek().type === type) {\n            tokens.push(this.next());\n        }\n        return tokens;\n    }\n    flatBlock(start: string, end: string, isEndError?: (token: Token<any>) => boolean) {\n        let token = this.next();\n        if (token.type !== start) {\n            return [];\n        }\n        const block = [];\n        let endIndex;\n        while ((token = this.next())) {\n            if (!token.type) {\n                if (endIndex !== undefined) {\n                    this.index = endIndex - 1;\n                }\n                return;\n            }\n            if (isEndError && isEndError(token)) {\n                endIndex = this.index;\n            }\n            if (token.type === end) {\n                return block;\n            } else {\n                block.push(token);\n            }\n        }\n        return [];\n    }\n    done() {\n        return this.index >= this.tokens.length - 1;\n    }\n    run<A>(\n        handleToken: (token: T, ast: A, source: string, seeker: this) => void | boolean,\n        ast: A,\n        source: string\n    ) {\n        let token;\n        while ((token = this.next()) && token.type) {\n            if (handleToken(token, ast, source, this) === false) {\n                break;\n            }\n        }\n        return ast;\n    }\n}\n", "export * from './types';\nexport * from './core';\nexport * from './helpers';\nexport * from './seeker';\n", "import {\n    tokenize,\n    isStringDelimiter,\n    isWhitespace,\n    createToken,\n    getJSCommentStartType,\n    getMultilineCommentStartType,\n    isCommentEnd,\n    getUnclosedComment,\n} from '@tokey/core';\nimport type { Token, Descriptors } from '@tokey/core';\n\ntype Delimiters =\n    | '['\n    | ']'\n    | '('\n    | ')'\n    | ','\n    | '*'\n    | '|'\n    | ':'\n    | '.'\n    | '#'\n    | '>'\n    | '~'\n    | '+'\n    | '{'\n    | '}'\n    | '&';\n\nexport type CSSSelectorToken = Token<Descriptors | Delimiters>;\n\nexport function tokenizeSelector(source: string, options: { offset?: number } = {}) {\n    const parseLineComments = false; // why would that be a choice?\n    return tokenize<CSSSelectorToken>(source, {\n        isDelimiter,\n        isStringDelimiter(char: string, previousChar: string) {\n            return previousChar !== `\\\\` && isStringDelimiter(char);\n        },\n        isWhitespace,\n        shouldAddToken: () => true,\n        createToken,\n        getCommentStartType: parseLineComments\n            ? getJSCommentStartType\n            : getMultilineCommentStartType,\n        isCommentEnd,\n        getUnclosedComment,\n        offset: options.offset,\n    });\n}\n\nconst isDelimiter = (char: string, previousChar: string) =>\n    previousChar !== '\\\\' &&\n    (char === '[' ||\n        char === ']' ||\n        char === '(' ||\n        char === ')' ||\n        char === ',' ||\n        char === '*' ||\n        char === '|' ||\n        char === ':' ||\n        char === '.' ||\n        char === '#' ||\n        char === '>' ||\n        char === '~' ||\n        char === '+' ||\n        char === '{' ||\n        char === '}' ||\n        char === '&');\n", "import type { CSSSelectorToken } from './tokenizer';\nimport type {\n    Combinator,\n    Comment,\n    Selector,\n    Nth,\n    NamespacedNode,\n    SelectorList,\n    SelectorNode,\n} from './ast-types';\nimport { Token, last } from '@tokey/core';\n\n// create ast nodes\n\nexport function createEmptySelector(): Selector {\n    return {\n        type: 'selector',\n        start: -1,\n        end: -1,\n        before: '',\n        after: '',\n        nodes: [],\n    };\n}\n\nexport function createEmptyNth(): Nth {\n    return {\n        type: 'nth',\n        start: -1,\n        end: -1,\n        before: '',\n        after: '',\n        nodes: [],\n    };\n}\n\nexport function createCombinatorAst({\n    value,\n    type,\n    start,\n    end,\n}: CSSSelectorToken & Token<'space' | '+' | '>' | '~'>): Combinator {\n    return {\n        type: `combinator`,\n        combinator: type,\n        value: type === `space` ? value[0] : value,\n        start,\n        end,\n        before: ``,\n        after: type === `space` ? value.slice(1) : ``,\n        invalid: false,\n    };\n}\n\nexport function createCommentAst({ value, start, end }: CSSSelectorToken): Comment {\n    return {\n        type: `comment`,\n        value,\n        start,\n        end,\n        before: ``,\n        after: ``,\n    };\n}\n\n// type guards\n\nexport function isCombinatorToken(\n    token: CSSSelectorToken\n): token is Token<'space' | '+' | '>' | '~'> {\n    return token.type === 'space' || token.type === '+' || token.type === '>' || token.type === '~';\n}\n\nexport function isNamespacedToken(token: CSSSelectorToken): token is Token<'text' | '*'> {\n    return token.type === `*` || token.type === `text`;\n}\nexport function isNamespacedAst(token: SelectorNode): token is NamespacedNode {\n    return token.type === `universal` || token.type === `type`;\n}\n\n// utils\n\nexport function ensureSelector(selectors: SelectorList, startToken: CSSSelectorToken) {\n    let lastSelector = last(selectors);\n    if (!lastSelector) {\n        lastSelector = createEmptySelector();\n        lastSelector.start = startToken.start;\n        selectors.push(lastSelector);\n    }\n    return lastSelector;\n}\n\nexport function trimCombinators(selector: Selector) {\n    // costly way to turn combinators to before and after.\n    // this can be inlined in the handle token process\n    const nodes = selector.nodes;\n    const firstNode = nodes[0];\n    const lastNode = last(nodes);\n    // remove first space combinator and add to selector before\n    // (going between comment is not required for the start because they are taken care\n    // of during parsing)\n    if (firstNode?.type === 'combinator' && firstNode.combinator === 'space') {\n        selector.nodes.shift();\n        selector.before += firstNode.before + firstNode.value + firstNode.after;\n    }\n    // remove any edge space combinators (last and between comments)\n    if (lastNode && lastNode !== firstNode) {\n        let index = nodes.length - 1;\n        let current = lastNode;\n        let lastComment: Comment | undefined;\n        while (\n            current &&\n            (current.type === `comment` ||\n                (current.type === `combinator` && current.combinator === `space`))\n        ) {\n            if (current.type === `combinator`) {\n                if (!lastComment) {\n                    // attach space to end of selector\n                    selector.nodes.pop();\n                    selector.after += current.before + current.value + current.after;\n                } else {\n                    // attach space to start of comment\n                    selector.nodes.splice(index, 1);\n                    lastComment.before += current.before + current.value + current.after;\n                    lastComment.start = current.start;\n                }\n            } else {\n                lastComment = current;\n            }\n            current = nodes[--index];\n        }\n    }\n}\n", "import type { CSSSelectorToken } from './tokenizer';\nimport type { Nth, NthOf, NthOffset, NthStep } from './ast-types';\nimport { createCommentAst } from './helpers';\nimport { isComment, Seeker, last } from '@tokey/core';\n\nexport class NthParser {\n    static isNthPseudoClass(name: string): boolean {\n        return (\n            name === `nth-child` ||\n            name === `nth-last-child` ||\n            name === `nth-of-type` ||\n            name === `nth-last-of-type`\n        );\n    }\n    /**\n     * check (case insensitive) and returns 2 groups:\n     * 1. plus/minus sign (invalid step value)\n     * 2. odd/even string\n     * [\n     *  `+`|`-`|undefined,\n     *  `odd`|`even`\n     * ]\n     */\n    static oddEvenStep = /([-+]?)(odd|even)/i;\n    /**\n     * check for valid step\n     * starts with optional minus or plus,\n     * ends with 0 or more digits following a `n`/`N` character\n     */\n    static validStep = /^[-+]?\\d*n$/i;\n    /**\n     * check for valid offset\n     * starts with optional minus or plus,\n     * ends with 1 or more digits\n     */\n    static validOffset = /^[-+]?\\d+$/;\n    /**\n     * check for valid start of nth expression\n     * and returns 2 groups:\n     * 1. An: optional minus or plus, 0 or more digits, `n`/`N` character\n     * 2. anything after that\n     */\n    static nthStartExp = /([-+]?\\d*[nN]?)(.*)/;\n\n    public state: 'step' | `dash` | `offset` | `of` | `selector` = `step`;\n    private standaloneDash = false;\n    private ast: Nth['nodes'];\n    constructor(private selectorNode: Nth, private s: Seeker<CSSSelectorToken>) {\n        this.ast = selectorNode.nodes;\n    }\n    public handleToken(token: CSSSelectorToken): boolean {\n        const type = token.type;\n        if (type === `text` || type === `+`) {\n            switch (this.state) {\n                case `step`: {\n                    // pickup 1 or more tokens for `5n` / `+5n` / `+5n-4` / `5`\n                    const nextToken =\n                        type === `+` && this.s.peek().type === `text` ? this.s.next() : undefined;\n                    this.breakFirstChunk({\n                        type: `text`,\n                        value: token.value + (nextToken?.value || ``),\n                        start: token.start,\n                        end: nextToken?.end || token.end,\n                    });\n                    return true;\n                }\n                case `dash`: {\n                    const nextToken =\n                        type === `+` && this.s.peek().type === `text` ? this.s.next() : undefined;\n                    this.pushDash({\n                        type: `text`,\n                        value: token.value + (nextToken?.value || ``),\n                        start: token.start,\n                        end: nextToken?.end || token.end,\n                    });\n                    return true;\n                }\n                case `offset`: {\n                    const nextToken =\n                        type === `+` && this.s.peek().type === `text` ? this.s.next() : undefined;\n                    this.pushOffset({\n                        type: `text`,\n                        value: token.value + (nextToken?.value || ``),\n                        start: token.start,\n                        end: nextToken?.end || token.end,\n                    });\n                    return true;\n                }\n                case `of`: {\n                    this.pushOf(token);\n                    return false;\n                }\n            }\n        } else if (type === `space`) {\n            // improve typing\n            const lastNode = last(this.ast);\n            if (lastNode) {\n                lastNode.after += token.value;\n                lastNode.end += token.value.length;\n            } else {\n                // add initial space to top selector\n                this.selectorNode.before += token.value;\n            }\n            return true;\n        } else if (isComment(type)) {\n            this.ast.push(createCommentAst(token));\n            return true;\n        }\n        // not part of `An+b of`: bail out\n        this.s.back();\n        return false;\n    }\n    /**\n     * first token can only be (minus contained in text):\n     * step: `5n`/`+5n`/`-5n`\n     * step & offset: `5n`/`5n-5\n     */\n    private breakFirstChunk(token: CSSSelectorToken) {\n        const value = token.value;\n        // find odd/even\n        const oddEventMatch = value.match(NthParser.oddEvenStep);\n        if (oddEventMatch) {\n            const isInvalid = !!oddEventMatch[1];\n            this.pushStep(token, isInvalid);\n            return;\n        }\n        // separate valid step start from rest: `-5n-4` / `-5n` / `-4` / `5n-4`\n        const matchValidStart = value.match(NthParser.nthStartExp);\n        if (!matchValidStart) {\n            // invalid step\n            this.pushStep(token);\n        } else {\n            const step = matchValidStart[1];\n            const offset = matchValidStart[2];\n            if (!offset && !step.match(/[nN]+$/) && step.match(NthParser.validOffset)) {\n                // no `n` - just offset\n                this.pushOffset(token);\n            } else if (offset === `-`) {\n                // connected dash: `5n-`\n                this.pushStep({\n                    type: `text`,\n                    value: step,\n                    start: token.start,\n                    end: token.start + step.length,\n                });\n                this.pushDash({\n                    type: `text`,\n                    value: `-`,\n                    start: token.end - 1,\n                    end: token.end,\n                });\n            } else if (offset && !offset.match(/-\\d+/)) {\n                // invalid step: `-3x`\n                this.pushStep(token);\n            } else {\n                // step with potential minus offset: `5n-4`\n                this.pushStep({\n                    type: `text`,\n                    value: step,\n                    start: token.start,\n                    end: token.start + step.length,\n                });\n                if (offset) {\n                    this.pushOffset({\n                        type: `text`,\n                        value: offset,\n                        start: token.end - offset.length,\n                        end: token.end,\n                    });\n                }\n            }\n        }\n    }\n    private pushStep(token: CSSSelectorToken, isInvalid?: boolean) {\n        const value = token.value;\n        const stepNode: NthStep = {\n            type: `nth_step`,\n            value,\n            before: ``,\n            after: ``,\n            start: token.start,\n            end: token.end,\n        };\n        isInvalid = isInvalid !== undefined ? isInvalid : !value.match(NthParser.validStep);\n        if (isInvalid) {\n            stepNode.invalid = true;\n        }\n        this.state = `dash`;\n        this.ast.push(stepNode);\n    }\n    private pushDash(token: CSSSelectorToken) {\n        const value = token.value;\n        if (value === `+` || value === `-`) {\n            this.ast.push({\n                type: `nth_dash`,\n                value: token.value,\n                start: token.start,\n                end: token.end,\n                before: ``,\n                after: ``,\n            });\n            this.standaloneDash = true;\n            this.state = `offset`;\n        } else {\n            this.pushOffset(token);\n        }\n    }\n    private pushOffset(token: CSSSelectorToken) {\n        if (token.value === `of`) {\n            this.pushOf(token);\n        } else {\n            const value = token.value;\n            const offsetNode: NthOffset = {\n                type: `nth_offset`,\n                value,\n                before: ``,\n                after: ``,\n                start: token.start,\n                end: token.end,\n            };\n            if (\n                !value.match(NthParser.validOffset) ||\n                (this.standaloneDash && value.match(/^[-+]/))\n            ) {\n                offsetNode.invalid = true;\n            }\n            this.state = `of`;\n            this.ast.push(offsetNode);\n        }\n    }\n    private pushOf(token: CSSSelectorToken) {\n        const ofNode: NthOf = {\n            type: `nth_of`,\n            value: token.value,\n            before: ``,\n            after: ``,\n            start: token.start,\n            end: token.end,\n        };\n        if (token.value !== `of`) {\n            ofNode.invalid = true;\n        }\n        this.ast.push(ofNode);\n        this.state = `selector`;\n    }\n}\n", "import { tokenizeSelector, CSSSelectorToken } from './tokenizer';\nimport { NthParser } from './nth-parser';\nimport type {\n    Namespace,\n    Combinator,\n    Comment,\n    NamespacedNode,\n    Selector,\n    SelectorList,\n    SelectorNode,\n} from './ast-types';\nimport {\n    createCombinatorAst,\n    createCommentAst,\n    createEmptySelector,\n    createEmptyNth,\n    isCombinatorToken,\n    isNamespacedAst,\n    isNamespacedToken,\n    ensureSelector,\n    trimCombinators,\n} from './helpers';\nimport { isComment, getText, Seeker, last } from '@tokey/core';\n\nexport interface ParseConfig {\n    offset: number;\n}\n\nexport function parseCssSelector(source: string, options: Partial<ParseConfig> = {}) {\n    return parseTokens(source, tokenizeSelector(source, options));\n}\n\nfunction parseTokens(source: string, tokens: CSSSelectorToken[]): SelectorList {\n    return new Seeker(tokens).run<SelectorList>(handleToken, [], source);\n}\n\nfunction handleToken(\n    token: CSSSelectorToken,\n    selectors: SelectorList,\n    source: string,\n    s: Seeker<CSSSelectorToken>\n): void {\n    let t;\n    const currentSelector = ensureSelector(selectors, token);\n    const ast = currentSelector.nodes;\n    if (token.type === '.') {\n        const comments = s.takeMany('multi-comment').map(createCommentAst);\n        const name = s.take('text');\n        ast.push({\n            type: 'class',\n            value: name?.value ?? '',\n            start: token.start,\n            end: name?.end ?? last(comments)?.end ?? token.end,\n            dotComments: comments,\n        });\n    } else if (token.type === ':') {\n        const firstComments = s.takeMany('multi-comment').map(createCommentAst);\n        const type = s.take(':') || token;\n        const isClass = token === type;\n\n        if (isClass) {\n            const name = s.take('text');\n            const endToken = name || last(firstComments) || type;\n            ast.push({\n                type: 'pseudo_class',\n                value: name?.value ?? '',\n                start: token.start,\n                end: name?.end ?? endToken.end,\n                colonComments: firstComments,\n            });\n        } else {\n            const secondComments = s.takeMany('multi-comment').map(createCommentAst);\n            const name = s.take('text');\n            const endToken = name || last(secondComments) || type;\n\n            ast.push({\n                type: 'pseudo_element',\n                value: name?.value ?? '',\n                start: token.start,\n                end: name?.end ?? endToken.end,\n                colonComments: { first: firstComments, second: secondComments },\n            });\n        }\n    } else if (token.type === '[') {\n        const block = s.run(\n            (token, ast) => {\n                ast.push(token);\n                return token.type !== ']';\n            },\n            [token],\n            source\n        );\n        const closed = last(block)?.type === ']';\n        if (closed) {\n            ast.push({\n                type: 'attribute',\n                value: block.length > 2 ? getText(block, 1, block.length - 1, source) : '',\n                start: token.start,\n                end: last(block)?.end ?? token.end,\n            });\n        } else {\n            ast.push({\n                type: 'invalid',\n                value: getText(block, undefined, undefined, source),\n                start: token.start,\n                end: last(block)?.end ?? token.end,\n            });\n        }\n    } else if (isCombinatorToken(token)) {\n        let lastCombinatorAst = createCombinatorAst(token);\n        let lastAst: Combinator | Comment = lastCombinatorAst;\n        // insert token as a combinator\n        ast.push(lastCombinatorAst);\n        // save the insertion point of the first combinator in case it's a space\n        // that might be considered a normal space later and will need to be changed.\n        let initialSpaceCombIndex: number =\n            lastCombinatorAst.combinator === `space` ? ast.length - 1 : -1;\n        /**\n         * take next spaces/combinators/comments:\n         * - combinator/space token:\n         *  - spaces: merge to previous ast node before them\n         *  - previous ast equal to space combinator\n         *    - turn previous ast to the next combinator type\n         *    - merge spaces between them\n         *    - cancel initial space tracking - must be merged with other non space combinator or already canceled\n         *  - initial ast is space (must be comments following it)\n         *    - initial space is first in selector: merge initial ast into the selector before\n         *    - otherwise merge initial ast the comment following it\n         *  - insert an invalid combinator\n         * - comment token: insert to ast\n         */\n        //\n        let next = s.next();\n        while (next) {\n            if (isCombinatorToken(next)) {\n                if (next.type === `space`) {\n                    // add space to the last ast node\n                    lastAst.after += next.value;\n                    lastAst.end = next.end;\n                } else if (lastAst === lastCombinatorAst && lastAst.combinator === 'space') {\n                    // combine next combinator into previous (space)\n                    const nextCombinator = createCombinatorAst(next);\n                    lastCombinatorAst.combinator = nextCombinator.combinator;\n                    lastCombinatorAst.before +=\n                        lastCombinatorAst.after + lastCombinatorAst.value + nextCombinator.before;\n                    lastCombinatorAst.after = nextCombinator.after;\n                    lastCombinatorAst.value = nextCombinator.value;\n                    lastCombinatorAst.end = nextCombinator.end;\n                    // reset initial space\n                    initialSpaceCombIndex = -1;\n                } else if (initialSpaceCombIndex !== -1) {\n                    // merge initial space combinator (classified as combinator before a comment)\n                    const initialSpace = ast[initialSpaceCombIndex] as Combinator;\n                    const spaceValue =\n                        initialSpace.before + initialSpace.value + initialSpace.after;\n                    if (initialSpaceCombIndex === 0) {\n                        // merge to beginning of selector\n                        currentSelector.before += spaceValue;\n                    } else {\n                        // merge to the next comment\n                        const nodeAfterInitial = ast[initialSpaceCombIndex + 1];\n                        if (nodeAfterInitial?.type === `comment`) {\n                            nodeAfterInitial.before += spaceValue;\n                            nodeAfterInitial.start = initialSpace.start;\n                        } else {\n                            // shouldn't happen as initial space is considered as a combinator\n                            // only when a comment is following it and before\n                        }\n                    }\n                    ast.splice(initialSpaceCombIndex, 1);\n                    initialSpaceCombIndex = -1;\n                    // add combinator\n                    lastCombinatorAst = createCombinatorAst(next);\n                    lastAst = lastCombinatorAst;\n                    ast.push(lastCombinatorAst);\n                } else {\n                    // add invalid combinator\n                    lastCombinatorAst = createCombinatorAst(next);\n                    lastCombinatorAst.invalid = true;\n                    lastAst = lastCombinatorAst;\n                    ast.push(lastCombinatorAst);\n                }\n            } else if (isComment(next.type)) {\n                lastAst = createCommentAst(next);\n                ast.push(lastAst);\n            } else {\n                break;\n            }\n            next = s.next();\n        }\n        // put back any unrelated token\n        if (next && !isCombinatorToken(next)) {\n            s.back();\n        }\n    } else if (token.type === 'text') {\n        ast.push({\n            type: 'type',\n            value: token.value,\n            start: token.start,\n            end: token.end,\n        });\n    } else if (token.type === '#') {\n        t = s.take('text');\n        ast.push({\n            type: 'id',\n            value: t?.value ?? '',\n            start: token.start,\n            end: t?.end ?? token.end,\n        });\n    } else if (token.type === '*') {\n        ast.push({\n            type: 'universal',\n            value: '*',\n            start: token.start,\n            end: token.end,\n        });\n    } else if (token.type === '|') {\n        // search backwards compatible namespace in ast\n        let prevAst: NamespacedNode | undefined;\n        let prevInvalidAst: SelectorNode | undefined;\n        const beforeComments: Comment[] = [];\n        for (let i = ast.length - 1; i >= 0; --i) {\n            const current = ast[i];\n            if (isNamespacedAst(current)) {\n                if (current.namespace) {\n                    // already namespaced\n                    prevInvalidAst = current;\n                } else {\n                    // merge with previous\n                    prevAst = current;\n                }\n                break;\n            } else if (\n                current.type === `comment` &&\n                current.before === `` &&\n                current.after === ``\n            ) {\n                beforeComments.unshift(current);\n            } else {\n                prevInvalidAst = current;\n                break;\n            }\n        }\n        // search forward target token\n        let target: CSSSelectorToken | undefined;\n        let searchIndex = 1;\n        const potentialAfterComments: CSSSelectorToken[] = [];\n        // eslint-disable-next-line no-constant-condition\n        while (true) {\n            const nextToken = s.peek(searchIndex);\n            if (isComment(nextToken.type)) {\n                potentialAfterComments.push(nextToken);\n            } else if (isNamespacedToken(nextToken)) {\n                target = nextToken;\n                break;\n            } else {\n                // space or end of tokens\n                break;\n            }\n            searchIndex++;\n        }\n        // create/update ast\n        const validNamespace = !prevInvalidAst;\n        const validTarget = !!target;\n        const type = target?.type === `*` ? `universal` : `type`;\n        let invalid: NonNullable<Namespace['invalid']> = ``;\n        // remove before/after pipe comments\n        if (validNamespace) {\n            ast.splice(ast.length - beforeComments.length, beforeComments.length);\n        } else {\n            invalid = `namespace`;\n        }\n        if (validTarget) {\n            potentialAfterComments.forEach(() => s.next());\n            s.next();\n        } else {\n            invalid = invalid ? `namespace,target` : `target`;\n        }\n        // create new ast or modify the prev\n        const nsAst: NamespacedNode =\n            prevAst ||\n            ({\n                type,\n                value: ``,\n                start: token.start,\n                end: target?.end || token.end,\n            } as NamespacedNode);\n        nsAst.type = type;\n        nsAst.namespace = {\n            value: prevAst?.value || ``,\n            beforeComments: validNamespace ? beforeComments : [],\n            afterComments: validTarget ? potentialAfterComments.map(createCommentAst) : [],\n        };\n        nsAst.value = target?.value || ``;\n        nsAst.end = target?.end || token.end;\n        // set invalid\n        if (invalid) {\n            nsAst.namespace.invalid = invalid;\n        }\n        // add ast if not modified\n        if (!prevAst) {\n            ast.push(nsAst);\n        }\n    } else if (token.type === '(') {\n        const prev = last(ast);\n        const res: SelectorList = [];\n        // handle nth selector\n        if (\n            prev &&\n            prev.type === `pseudo_class` &&\n            NthParser.isNthPseudoClass(prev.value) &&\n            s.peek().type !== `)`\n        ) {\n            // collect \"An+B of\" expression\n            const nthSelector = createEmptyNth();\n            nthSelector.start = s.peek().start;\n            res.push(nthSelector as unknown as Selector);\n            const nthParser = new NthParser(nthSelector, s);\n            s.run(\n                (token) => {\n                    if (nthParser.state === `selector`) {\n                        // got to selector, push back and stop\n                        s.back();\n                        return false;\n                    }\n                    return nthParser.handleToken(token);\n                },\n                nthSelector,\n                source\n            );\n            // setup next selector\n            if (s.peek().type !== `)`) {\n                nthSelector.end = last(nthSelector.nodes)?.end || nthSelector.start;\n                // add \"of\" selector\n                const newSelector = createEmptySelector();\n                newSelector.start = nthSelector.end;\n                res.push(newSelector);\n            }\n        }\n        // get all tokens until closed\n        s.run(\n            (token, selectors) => {\n                if (token.type === ')') {\n                    const currentSelector = last(selectors);\n                    if (currentSelector) {\n                        currentSelector.end =\n                            last(currentSelector.nodes)?.end ?? currentSelector.start;\n                    }\n                    return false;\n                }\n                return handleToken(token, selectors, source, s);\n            },\n            res,\n            source\n        );\n\n        const ended = s.peek(0);\n        if (\n            !prev ||\n            'nodes' in prev ||\n            prev.type === 'invalid' ||\n            prev.type === 'combinator' ||\n            prev.type === 'comment' ||\n            prev.type === 'nth_step' ||\n            prev.type === 'nth_dash' ||\n            prev.type === 'nth_offset' ||\n            prev.type === 'nth_of' ||\n            ended.type !== ')'\n        ) {\n            ast.push({\n                type: 'invalid',\n                value: getText([token, ended], undefined, undefined, source),\n                start: token.start,\n                end: ended?.end ?? s.peekBack().end,\n            });\n        } else {\n            const lastSelector = last(res);\n            if (lastSelector) {\n                trimCombinators(lastSelector);\n            }\n            prev.nodes = res;\n            prev.end = ended.end;\n        }\n    } else if (isComment(token.type)) {\n        ast.push(createCommentAst(token));\n    } else if (token.type === ',') {\n        // we ensure at least one selector present\n        const selector = last(selectors)!;\n        selector.end = token.start;\n        trimCombinators(selector);\n        const newSelector = createEmptySelector();\n        if (s.done()) {\n            newSelector.start = token.end;\n            newSelector.end = token.end;\n        } else {\n            newSelector.start = s.peek().start;\n        }\n        selectors.push(newSelector);\n    } else if (token.type === '&') {\n        ast.push({\n            type: 'nesting',\n            value: '&',\n            start: token.start,\n            end: token.end,\n        });\n    } else {\n        ast.push({\n            type: 'invalid',\n            value: token.value,\n            start: token.start,\n            end: token.end,\n        });\n    }\n    if (s.done()) {\n        currentSelector.end = last(currentSelector.nodes)?.end ?? currentSelector.start;\n        trimCombinators(currentSelector);\n    }\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=ast-types.js.map", "import { NthParser } from './nth-parser';\nimport type {\n    ImmutableId,\n    ImmutableAttribute,\n    ImmutableClass,\n    ImmutableCombinator,\n    ImmutableComment,\n    ImmutableType,\n    ImmutableInvalid,\n    ImmutableNth,\n    ImmutableNthDash,\n    ImmutableNthOf,\n    ImmutableNthOffset,\n    ImmutableNthStep,\n    ImmutablePseudoClass,\n    ImmutablePseudoElement,\n    ImmutableSelector,\n    ImmutableCompoundSelector,\n    ImmutableUniversal,\n    ImmutableNesting,\n    ImmutableSelectorNode,\n    ImmutableSelectorList,\n    ImmutableNthSelectorList,\n    ImmutableFunctionalSelector,\n    ImmutableNamespacedNode,\n} from './ast-types';\n\nexport function stringifySelectorAst(\n    value: ImmutableSelectorNode | ImmutableSelectorList | ImmutableNthSelectorList\n): string {\n    return 'length' in value ? stringifySelectors(value) : stringifyNode(value);\n}\n\ntype Printers = {\n    [K in ImmutableSelectorNode as K['type']]: (node: K) => string;\n};\n\nconst printers: Printers = {\n    id: (node: ImmutableId) => `#${node.value}${stringifyNested(node)}`,\n    class: (node: ImmutableClass) =>\n        `.${node.dotComments.map(stringifyNode).join('')}${node.value}${stringifyNested(node)}`,\n    type: (node: ImmutableType) =>\n        `${stringifyNamespace(node)}${node.value}${stringifyNested(node)}`,\n    combinator: (node: ImmutableCombinator) => `${node.before}${node.value}${node.after}`,\n    attribute: (node: ImmutableAttribute) => `[${node.value}]${stringifyNested(node)}`,\n    pseudo_class: (node: ImmutablePseudoClass) =>\n        `:${node.colonComments.map(stringifyNode).join('')}${node.value}${stringifyNested(node)}`,\n    pseudo_element: (node: ImmutablePseudoElement) =>\n        `:${node.colonComments.first.map(stringifyNode).join('')}:${node.colonComments.second\n            .map(stringifyNode)\n            .join('')}${node.value}${stringifyNested(node)}`,\n    comment: ({ before, value, after }: ImmutableComment) => `${before}${value}${after}`,\n    universal: (node: ImmutableUniversal) =>\n        `${stringifyNamespace(node)}${node.value}${stringifyNested(node)}`,\n    nesting: (node: ImmutableNesting) => `${node.value}${stringifyNested(node)}`,\n    selector: (node: ImmutableSelector) =>\n        `${node.before}${node.nodes.map(stringifyNode).join('')}${node.after}`,\n    compound_selector: (node: ImmutableCompoundSelector) =>\n        `${node.before}${node.nodes.map(stringifyNode).join('')}${node.after}`,\n    invalid: (node: ImmutableInvalid) => node.value,\n    nth: (node: ImmutableNth) =>\n        `${node.before}${node.nodes.map(stringifyNode).join('')}${node.after}`,\n    nth_step: ({ before, value, after }: ImmutableNthStep) => `${before}${value}${after}`,\n    nth_dash: ({ before, value, after }: ImmutableNthDash) => `${before}${value}${after}`,\n    nth_offset: ({ before, value, after }: ImmutableNthOffset) => `${before}${value}${after}`,\n    nth_of: ({ before, value, after }: ImmutableNthOf) => `${before}${value}${after}`,\n};\n\nfunction stringifyNode(node: ImmutableSelectorNode): string {\n    return printers[node.type]?.(node as never) ?? '';\n}\n\nfunction stringifySelectors(selectors: ReadonlyArray<ImmutableSelector | ImmutableNth>) {\n    const result: string[] = [];\n    for (const node of selectors) {\n        result.push(stringifyNode(node));\n    }\n    return result.join(`,`);\n}\n\nfunction stringifyNested(node: ImmutableFunctionalSelector): string {\n    if ('nodes' in node) {\n        if (node.nodes?.length) {\n            if (node.type === `pseudo_class` && NthParser.isNthPseudoClass(node.value)) {\n                const [nthNode, ...selectors] = node.nodes;\n                return `(${stringifyNode(nthNode)}${stringifySelectors(selectors)})`;\n            } else {\n                return `(${stringifySelectors(node.nodes)})`;\n            }\n        } else {\n            return `()`;\n        }\n    }\n    return '';\n}\n\nfunction stringifyNamespace({ namespace }: ImmutableNamespacedNode): string {\n    let ns = ``;\n    if (namespace) {\n        ns += namespace.value;\n        for (const comment of namespace.beforeComments) {\n            ns += printers.comment(comment);\n        }\n        ns += `|`;\n        for (const comment of namespace.afterComments) {\n            ns += printers.comment(comment);\n        }\n    }\n    return ns;\n}\n", "import type {\n    SelectorNode,\n    SelectorList,\n    FunctionalSelector,\n    ImmutableSelectorNode,\n    ImmutableSelectorList,\n} from '../ast-types';\n\nexport interface WalkOptions {\n    visitList?: SelectorNode['type'][];\n    ignoreList?: SelectorNode['type'][];\n}\nexport type WalkVisitor<AST extends SelectorNode | ImmutableSelectorNode> = (\n    node: AST,\n    index: number,\n    nodes: AST[],\n    parents: AST[]\n) => number | undefined | void;\nconst nestEnd = Symbol(`nest-end`);\n\n/**\n * traverse each node of the selector AST from start to end.\n * to control traversal return:\n *  walk.skipNested\n *  walk.skipCurrentSelector\n *  walk.stopAll\n *\n * @param topNode the top AST to traverse down from\n * @param visit function to call for each traversed element\n * @param options provide visitList/ignoreList for traversal\n */\nexport function walk<AST extends SelectorNode | SelectorList>(\n    topNode: AST,\n    visit: WalkVisitor<SelectorNode>,\n    options?: WalkOptions\n): void;\nexport function walk<AST extends ImmutableSelectorNode | ImmutableSelectorList>(\n    topNode: AST,\n    visit: WalkVisitor<ImmutableSelectorNode>,\n    options?: WalkOptions\n): void;\nexport function walk<\n    AST extends SelectorNode | SelectorList | ImmutableSelectorNode | ImmutableSelectorList\n>(\n    topNode: AST,\n    visit: WalkVisitor<SelectorNode> | WalkVisitor<ImmutableSelectorNode>,\n    options: WalkOptions = {}\n): void {\n    // set initial top nodes to traverse\n    const toVisit: Array<SelectorNode | ImmutableSelectorNode | typeof nestEnd> = Array.isArray(\n        topNode\n    )\n        ? [...topNode]\n        : [topNode];\n    // initiate context\n    const context = createWalkContext(topNode);\n    // iterate nodes\n    while (toVisit.length) {\n        const current = toVisit.shift()!;\n        if (current === nestEnd) {\n            // end of nested level\n            context.up();\n            continue;\n        } else if (\n            (!options.ignoreList || !options.ignoreList.includes(current.type)) &&\n            (!options.visitList || options.visitList.includes(current.type))\n        ) {\n            // visit node\n            let skipAmount =\n                (visit(\n                    current as SelectorNode,\n                    context.indexInSelector,\n                    context.nodesInSelector as SelectorNode[],\n                    context.parents as SelectorNode[]\n                ) as number) ?? -1;\n            // point to next selector node\n            context.next();\n\n            // check if to skip nested or current/following selectors\n            if (skipAmount === Infinity) {\n                // stop all: fast bail out\n                return;\n            } else if (skipAmount >= 0) {\n                // skip levels\n                while (skipAmount > 0 && toVisit.length) {\n                    const next = toVisit.shift()!;\n                    if (next === nestEnd) {\n                        skipAmount--;\n                        context.up();\n                    }\n                }\n                continue;\n            }\n        } else {\n            // point to next selector node\n            context.next();\n        }\n        // add nested nodes\n        if (isWithNodes(current)) {\n            context.insertNested(current);\n            toVisit.unshift(...current.nodes, nestEnd);\n        }\n    }\n}\n\ninterface WalkContext<AST> {\n    parents: AST[];\n    indexInSelector: number;\n    nodesInSelector: ReadonlyArray<AST>;\n    up(): void;\n    next(): void;\n    insertNested(node: ContainerWithNodes): void;\n}\nfunction createWalkContext(topNode: SelectorNode | SelectorList): WalkContext<SelectorNode>;\nfunction createWalkContext(\n    topNode: ImmutableSelectorNode | ImmutableSelectorList\n): WalkContext<ImmutableSelectorNode>;\nfunction createWalkContext(\n    topNode: SelectorNode | SelectorList | ImmutableSelectorNode | ImmutableSelectorList\n) {\n    const prevIndex: number[] = [];\n    const prevParents: ImmutableSelectorNode[][] = [[]];\n    const context: WalkContext<SelectorNode | ImmutableSelectorNode> = {\n        parents: [],\n        indexInSelector: 0,\n        nodesInSelector: Array.isArray(topNode)\n            ? topNode\n            : `nodes` in topNode\n            ? topNode.nodes!\n            : ([topNode] as SelectorNode[]),\n        up() {\n            context.parents.pop();\n            context.indexInSelector = prevIndex.shift()!;\n            const currentParents = context.parents;\n            const currentParent = currentParents[currentParents.length - 1];\n            context.nodesInSelector = currentParent ? (currentParent as any).nodes : topNode;\n        },\n        next() {\n            context.indexInSelector++;\n        },\n        insertNested(node) {\n            context.parents = [...context.parents, node];\n            prevParents.push(context.parents);\n            prevIndex.unshift(context.indexInSelector);\n            context.indexInSelector = 0;\n            context.nodesInSelector = node.nodes;\n        },\n    };\n    return context;\n}\n\nwalk.skipNested = 0 as const;\nwalk.skipCurrentSelector = 1 as const;\nwalk.stopAll = Infinity;\n\ntype ContainerWithNodes = FunctionalSelector & { nodes: SelectorNode[] };\nfunction isWithNodes(node: any): node is ContainerWithNodes {\n    return node && `nodes` in node;\n}\n", "import type {\n    SelectorNode,\n    SelectorList,\n    Selector,\n    CompoundSelector,\n    Comment,\n    CommentWithNoSpacing,\n    ImmutableSelector,\n    ImmutableSelectorList,\n    ImmutableSelectorNode,\n} from '../ast-types';\nimport { walk } from './walk';\n\nexport interface GroupCompoundOptions {\n    splitPseudoElements?: boolean;\n    deep?: boolean;\n}\nexport function groupCompoundSelectors<AST extends Selector>(\n    input: AST,\n    options?: GroupCompoundOptions\n): Selector;\nexport function groupCompoundSelectors<AST extends ImmutableSelector>(\n    input: AST,\n    options?: GroupCompoundOptions\n): ImmutableSelector;\nexport function groupCompoundSelectors<AST extends SelectorList>(\n    input: AST,\n    options?: GroupCompoundOptions\n): SelectorList;\nexport function groupCompoundSelectors<AST extends ImmutableSelectorList>(\n    input: AST,\n    options?: GroupCompoundOptions\n): ImmutableSelectorList;\nexport function groupCompoundSelectors<\n    AST extends Selector | ImmutableSelector | SelectorList | ImmutableSelectorList\n>(\n    input: AST,\n    options?: GroupCompoundOptions\n): Selector | ImmutableSelector | SelectorList | ImmutableSelectorList {\n    const context = createCompoundContext(options);\n    walk(input, (node, _index, _nodes, parents) => {\n        if (parents.length === 0 && node.type === `selector`) {\n            // first level: create top level selector\n            context.addSelector(node);\n        } else {\n            // second level: (parents.length === 1)\n            if (options?.deep && `nodes` in node) {\n                // compound nested selectors\n                /* This `nodes` type is hard since it's internal we use any[] here. sorry */\n                const nodes: any[] = [];\n                for (const nested of node.nodes!) {\n                    nodes.push(\n                        nested.type === `selector`\n                            ? groupCompoundSelectors(nested, options)\n                            : nested\n                    );\n                }\n                node = { ...node, nodes };\n            }\n            context.handleNode(node);\n            // don't go deeper - shallow group\n            return walk.skipNested;\n        }\n        return;\n    });\n    return `length` in input ? context.output : context.output[0];\n}\n\ntype CompoundSelectorPart = CompoundSelector['nodes'][number];\nfunction createCompoundContext({ splitPseudoElements = true }: GroupCompoundOptions = {}) {\n    const output: SelectorList = [];\n    let lastSelector: Selector;\n    let lastCompound: CompoundSelector | undefined;\n    let lastCompoundInitialPart: CompoundSelectorPart | undefined;\n    const handleNode = (node: SelectorNode | ImmutableSelectorNode) => {\n        if (node.type === `pseudo_element` && splitPseudoElements === true) {\n            lastCompound = undefined;\n        }\n        if (node.type === `combinator`) {\n            lastSelector.nodes.push(node);\n            lastCompound = undefined;\n        } else if (node.type === `comment` && !isCommentWithNoSpacing(node)) {\n            // comment that breaks compound\n            lastSelector.nodes.push(node);\n            lastCompound = undefined;\n        } else if (\n            node.type === `type` ||\n            node.type === `universal` ||\n            node.type === `class` ||\n            node.type === `id` ||\n            node.type === `attribute` ||\n            node.type === `nesting` ||\n            node.type === `pseudo_class` ||\n            node.type === `pseudo_element` ||\n            node.type === `invalid` ||\n            node.type === `comment` /*no spacing*/\n        ) {\n            // part of compound\n            if (!lastCompound) {\n                // add new compound selector\n                lastCompoundInitialPart = undefined;\n                lastCompound = {\n                    type: `compound_selector`,\n                    start: node.start,\n                    end: node.end,\n                    before: ``,\n                    after: ``,\n                    nodes: [],\n                    invalid: false,\n                };\n                lastSelector.nodes.push(lastCompound);\n            }\n            if (!lastCompound.invalid && node.type !== `comment`) {\n                // validate compound parts after initial\n                if (lastCompoundInitialPart) {\n                    lastCompound.invalid = node.type === `universal` || node.type === `type`;\n                }\n                lastCompoundInitialPart = node as CompoundSelectorPart;\n            }\n            lastCompound.nodes.push(node as CompoundSelectorPart);\n            lastCompound.end = node.end;\n        } else if (node.type === `selector` || node.type === `compound_selector`) {\n            // spread\n            for (const innerNode of node.nodes) {\n                handleNode(innerNode);\n            }\n        } else {\n            // handle out of context nodes\n            lastSelector.nodes.push(node as SelectorNode);\n            lastCompound = undefined;\n        }\n    };\n    return {\n        addSelector(node: Selector | ImmutableSelector) {\n            lastSelector = {\n                type: `selector`,\n                start: node.start,\n                end: node.end,\n                before: `before` in node ? node.before : ``,\n                after: `after` in node ? node.after : ``,\n                nodes: [],\n            };\n            output.push(lastSelector);\n            lastCompound = undefined;\n        },\n        handleNode,\n        output,\n    };\n}\n\nexport function splitCompoundSelectors<AST extends Selector>(input: AST): Selector;\nexport function splitCompoundSelectors<AST extends ImmutableSelector>(\n    input: AST\n): ImmutableSelector;\nexport function splitCompoundSelectors<AST extends SelectorList>(input: AST): SelectorList;\nexport function splitCompoundSelectors<AST extends ImmutableSelectorList>(\n    input: AST\n): ImmutableSelectorList;\nexport function splitCompoundSelectors<AST extends SelectorList | Selector>(\n    input: AST\n): SelectorList | Selector | ImmutableSelector | ImmutableSelectorList {\n    const inputSelectors: SelectorList = Array.isArray(input) ? input : [input];\n    const output: SelectorList = [];\n    for (const inputSelector of inputSelectors) {\n        const outputSelector: Selector = {\n            ...inputSelector,\n            nodes: [],\n        };\n        for (const node of inputSelector.nodes) {\n            if (node.type === `compound_selector`) {\n                outputSelector.nodes.push(...node.nodes);\n            } else {\n                outputSelector.nodes.push(node);\n            }\n        }\n        output.push(outputSelector);\n    }\n    return `length` in input ? output : output[0];\n}\n\nfunction isCommentWithNoSpacing(node: Comment): node is CommentWithNoSpacing {\n    return node.type === `comment` && node.before === `` && node.after === ``;\n}\n", "import type { ImmutableSelectorNode, ImmutablePseudoClass, SelectorNode } from '../ast-types';\nimport { walk } from './walk';\n\nexport type Specificity = [\n    inlineLevel: number,\n    idLevel: number,\n    classOrAttributeLevel: number,\n    typeOrElementLevel: number\n];\nexport function calcSpecificity(ast: ImmutableSelectorNode): Specificity {\n    const result: Specificity = [0, 0, 0, 0];\n    // ToDo: remove casting once immutable walk is supported\n    walk(ast as SelectorNode, (node) => {\n        switch (node.type) {\n            case `type`:\n            case `pseudo_element`:\n                result[3]++;\n                break;\n            case `class`:\n            case `attribute`:\n                result[2]++;\n                break;\n            case `pseudo_class`:\n                if (customPseudoClass[node.value]) {\n                    customPseudoClass[node.value](node, result);\n                    return walk.skipNested;\n                }\n                result[2]++;\n                break;\n            case `id`:\n                result[1]++;\n                break;\n        }\n        return node.type !== `selector` && node.type !== `compound_selector`\n            ? walk.skipNested\n            : undefined;\n    });\n    return result;\n}\n\nconst customPseudoClass: Record<string, (node: ImmutablePseudoClass, result: Specificity) => void> =\n    {\n        not: mostSpecificInnerSelector,\n        is: mostSpecificInnerSelector,\n        has: mostSpecificInnerSelector,\n        where: () => {\n            /* no specificity*/\n        },\n        'nth-child': pseudoClassPlusMostSpecificInnerSelector,\n        'nth-last-child': pseudoClassPlusMostSpecificInnerSelector,\n        'nth-of-type': pseudoClassPlusMostSpecificInnerSelector,\n        'nth-last-of-type': pseudoClassPlusMostSpecificInnerSelector,\n    };\n\nfunction pseudoClassPlusMostSpecificInnerSelector(node: ImmutablePseudoClass, result: Specificity) {\n    result[2]++;\n    mostSpecificInnerSelector(node, result);\n}\nfunction mostSpecificInnerSelector(node: ImmutablePseudoClass, result: Specificity) {\n    if (node.nodes?.length) {\n        let highest: Specificity = [0, 0, 0, 0];\n        for (const selector of node.nodes) {\n            const currentSpecificity = calcSpecificity(selector);\n            if (!highest || compareSpecificity(currentSpecificity, highest) === 1) {\n                highest = currentSpecificity;\n            }\n        }\n        addSpecificity(result, highest);\n    }\n}\n/**\n * compare 2 specificities\n * @param a first specificity\n * @param b second specificity\n * @returns 0 if equal, 1 when a is more specific, -1 when b is more specific\n */\nexport function compareSpecificity(a: Specificity, b: Specificity): -1 | 0 | 1 {\n    for (let i = 0; i < 4; ++i) {\n        const specificityDiff = a[i] - b[i];\n        if (specificityDiff > 0) {\n            return 1;\n        } else if (specificityDiff < 0) {\n            return -1;\n        }\n    }\n    return 0;\n}\n\n/**\n * mutate the first value, adding the second one\n * @param to specificity reference to to\n * @param from specificity amount to add\n */\nfunction addSpecificity(to: Specificity, from: Specificity) {\n    for (let i = 0; i < 4; ++i) {\n        to[i] += from[i];\n    }\n}\n", "export { parseCssSelector } from './selector-parser';\nexport type { ParseConfig } from './selector-parser';\nexport * from './ast-types';\nexport { stringifySelectorAst } from './stringify';\nexport { walk } from './ast-tools/walk';\nexport type { WalkOptions } from './ast-tools/walk';\nexport { groupCompoundSelectors, splitCompoundSelectors } from './ast-tools/compound';\nexport { calcSpecificity, compareSpecificity } from './ast-tools/specificity';\nexport type { Specificity } from './ast-tools/specificity';\n", "/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/**\n * Adds the key-value `pair` to `map`.\n *\n * @private\n * @param {Object} map The map to modify.\n * @param {Array} pair The key-value pair to add.\n * @returns {Object} Returns `map`.\n */\nfunction addMapEntry(map, pair) {\n  // Don't return `map.set` because it's not chainable in IE 11.\n  map.set(pair[0], pair[1]);\n  return map;\n}\n\n/**\n * Adds `value` to `set`.\n *\n * @private\n * @param {Object} set The set to modify.\n * @param {*} value The value to add.\n * @returns {Object} Returns `set`.\n */\nfunction addSetEntry(set, value) {\n  // Don't return `set.add` because it's not chainable in IE 11.\n  set.add(value);\n  return set;\n}\n\n/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\n/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    getPrototype = overArg(Object.getPrototypeOf, Object),\n    objectCreate = Object.create,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols,\n    nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n    nativeKeys = overArg(Object.keys, Object);\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView'),\n    Map = getNative(root, 'Map'),\n    Promise = getNative(root, 'Promise'),\n    Set = getNative(root, 'Set'),\n    WeakMap = getNative(root, 'WeakMap'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  return this.has(key) && delete this.__data__[key];\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  return getMapData(this, key)['delete'](key);\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  getMapData(this, key).set(key, value);\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  this.__data__ = new ListCache(entries);\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  return this.__data__['delete'](key);\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var cache = this.__data__;\n  if (cache instanceof ListCache) {\n    var pairs = cache.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      return this;\n    }\n    cache = this.__data__ = new MapCache(pairs);\n  }\n  cache.set(key, value);\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  // Safari 9 makes `arguments.length` enumerable in strict mode.\n  var result = (isArray(value) || isArguments(value))\n    ? baseTimes(value.length, String)\n    : [];\n\n  var length = result.length,\n      skipIndexes = !!length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (key == 'length' || isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    object[key] = value;\n  }\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @param {boolean} [isFull] Specify a clone including symbols.\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, isDeep, isFull, customizer, key, object, stack) {\n  var result;\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      if (isHostObject(value)) {\n        return object ? value : {};\n      }\n      result = initCloneObject(isFunc ? {} : value);\n      if (!isDeep) {\n        return copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, baseClone, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (!isArr) {\n    var props = isFull ? getAllKeys(value) : keys(value);\n  }\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, isDeep, isFull, customizer, key, value, stack));\n  });\n  return result;\n}\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} prototype The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nfunction baseCreate(proto) {\n  return isObject(proto) ? objectCreate(proto) : {};\n}\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\n/**\n * The base implementation of `getTag`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  return objectToString.call(value);\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var result = new buffer.constructor(buffer.length);\n  buffer.copy(result);\n  return result;\n}\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\n/**\n * Creates a clone of `map`.\n *\n * @private\n * @param {Object} map The map to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned map.\n */\nfunction cloneMap(map, isDeep, cloneFunc) {\n  var array = isDeep ? cloneFunc(mapToArray(map), true) : mapToArray(map);\n  return arrayReduce(array, addMapEntry, new map.constructor);\n}\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\n/**\n * Creates a clone of `set`.\n *\n * @private\n * @param {Object} set The set to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned set.\n */\nfunction cloneSet(set, isDeep, cloneFunc) {\n  var array = isDeep ? cloneFunc(setToArray(set), true) : setToArray(set);\n  return arrayReduce(array, addSetEntry, new set.constructor);\n}\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\n/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    assignValue(object, key, newValue === undefined ? source[key] : newValue);\n  }\n  return object;\n}\n\n/**\n * Copies own symbol properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Creates an array of the own enumerable symbol properties of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = nativeGetSymbols ? overArg(nativeGetSymbols, Object) : stubArray;\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11,\n// for data views in Edge < 14, and promises in Node.js.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = objectToString.call(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : undefined;\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, cloneFunc, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return cloneMap(object, isDeep, cloneFunc);\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return cloneSet(object, isDeep, cloneFunc);\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, true, true);\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = cloneDeep;\n", "import {\n    Seeker,\n    tokenize,\n    isComment,\n    isStringDelimiter,\n    isWhitespace,\n    createToken,\n    getJSCommentStartType,\n    isCommentEnd,\n    getUnclosedComment,\n    Token,\n    Descriptors,\n} from '@tokey/core';\n\ntype Delimiters = ',' | ';' | ':' | '{' | '}' | '[' | ']' | '(' | ')' | '*';\n\nexport type CodeToken = Token<Descriptors | Delimiters>;\n\nexport function parseImports(\n    source: string,\n    blockStart = '{',\n    blockEnd = '}',\n    taggedImportSupport = false,\n    strictSemiColon = false\n) {\n    return findImports(\n        tokenize<CodeToken>(source, {\n            isDelimiter,\n            isStringDelimiter,\n            isWhitespace,\n            shouldAddToken,\n            createToken,\n            getCommentStartType: getJSCommentStartType,\n            isCommentEnd,\n            getUnclosedComment,\n        }),\n        blockStart,\n        blockEnd,\n        taggedImportSupport,\n        strictSemiColon\n    );\n}\n\nconst isDelimiter = (char: string) =>\n    char === ';' ||\n    char === '(' ||\n    char === ')' ||\n    char === ',' ||\n    char === '{' ||\n    char === '}' ||\n    char === ':' ||\n    char === '*' ||\n    char === '[' ||\n    char === ']';\n\nconst shouldAddToken = (type: CodeToken['type']) =>\n    type === 'space' || isComment(type) ? false : true;\n\nexport interface ImportValue {\n    star: boolean;\n    defaultName: string | undefined;\n    named: NamedMapping[] | undefined;\n    tagged: Record<string, NamedMapping[] | undefined>;\n    from: string | undefined;\n    errors: string[];\n    start: number;\n    end: number;\n}\n\ntype NamedMapping = [from: string, to: string];\n\nconst isImportBlockEndError = (token: CodeToken) => token.value === 'from' || token.type === ';';\n\nfunction findImports(\n    tokens: CodeToken[],\n    blockStart: string,\n    blockEnd: string,\n    taggedImportSupport = false,\n    strictSemiColon = false\n) {\n    const imports: ImportValue[] = [];\n    const s = new Seeker<CodeToken>(tokens);\n    let token;\n    let t;\n    while ((token = s.next())) {\n        if (!token.type) {\n            break;\n        }\n        if (token.value === 'import') {\n            const startTokenIndex = s.index;\n            const errors = [];\n            let defaultName;\n            let star = false;\n            let named: ImportValue['named'] = undefined;\n            let tagged: ImportValue['tagged'] = {};\n            let from;\n            t = s.next();\n            if (t.type === 'string') {\n                from = t.value.slice(1, -1);\n            } else {\n                if (t.type === 'text') {\n                    if (t.value === 'from') {\n                        s.back();\n                        errors.push('missing name');\n                    } else {\n                        defaultName = t.value;\n                    }\n                } else if (t.type === '*') {\n                    star = true;\n                    const as = s.peek();\n                    if (as.value === 'as') {\n                        s.next();\n                        t = s.peek();\n                        if (t.type === 'text' && t.value !== 'from') {\n                            s.next();\n                            defaultName = t.value;\n                        } else {\n                            errors.push('missing as name');\n                        }\n                    } else {\n                        errors.push('expected as after *');\n                    }\n                } else if (t.type === ',') {\n                    errors.push('missing default name');\n                }\n\n                if (t.type === blockStart) {\n                    if (star) {\n                        errors.push('Invalid named after *');\n                    }\n                    s.back();\n                    const block = s.flatBlock(blockStart, blockEnd, isImportBlockEndError);\n                    if (block) {\n                        const res = processNamedBlock(block, errors, taggedImportSupport);\n                        named = res.named;\n                        tagged = res.tagged;\n                    } else {\n                        errors.push('unclosed block');\n                    }\n                } else {\n                    t = s.peek();\n                    let hasComma = false;\n                    if (t.type === ',') {\n                        hasComma = true;\n                        s.next();\n                        t = s.peek();\n                    }\n                    if (t.type === blockStart) {\n                        if (defaultName && !hasComma) {\n                            errors.push('missing comma after name');\n                        }\n                        if (star) {\n                            errors.push('Invalid named after *');\n                        }\n                        const block = s.flatBlock(blockStart, blockEnd, isImportBlockEndError);\n                        if (block) {\n                            const res = processNamedBlock(block, errors, taggedImportSupport);\n                            named = res.named;\n                            tagged = res.tagged;\n                        } else {\n                            errors.push('unclosed block');\n                        }\n                    } else if (hasComma) {\n                        errors.push('missing named block');\n                    }\n                }\n\n                t = s.next();\n                if (t.value !== 'from') {\n                    s.back();\n                    errors.push('invalid missing from');\n                }\n                t = s.next();\n                if (t.type === 'string') {\n                    from = t.value.slice(1, -1);\n                } else {\n                    s.back(); //?\n                    errors.push('invalid missing source');\n                }\n            }\n            t = s.peek();\n            if (strictSemiColon && t.type !== ';' && !s.done()) {\n                errors.push('missing semicolon');\n            } else if (t.type === ';') {\n                s.next();\n            }\n\n            imports.push({\n                star,\n                defaultName,\n                named,\n                tagged,\n                from,\n                errors,\n                start: s.tokens[startTokenIndex].start,\n                end: s.tokens[s.index].end,\n            });\n        }\n    }\n    return imports;\n}\n\nfunction processNamedBlock(block: CodeToken[], errors: string[], taggedImportSupport: boolean) {\n    const named: [from: string, to: string][] = [];\n    const tagged: Record<string, [from: string, to: string][]> = {};\n    const tokens: CodeToken[] = [];\n\n    for (let i = 0; i < block.length; i++) {\n        const token = block[i];\n        if (block[i + 1]?.type === '(' && taggedImportSupport) {\n            const tagTokens = [];\n            const tagName = block[i];\n            let hasEnded;\n            for (let j = i + 2; j < block.length; j++) {\n                i = j;\n                if (block[j].type === ')') {\n                    hasEnded = true;\n                    break;\n                }\n                tagTokens.push(block[j]);\n            }\n            tagged[tagName.value] = processNamedBlock(tagTokens, errors, false).named;\n            if (tagName.type !== 'text') {\n                errors.push(`invalid tag name: ${tagName.value}`);\n            }\n            if (!hasEnded) {\n                errors.push(`unclosed tagged import \"${tagName.value}\"`);\n            }\n        } else if (token.type === ',') {\n            pushToken();\n        } else {\n            tokens.push(token);\n        }\n    }\n    if (tokens.length) {\n        pushToken();\n    }\n\n    return { named, tagged };\n\n    function pushToken() {\n        if (tokens.length === 1) {\n            const name = tokens[0].value;\n            named.push([name, name]);\n        } else if (tokens.length === 3) {\n            if (tokens[1].value === 'as') {\n                named.push([tokens[0].value, tokens[2].value]);\n            }\n        }\n        tokens.length = 0;\n    }\n}\n\n// REGEXP for import parsing import\\s+(.*?)\\s*,?\\s*(\\{.*?\\})?\\s*(from)?\\s*(['\"].*?['\"]);?\n", "var openParentheses = \"(\".charCodeAt(0);\nvar closeParentheses = \")\".charCodeAt(0);\nvar singleQuote = \"'\".charCodeAt(0);\nvar doubleQuote = '\"'.charCodeAt(0);\nvar backslash = \"\\\\\".charCodeAt(0);\nvar slash = \"/\".charCodeAt(0);\nvar comma = \",\".charCodeAt(0);\nvar colon = \":\".charCodeAt(0);\nvar star = \"*\".charCodeAt(0);\nvar uLower = \"u\".charCodeAt(0);\nvar uUpper = \"U\".charCodeAt(0);\nvar plus = \"+\".charCodeAt(0);\nvar isUnicodeRange = /^[a-f0-9?-]+$/i;\n\nmodule.exports = function(input) {\n  var tokens = [];\n  var value = input;\n\n  var next,\n    quote,\n    prev,\n    token,\n    escape,\n    escapePos,\n    whitespacePos,\n    parenthesesOpenPos;\n  var pos = 0;\n  var code = value.charCodeAt(pos);\n  var max = value.length;\n  var stack = [{ nodes: tokens }];\n  var balanced = 0;\n  var parent;\n\n  var name = \"\";\n  var before = \"\";\n  var after = \"\";\n\n  while (pos < max) {\n    // Whitespaces\n    if (code <= 32) {\n      next = pos;\n      do {\n        next += 1;\n        code = value.charCodeAt(next);\n      } while (code <= 32);\n      token = value.slice(pos, next);\n\n      prev = tokens[tokens.length - 1];\n      if (code === closeParentheses && balanced) {\n        after = token;\n      } else if (prev && prev.type === \"div\") {\n        prev.after = token;\n        prev.sourceEndIndex += token.length;\n      } else if (\n        code === comma ||\n        code === colon ||\n        (code === slash &&\n          value.charCodeAt(next + 1) !== star &&\n          (!parent ||\n            (parent && parent.type === \"function\" && parent.value !== \"calc\")))\n      ) {\n        before = token;\n      } else {\n        tokens.push({\n          type: \"space\",\n          sourceIndex: pos,\n          sourceEndIndex: next,\n          value: token\n        });\n      }\n\n      pos = next;\n\n      // Quotes\n    } else if (code === singleQuote || code === doubleQuote) {\n      next = pos;\n      quote = code === singleQuote ? \"'\" : '\"';\n      token = {\n        type: \"string\",\n        sourceIndex: pos,\n        quote: quote\n      };\n      do {\n        escape = false;\n        next = value.indexOf(quote, next + 1);\n        if (~next) {\n          escapePos = next;\n          while (value.charCodeAt(escapePos - 1) === backslash) {\n            escapePos -= 1;\n            escape = !escape;\n          }\n        } else {\n          value += quote;\n          next = value.length - 1;\n          token.unclosed = true;\n        }\n      } while (escape);\n      token.value = value.slice(pos + 1, next);\n      token.sourceEndIndex = token.unclosed ? next : next + 1;\n      tokens.push(token);\n      pos = next + 1;\n      code = value.charCodeAt(pos);\n\n      // Comments\n    } else if (code === slash && value.charCodeAt(pos + 1) === star) {\n      next = value.indexOf(\"*/\", pos);\n\n      token = {\n        type: \"comment\",\n        sourceIndex: pos,\n        sourceEndIndex: next + 2\n      };\n\n      if (next === -1) {\n        token.unclosed = true;\n        next = value.length;\n        token.sourceEndIndex = next;\n      }\n\n      token.value = value.slice(pos + 2, next);\n      tokens.push(token);\n\n      pos = next + 2;\n      code = value.charCodeAt(pos);\n\n      // Operation within calc\n    } else if (\n      (code === slash || code === star) &&\n      parent &&\n      parent.type === \"function\" &&\n      parent.value === \"calc\"\n    ) {\n      token = value[pos];\n      tokens.push({\n        type: \"word\",\n        sourceIndex: pos - before.length,\n        sourceEndIndex: pos + token.length,\n        value: token\n      });\n      pos += 1;\n      code = value.charCodeAt(pos);\n\n      // Dividers\n    } else if (code === slash || code === comma || code === colon) {\n      token = value[pos];\n\n      tokens.push({\n        type: \"div\",\n        sourceIndex: pos - before.length,\n        sourceEndIndex: pos + token.length,\n        value: token,\n        before: before,\n        after: \"\"\n      });\n      before = \"\";\n\n      pos += 1;\n      code = value.charCodeAt(pos);\n\n      // Open parentheses\n    } else if (openParentheses === code) {\n      // Whitespaces after open parentheses\n      next = pos;\n      do {\n        next += 1;\n        code = value.charCodeAt(next);\n      } while (code <= 32);\n      parenthesesOpenPos = pos;\n      token = {\n        type: \"function\",\n        sourceIndex: pos - name.length,\n        value: name,\n        before: value.slice(parenthesesOpenPos + 1, next)\n      };\n      pos = next;\n\n      if (name === \"url\" && code !== singleQuote && code !== doubleQuote) {\n        next -= 1;\n        do {\n          escape = false;\n          next = value.indexOf(\")\", next + 1);\n          if (~next) {\n            escapePos = next;\n            while (value.charCodeAt(escapePos - 1) === backslash) {\n              escapePos -= 1;\n              escape = !escape;\n            }\n          } else {\n            value += \")\";\n            next = value.length - 1;\n            token.unclosed = true;\n          }\n        } while (escape);\n        // Whitespaces before closed\n        whitespacePos = next;\n        do {\n          whitespacePos -= 1;\n          code = value.charCodeAt(whitespacePos);\n        } while (code <= 32);\n        if (parenthesesOpenPos < whitespacePos) {\n          if (pos !== whitespacePos + 1) {\n            token.nodes = [\n              {\n                type: \"word\",\n                sourceIndex: pos,\n                sourceEndIndex: whitespacePos + 1,\n                value: value.slice(pos, whitespacePos + 1)\n              }\n            ];\n          } else {\n            token.nodes = [];\n          }\n          if (token.unclosed && whitespacePos + 1 !== next) {\n            token.after = \"\";\n            token.nodes.push({\n              type: \"space\",\n              sourceIndex: whitespacePos + 1,\n              sourceEndIndex: next,\n              value: value.slice(whitespacePos + 1, next)\n            });\n          } else {\n            token.after = value.slice(whitespacePos + 1, next);\n            token.sourceEndIndex = next;\n          }\n        } else {\n          token.after = \"\";\n          token.nodes = [];\n        }\n        pos = next + 1;\n        token.sourceEndIndex = token.unclosed ? next : pos;\n        code = value.charCodeAt(pos);\n        tokens.push(token);\n      } else {\n        balanced += 1;\n        token.after = \"\";\n        token.sourceEndIndex = pos + 1;\n        tokens.push(token);\n        stack.push(token);\n        tokens = token.nodes = [];\n        parent = token;\n      }\n      name = \"\";\n\n      // Close parentheses\n    } else if (closeParentheses === code && balanced) {\n      pos += 1;\n      code = value.charCodeAt(pos);\n\n      parent.after = after;\n      parent.sourceEndIndex += after.length;\n      after = \"\";\n      balanced -= 1;\n      stack[stack.length - 1].sourceEndIndex = pos;\n      stack.pop();\n      parent = stack[balanced];\n      tokens = parent.nodes;\n\n      // Words\n    } else {\n      next = pos;\n      do {\n        if (code === backslash) {\n          next += 1;\n        }\n        next += 1;\n        code = value.charCodeAt(next);\n      } while (\n        next < max &&\n        !(\n          code <= 32 ||\n          code === singleQuote ||\n          code === doubleQuote ||\n          code === comma ||\n          code === colon ||\n          code === slash ||\n          code === openParentheses ||\n          (code === star &&\n            parent &&\n            parent.type === \"function\" &&\n            parent.value === \"calc\") ||\n          (code === slash &&\n            parent.type === \"function\" &&\n            parent.value === \"calc\") ||\n          (code === closeParentheses && balanced)\n        )\n      );\n      token = value.slice(pos, next);\n\n      if (openParentheses === code) {\n        name = token;\n      } else if (\n        (uLower === token.charCodeAt(0) || uUpper === token.charCodeAt(0)) &&\n        plus === token.charCodeAt(1) &&\n        isUnicodeRange.test(token.slice(2))\n      ) {\n        tokens.push({\n          type: \"unicode-range\",\n          sourceIndex: pos,\n          sourceEndIndex: next,\n          value: token\n        });\n      } else {\n        tokens.push({\n          type: \"word\",\n          sourceIndex: pos,\n          sourceEndIndex: next,\n          value: token\n        });\n      }\n\n      pos = next;\n    }\n  }\n\n  for (pos = stack.length - 1; pos; pos -= 1) {\n    stack[pos].unclosed = true;\n    stack[pos].sourceEndIndex = value.length;\n  }\n\n  return stack[0].nodes;\n};\n", "module.exports = function walk(nodes, cb, bubble) {\n  var i, max, node, result;\n\n  for (i = 0, max = nodes.length; i < max; i += 1) {\n    node = nodes[i];\n    if (!bubble) {\n      result = cb(node, i, nodes);\n    }\n\n    if (\n      result !== false &&\n      node.type === \"function\" &&\n      Array.isArray(node.nodes)\n    ) {\n      walk(node.nodes, cb, bubble);\n    }\n\n    if (bubble) {\n      cb(node, i, nodes);\n    }\n  }\n};\n", "function stringifyNode(node, custom) {\n  var type = node.type;\n  var value = node.value;\n  var buf;\n  var customResult;\n\n  if (custom && (customResult = custom(node)) !== undefined) {\n    return customResult;\n  } else if (type === \"word\" || type === \"space\") {\n    return value;\n  } else if (type === \"string\") {\n    buf = node.quote || \"\";\n    return buf + value + (node.unclosed ? \"\" : buf);\n  } else if (type === \"comment\") {\n    return \"/*\" + value + (node.unclosed ? \"\" : \"*/\");\n  } else if (type === \"div\") {\n    return (node.before || \"\") + value + (node.after || \"\");\n  } else if (Array.isArray(node.nodes)) {\n    buf = stringify(node.nodes, custom);\n    if (type !== \"function\") {\n      return buf;\n    }\n    return (\n      value +\n      \"(\" +\n      (node.before || \"\") +\n      buf +\n      (node.after || \"\") +\n      (node.unclosed ? \"\" : \")\")\n    );\n  }\n  return value;\n}\n\nfunction stringify(nodes, custom) {\n  var result, i;\n\n  if (Array.isArray(nodes)) {\n    result = \"\";\n    for (i = nodes.length - 1; ~i; i -= 1) {\n      result = stringifyNode(nodes[i], custom) + result;\n    }\n    return result;\n  }\n  return stringifyNode(nodes, custom);\n}\n\nmodule.exports = stringify;\n", "var minus = \"-\".charCodeAt(0);\nvar plus = \"+\".charCodeAt(0);\nvar dot = \".\".charCodeAt(0);\nvar exp = \"e\".charCodeAt(0);\nvar EXP = \"E\".charCodeAt(0);\n\n// Check if three code points would start a number\n// https://www.w3.org/TR/css-syntax-3/#starts-with-a-number\nfunction likeNumber(value) {\n  var code = value.charCodeAt(0);\n  var nextCode;\n\n  if (code === plus || code === minus) {\n    nextCode = value.charCodeAt(1);\n\n    if (nextCode >= 48 && nextCode <= 57) {\n      return true;\n    }\n\n    var nextNextCode = value.charCodeAt(2);\n\n    if (nextCode === dot && nextNextCode >= 48 && nextNextCode <= 57) {\n      return true;\n    }\n\n    return false;\n  }\n\n  if (code === dot) {\n    nextCode = value.charCodeAt(1);\n\n    if (nextCode >= 48 && nextCode <= 57) {\n      return true;\n    }\n\n    return false;\n  }\n\n  if (code >= 48 && code <= 57) {\n    return true;\n  }\n\n  return false;\n}\n\n// Consume a number\n// https://www.w3.org/TR/css-syntax-3/#consume-number\nmodule.exports = function(value) {\n  var pos = 0;\n  var length = value.length;\n  var code;\n  var nextCode;\n  var nextNextCode;\n\n  if (length === 0 || !likeNumber(value)) {\n    return false;\n  }\n\n  code = value.charCodeAt(pos);\n\n  if (code === plus || code === minus) {\n    pos++;\n  }\n\n  while (pos < length) {\n    code = value.charCodeAt(pos);\n\n    if (code < 48 || code > 57) {\n      break;\n    }\n\n    pos += 1;\n  }\n\n  code = value.charCodeAt(pos);\n  nextCode = value.charCodeAt(pos + 1);\n\n  if (code === dot && nextCode >= 48 && nextCode <= 57) {\n    pos += 2;\n\n    while (pos < length) {\n      code = value.charCodeAt(pos);\n\n      if (code < 48 || code > 57) {\n        break;\n      }\n\n      pos += 1;\n    }\n  }\n\n  code = value.charCodeAt(pos);\n  nextCode = value.charCodeAt(pos + 1);\n  nextNextCode = value.charCodeAt(pos + 2);\n\n  if (\n    (code === exp || code === EXP) &&\n    ((nextCode >= 48 && nextCode <= 57) ||\n      ((nextCode === plus || nextCode === minus) &&\n        nextNextCode >= 48 &&\n        nextNextCode <= 57))\n  ) {\n    pos += nextCode === plus || nextCode === minus ? 3 : 2;\n\n    while (pos < length) {\n      code = value.charCodeAt(pos);\n\n      if (code < 48 || code > 57) {\n        break;\n      }\n\n      pos += 1;\n    }\n  }\n\n  return {\n    number: value.slice(0, pos),\n    unit: value.slice(pos)\n  };\n};\n", "var parse = require(\"./parse\");\nvar walk = require(\"./walk\");\nvar stringify = require(\"./stringify\");\n\nfunction ValueParser(value) {\n  if (this instanceof ValueParser) {\n    this.nodes = parse(value);\n    return this;\n  }\n  return new ValueParser(value);\n}\n\nValueParser.prototype.toString = function() {\n  return Array.isArray(this.nodes) ? stringify(this.nodes) : \"\";\n};\n\nValueParser.prototype.walk = function(cb, bubble) {\n  walk(this.nodes, cb, bubble);\n  return this;\n};\n\nValueParser.unit = require(\"./unit\");\n\nValueParser.walk = walk;\n\nValueParser.stringify = stringify;\n\nmodule.exports = ValueParser;\n", "/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/**\n * Adds the key-value `pair` to `map`.\n *\n * @private\n * @param {Object} map The map to modify.\n * @param {Array} pair The key-value pair to add.\n * @returns {Object} Returns `map`.\n */\nfunction addMapEntry(map, pair) {\n  // Don't return `map.set` because it's not chainable in IE 11.\n  map.set(pair[0], pair[1]);\n  return map;\n}\n\n/**\n * Adds `value` to `set`.\n *\n * @private\n * @param {Object} set The set to modify.\n * @param {*} value The value to add.\n * @returns {Object} Returns `set`.\n */\nfunction addSetEntry(set, value) {\n  // Don't return `set.add` because it's not chainable in IE 11.\n  set.add(value);\n  return set;\n}\n\n/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\n/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    getPrototype = overArg(Object.getPrototypeOf, Object),\n    objectCreate = Object.create,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols,\n    nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n    nativeKeys = overArg(Object.keys, Object);\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView'),\n    Map = getNative(root, 'Map'),\n    Promise = getNative(root, 'Promise'),\n    Set = getNative(root, 'Set'),\n    WeakMap = getNative(root, 'WeakMap'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  return this.has(key) && delete this.__data__[key];\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  return getMapData(this, key)['delete'](key);\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  getMapData(this, key).set(key, value);\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  this.__data__ = new ListCache(entries);\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  return this.__data__['delete'](key);\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var cache = this.__data__;\n  if (cache instanceof ListCache) {\n    var pairs = cache.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      return this;\n    }\n    cache = this.__data__ = new MapCache(pairs);\n  }\n  cache.set(key, value);\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  // Safari 9 makes `arguments.length` enumerable in strict mode.\n  var result = (isArray(value) || isArguments(value))\n    ? baseTimes(value.length, String)\n    : [];\n\n  var length = result.length,\n      skipIndexes = !!length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (key == 'length' || isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    object[key] = value;\n  }\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @param {boolean} [isFull] Specify a clone including symbols.\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, isDeep, isFull, customizer, key, object, stack) {\n  var result;\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      if (isHostObject(value)) {\n        return object ? value : {};\n      }\n      result = initCloneObject(isFunc ? {} : value);\n      if (!isDeep) {\n        return copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, baseClone, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (!isArr) {\n    var props = isFull ? getAllKeys(value) : keys(value);\n  }\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, isDeep, isFull, customizer, key, value, stack));\n  });\n  return result;\n}\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} prototype The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nfunction baseCreate(proto) {\n  return isObject(proto) ? objectCreate(proto) : {};\n}\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\n/**\n * The base implementation of `getTag`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  return objectToString.call(value);\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var result = new buffer.constructor(buffer.length);\n  buffer.copy(result);\n  return result;\n}\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\n/**\n * Creates a clone of `map`.\n *\n * @private\n * @param {Object} map The map to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned map.\n */\nfunction cloneMap(map, isDeep, cloneFunc) {\n  var array = isDeep ? cloneFunc(mapToArray(map), true) : mapToArray(map);\n  return arrayReduce(array, addMapEntry, new map.constructor);\n}\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\n/**\n * Creates a clone of `set`.\n *\n * @private\n * @param {Object} set The set to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned set.\n */\nfunction cloneSet(set, isDeep, cloneFunc) {\n  var array = isDeep ? cloneFunc(setToArray(set), true) : setToArray(set);\n  return arrayReduce(array, addSetEntry, new set.constructor);\n}\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\n/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    assignValue(object, key, newValue === undefined ? source[key] : newValue);\n  }\n  return object;\n}\n\n/**\n * Copies own symbol properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Creates an array of the own enumerable symbol properties of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = nativeGetSymbols ? overArg(nativeGetSymbols, Object) : stubArray;\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11,\n// for data views in Edge < 14, and promises in Node.js.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = objectToString.call(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : undefined;\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, cloneFunc, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return cloneMap(object, isDeep, cloneFunc);\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return cloneSet(object, isDeep, cloneFunc);\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * This method is like `_.cloneWith` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @param {Function} [customizer] The function to customize cloning.\n * @returns {*} Returns the deep cloned value.\n * @see _.cloneWith\n * @example\n *\n * function customizer(value) {\n *   if (_.isElement(value)) {\n *     return value.cloneNode(true);\n *   }\n * }\n *\n * var el = _.cloneDeepWith(document.body, customizer);\n *\n * console.log(el === document.body);\n * // => false\n * console.log(el.nodeName);\n * // => 'BODY'\n * console.log(el.childNodes.length);\n * // => 20\n */\nfunction cloneDeepWith(value, customizer) {\n  return baseClone(value, true, true, customizer);\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = cloneDeepWith;\n", "/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nfunction ignoreFunction() {}\n\nfunction createReturningFunction(value) {\n\treturn function() {\n\t\treturn value;\n\t};\n}\n\nfunction Parser(states) {\n\tthis.states = this.compileStates(states);\n}\n\nParser.prototype.compileStates = function(states) {\n\tvar result = {};\n\tObject.keys(states).forEach(function(name) {\n\t\tresult[name] = this.compileState(states[name], states);\n\t}, this);\n\treturn result;\n};\n\nParser.prototype.compileState = function(state, states) {\n\tvar regExps = [];\n\tfunction iterator(str, value) {\n\t\tregExps.push({\n\t\t\tgroups: Parser.getGroupCount(str),\n\t\t\tregExp: str,\n\t\t\tvalue: value\n\t\t});\n\t}\n\tfunction processState(statePart) {\n\t\tif(Array.isArray(statePart)) {\n\t\t\tstatePart.forEach(processState);\n\t\t} else if(typeof statePart === \"object\") {\n\t\t\tObject.keys(statePart).forEach(function(key) {\n\t\t\t\titerator(key, statePart[key]);\n\t\t\t});\n\t\t} else if(typeof statePart === \"string\") {\n\t\t\tprocessState(states[statePart]);\n\t\t} else {\n\t\t\tthrow new Error(\"Unexpected 'state' format\");\n\t\t}\n\t}\n\tprocessState(state);\n\tvar total = regExps.map(function(r) {\n\t\treturn \"(\" + r.regExp + \")\";\n\t}).join(\"|\");\n\tvar actions = [];\n\tvar pos = 1;\n\tregExps.forEach(function(r) {\n\t\tvar fn;\n\t\tif(typeof r.value === \"function\") {\n\t\t\tfn = r.value;\n\t\t} else if(typeof r.value === \"string\") {\n\t\t\tfn = createReturningFunction(r.value);\n\t\t} else {\n\t\t\tfn = ignoreFunction;\n\t\t}\n\t\tactions.push({\n\t\t\tname: r.regExp,\n\t\t\tfn: fn,\n\t\t\tpos: pos,\n\t\t\tpos2: pos + r.groups + 1\n\t\t});\n\t\tpos += r.groups + 1;\n\t});\n\treturn {\n\t\tregExp: new RegExp(total, \"g\"),\n\t\tactions: actions\n\t};\n};\n\nParser.getGroupCount = function(regExpStr) {\n\treturn new RegExp(\"(\" + regExpStr + \")|^$\").exec(\"\").length - 2;\n};\n\nParser.prototype.parse = function(initialState, string, context) {\n\tcontext = context || {};\n\tvar currentState = initialState;\n\tvar currentIndex = 0;\n\tfor(;;) {\n\t\tvar state = this.states[currentState];\n\t\tvar regExp = state.regExp;\n\t\tregExp.lastIndex = currentIndex;\n\t\tvar match = regExp.exec(string);\n\t\tif(!match) return context;\n\t\tvar actions = state.actions;\n\t\tcurrentIndex = state.regExp.lastIndex;\n\t\tfor(var i = 0; i < actions.length; i++) {\n\t\t\tvar action = actions[i];\n\t\t\tif(match[action.pos]) {\n\t\t\t\tvar ret = action.fn.apply(context, Array.prototype.slice.call(match, action.pos, action.pos2).concat([state.regExp.lastIndex - match[0].length, match[0].length]));\n\t\t\t\tif(ret) {\n\t\t\t\t\tif(!(ret in this.states))\n\t\t\t\t\t\tthrow new Error(\"State '\" + ret + \"' doesn't exist\");\n\t\t\t\t\tcurrentState = ret;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n};\n\nmodule.exports = Parser;\n", "/* AUTO GENERATED */\nmodule.exports = {\n    \"typeMatchClass\": \"\\\\.((?:\\\\\\\\(?:[\\\\0-\\\\t\\\\x0B\\\\f\\\\x0E-\\\\u2027\\\\u202A-\\\\uD7FF\\\\uE000-\\\\uFFFF]|[\\\\uD800-\\\\uDBFF][\\\\uDC00-\\\\uDFFF]|[\\\\uD800-\\\\uDBFF](?![\\\\uDC00-\\\\uDFFF])|(?:[^\\\\uD800-\\\\uDBFF]|^)[\\\\uDC00-\\\\uDFFF])|(?:[\\\\x2DA-Z_a-z\\\\xA0-\\\\uD7FF\\\\uE000-\\\\uFFFF]|[\\\\uD800-\\\\uDBFF][\\\\uDC00-\\\\uDFFF]|[\\\\uD800-\\\\uDBFF](?![\\\\uDC00-\\\\uDFFF])|(?:[^\\\\uD800-\\\\uDBFF]|^)[\\\\uDC00-\\\\uDFFF]))(?:\\\\\\\\(?:[\\\\0-\\\\t\\\\x0B\\\\f\\\\x0E-\\\\u2027\\\\u202A-\\\\uD7FF\\\\uE000-\\\\uFFFF]|[\\\\uD800-\\\\uDBFF][\\\\uDC00-\\\\uDFFF]|[\\\\uD800-\\\\uDBFF](?![\\\\uDC00-\\\\uDFFF])|(?:[^\\\\uD800-\\\\uDBFF]|^)[\\\\uDC00-\\\\uDFFF])|(?:[\\\\x2D0-9A-Z_a-z\\\\xA0-\\\\uD7FF\\\\uE000-\\\\uFFFF]|[\\\\uD800-\\\\uDBFF][\\\\uDC00-\\\\uDFFF]|[\\\\uD800-\\\\uDBFF](?![\\\\uDC00-\\\\uDFFF])|(?:[^\\\\uD800-\\\\uDBFF]|^)[\\\\uDC00-\\\\uDFFF]))*)\",\n    \"typeMatchId\": \"#((?:\\\\\\\\(?:[\\\\0-\\\\t\\\\x0B\\\\f\\\\x0E-\\\\u2027\\\\u202A-\\\\uD7FF\\\\uE000-\\\\uFFFF]|[\\\\uD800-\\\\uDBFF][\\\\uDC00-\\\\uDFFF]|[\\\\uD800-\\\\uDBFF](?![\\\\uDC00-\\\\uDFFF])|(?:[^\\\\uD800-\\\\uDBFF]|^)[\\\\uDC00-\\\\uDFFF])|(?:[\\\\x2DA-Z_a-z\\\\xA0-\\\\uD7FF\\\\uE000-\\\\uFFFF]|[\\\\uD800-\\\\uDBFF][\\\\uDC00-\\\\uDFFF]|[\\\\uD800-\\\\uDBFF](?![\\\\uDC00-\\\\uDFFF])|(?:[^\\\\uD800-\\\\uDBFF]|^)[\\\\uDC00-\\\\uDFFF]))(?:\\\\\\\\(?:[\\\\0-\\\\t\\\\x0B\\\\f\\\\x0E-\\\\u2027\\\\u202A-\\\\uD7FF\\\\uE000-\\\\uFFFF]|[\\\\uD800-\\\\uDBFF][\\\\uDC00-\\\\uDFFF]|[\\\\uD800-\\\\uDBFF](?![\\\\uDC00-\\\\uDFFF])|(?:[^\\\\uD800-\\\\uDBFF]|^)[\\\\uDC00-\\\\uDFFF])|(?:[\\\\x2D0-9A-Z_a-z\\\\xA0-\\\\uD7FF\\\\uE000-\\\\uFFFF]|[\\\\uD800-\\\\uDBFF][\\\\uDC00-\\\\uDFFF]|[\\\\uD800-\\\\uDBFF](?![\\\\uDC00-\\\\uDFFF])|(?:[^\\\\uD800-\\\\uDBFF]|^)[\\\\uDC00-\\\\uDFFF]))*)\",\n    \"identifierEscapeRegexp\": \"(^[\\\\0-,\\\\.-@\\\\[-\\\\^`\\\\{-\\\\x9F]|^\\\\x2D\\\\x2D|[\\\\0-,\\\\.\\\\/:-@\\\\[-\\\\^`\\\\{-\\\\x9F])\"\n}\n", "\"use strict\";\n\nvar Parser = require(\"fastparse\");\nvar uniRegexp = require(\"./uni-regexp\");\n\nfunction unescape(str) {\n\treturn str.replace(/\\\\(.)/g, \"$1\");\n}\n\nfunction commentMatch(match, content) {\n\tthis.selector.nodes.push({\n\t\ttype: \"comment\",\n\t\tcontent: content\n\t});\n}\n\nfunction typeMatch(type) {\n\treturn function(match, name) {\n\t\tthis.selector.nodes.push({\n\t\t\ttype: type,\n\t\t\tname: unescape(name)\n\t\t});\n\t};\n}\n\nfunction pseudoClassStartMatch(match, name) {\n\tvar newToken = {\n\t\ttype: \"pseudo-class\",\n\t\tname: unescape(name),\n\t\tcontent: \"\"\n\t};\n\tthis.selector.nodes.push(newToken);\n\tthis.token = newToken;\n\tthis.brackets = 1;\n\treturn \"inBrackets\";\n}\n\nfunction nestedPseudoClassStartMatch(match, name, after) {\n\tvar newSelector = {\n\t\ttype: \"selector\",\n\t\tnodes: []\n\t};\n\tvar newToken = {\n\t\ttype: \"nested-pseudo-class\",\n\t\tname: unescape(name),\n\t\tnodes: [newSelector]\n\t};\n\tif(after) {\n\t\tnewSelector.before = after;\n\t}\n\tthis.selector.nodes.push(newToken);\n\tthis.stack.push(this.root);\n\tthis.root = newToken;\n\tthis.selector = newSelector;\n}\n\nfunction nestedEnd(match, before) {\n\tif(this.stack.length > 0) {\n\t\tif(before) {\n\t\t\tthis.selector.after = before;\n\t\t}\n\t\tthis.root = this.stack.pop();\n\t\tthis.selector = this.root.nodes[this.root.nodes.length - 1];\n\t} else {\n\t\tthis.selector.nodes.push({\n\t\t\ttype: \"invalid\",\n\t\t\tvalue: match\n\t\t});\n\t}\n}\n\nfunction operatorMatch(match, before, operator, after) {\n\tvar token = {\n\t\ttype: \"operator\",\n\t\toperator: operator\n\t};\n\tif(before) {\n\t\ttoken.before = before;\n\t}\n\tif(after) {\n\t\ttoken.after = after;\n\t}\n\tthis.selector.nodes.push(token);\n}\n\nfunction spacingMatch(match) {\n\tthis.selector.nodes.push({\n\t\ttype: \"spacing\",\n\t\tvalue: match\n\t});\n}\n\nfunction elementMatch(match, namespace, name) {\n\tvar newToken = {\n\t\ttype: \"element\",\n\t\tname: unescape(name)\n\t};\n\n\tif(namespace) {\n\t\tnewToken.namespace = unescape(namespace.substr(0, namespace.length - 1));\n\t}\n\tthis.selector.nodes.push(newToken);\n}\n\nfunction universalMatch(match, namespace) {\n\tvar newToken = {\n\t\ttype: \"universal\"\n\t};\n\tif(namespace) {\n\t\tnewToken.namespace = unescape(namespace.substr(0, namespace.length - 1));\n\t}\n\tthis.selector.nodes.push(newToken);\n}\n\nfunction attributeMatch(match, content) {\n\tthis.selector.nodes.push({\n\t\ttype: \"attribute\",\n\t\tcontent: content\n\t});\n}\n\nfunction invalidMatch(match) {\n\tthis.selector.nodes.push({\n\t\ttype: \"invalid\",\n\t\tvalue: match\n\t});\n}\n\nfunction irrelevantSpacingStartMatch(match) {\n\tthis.selector.before = match;\n}\n\nfunction irrelevantSpacingEndMatch(match) {\n\tthis.selector.after = match;\n}\n\nfunction nextSelectorMatch(match, before, after) {\n\tvar newSelector = {\n\t\ttype: \"selector\",\n\t\tnodes: []\n\t};\n\tif(before) {\n\t\tthis.selector.after = before;\n\t}\n\tif(after) {\n\t\tnewSelector.before = after;\n\t}\n\tthis.root.nodes.push(newSelector);\n\tthis.selector = newSelector;\n}\n\nfunction addToCurrent(match) {\n\tthis.token.content += match;\n}\n\nfunction bracketStart(match) {\n\tthis.token.content += match;\n\tthis.brackets++;\n}\n\nfunction bracketEnd(match) {\n\tif(--this.brackets === 0) {\n\t\treturn \"selector\";\n\t}\n\tthis.token.content += match;\n}\n\nfunction getSelectors() {\n\t// The assignment here is split to preserve the property enumeration order.\n\tvar selectors = {\n\t\t\"/\\\\*([\\\\s\\\\S]*?)\\\\*/\": commentMatch\n\t};\n\t// https://www.w3.org/TR/CSS21/syndata.html#characters\n\t// 4.1.3: identifiers (...) can contain only the characters [a-zA-Z0-9] and\n\t// ISO 10646 characters U+00A0 and higher, plus the hyphen (-) and the underscore (_)\n\t//\n\t// 10ffff is the maximum allowed in current Unicode\n\tselectors[uniRegexp.typeMatchClass] = typeMatch(\"class\");\n\tselectors[uniRegexp.typeMatchId] = typeMatch(\"id\");\n\tvar selectorsSecondHalf = {\n\t\t\":(not|any|-\\\\w+?-any|matches|is|where|has|local|global)\\\\((\\\\s*)\": nestedPseudoClassStartMatch,\n\t\t\":((?:\\\\\\\\.|[A-Za-z_\\\\-0-9])+)\\\\(\": pseudoClassStartMatch,\n\t\t\":((?:\\\\\\\\.|[A-Za-z_\\\\-0-9])+)\": typeMatch(\"pseudo-class\"),\n\t\t\"::((?:\\\\\\\\.|[A-Za-z_\\\\-0-9])+)\": typeMatch(\"pseudo-element\"),\n\t\t\"(\\\\*\\\\|)((?:\\\\\\\\.|[A-Za-z_\\\\-0-9])+)\": elementMatch,\n\t\t\"(\\\\*\\\\|)\\\\*\": universalMatch,\n\t\t\"((?:\\\\\\\\.|[A-Za-z_\\\\-0-9])*\\\\|)?\\\\*\": universalMatch,\n\t\t\"((?:\\\\\\\\.|[A-Za-z_\\\\-0-9])*\\\\|)?((?:\\\\\\\\.|[A-Za-z_\\\\-])(?:\\\\\\\\.|[A-Za-z_\\\\-0-9])*)\": elementMatch,\n\t\t\"\\\\[([^\\\\]]+)\\\\]\": attributeMatch,\n\t\t\"(\\\\s*)\\\\)\": nestedEnd,\n\t\t\"(\\\\s*)((?:\\\\|\\\\|)|(?:>>)|[>+~])(\\\\s*)\": operatorMatch,\n\t\t\"(\\\\s*),(\\\\s*)\": nextSelectorMatch,\n\t\t\"\\\\s+$\": irrelevantSpacingEndMatch,\n\t\t\"^\\\\s+\": irrelevantSpacingStartMatch,\n\t\t\"\\\\s+\": spacingMatch,\n\t\t\".\": invalidMatch\n\t};\n\tvar selector;\n\tfor (selector in selectorsSecondHalf) {\n\t\tif (Object.prototype.hasOwnProperty.call(selectorsSecondHalf, selector)) {\n\t\t\tselectors[selector] = selectorsSecondHalf[selector];\n\t\t}\n\t}\n\treturn selectors;\n}\n\nvar parser = new Parser({\n\tselector: getSelectors(),\n\tinBrackets: {\n\t\t\"/\\\\*[\\\\s\\\\S]*?\\\\*/\": addToCurrent,\n\t\t\"\\\"([^\\\\\\\\\\\"]|\\\\\\\\.)*\\\"\": addToCurrent,\n\t\t\"'([^\\\\\\\\']|\\\\\\\\.)*'\": addToCurrent,\n\t\t\"[^()'\\\"/]+\": addToCurrent,\n\t\t\"\\\\(\": bracketStart,\n\t\t\"\\\\)\": bracketEnd,\n\t\t\".\": addToCurrent\n\t}\n});\n\nfunction parse(str) {\n\tvar selectorNode = {\n\t\ttype: \"selector\",\n\t\tnodes: []\n\t};\n\tvar rootNode = {\n\t\ttype: \"selectors\",\n\t\tnodes: [\n\t\t\tselectorNode\n\t\t]\n\t};\n\tparser.parse(\"selector\", str, {\n\t\tstack: [],\n\t\troot: rootNode,\n\t\tselector: selectorNode\n\t});\n\treturn rootNode;\n}\n\nmodule.exports = parse;\n", "\"use strict\";\n\nvar uniRegexp = require(\"./uni-regexp\");\nvar identifierEscapeRegexp = new RegExp(uniRegexp.identifierEscapeRegexp, \"g\");\n\nfunction escape(str, identifier) {\n\tif(str === \"*\") {\n\t\treturn \"*\";\n\t}\n\tif (identifier) {\n\t\treturn str.replace(identifierEscapeRegexp, \"\\\\$1\");\n\t} else {\n\t\treturn str.replace(/(^[^A-Za-z_\\\\-]|^--|[^A-Za-z_0-9\\\\-])/g, \"\\\\$1\");\n\t}\n}\n\nfunction stringifyWithoutBeforeAfter(tree) {\n\tswitch(tree.type) {\n\tcase \"selectors\":\n\t\treturn tree.nodes.map(stringify).join(\",\");\n\tcase \"selector\":\n\t\treturn tree.nodes.map(stringify).join(\"\");\n\tcase \"element\":\n\t\treturn (typeof tree.namespace === \"string\" ? escape(tree.namespace) + \"|\" : \"\") + escape(tree.name);\n\tcase \"class\":\n\t\treturn \".\" + escape(tree.name, true);\n\tcase \"id\":\n\t\treturn \"#\" + escape(tree.name, true);\n\tcase \"attribute\":\n\t\treturn \"[\" + tree.content + \"]\";\n\tcase \"spacing\":\n\t\treturn tree.value;\n\tcase \"pseudo-class\":\n\t\treturn \":\" + escape(tree.name) + (typeof tree.content === \"string\" ? \"(\" + tree.content + \")\" : \"\");\n\tcase \"nested-pseudo-class\":\n\t\treturn \":\" + escape(tree.name) + \"(\" + tree.nodes.map(stringify).join(\",\") + \")\";\n\tcase \"pseudo-element\":\n\t\treturn \"::\" + escape(tree.name);\n\tcase \"universal\":\n\t\treturn (typeof tree.namespace === \"string\" ? escape(tree.namespace) + \"|\" : \"\") + \"*\";\n\tcase \"operator\":\n\t\treturn tree.operator;\n\tcase \"comment\":\n\t\treturn \"/*\" + tree.content + \"*/\";\n\tcase \"invalid\":\n\t\treturn tree.value;\n\t}\n}\n\n\nfunction stringify(tree) {\n\tvar str = stringifyWithoutBeforeAfter(tree);\n\tif(tree.before) {\n\t\tstr = tree.before + str;\n\t}\n\tif(tree.after) {\n\t\tstr = str + tree.after;\n\t}\n\treturn str;\n}\n\nmodule.exports = stringify;\n", "\"use strict\";\n\nvar Parser = require(\"fastparse\");\n\nfunction commentMatch(match, content) {\n\tthis.value.nodes.push({\n\t\ttype: \"comment\",\n\t\tcontent: content\n\t});\n}\n\nfunction spacingMatch(match) {\n\tvar item = this.value.nodes[this.value.nodes.length - 1];\n\titem.after = (item.after || \"\") + match;\n}\n\nfunction initialSpacingMatch(match) {\n\tthis.value.before = match;\n}\n\nfunction endSpacingMatch(match) {\n\tthis.value.after = match;\n}\n\nfunction unescapeString(content) {\n\treturn content.replace(/\\\\(?:([a-fA-F0-9]{1,6})|(.))/g, function(all, unicode, otherCharacter) {\n\t\tif (otherCharacter) {\n\t\t\treturn otherCharacter;\n\t\t}\n\n\t\tvar C = parseInt(unicode, 16);\n\t\tif(C < 0x10000) {\n\t\t\treturn String.fromCharCode(C);\n\t\t} else {\n\t\t\treturn String.fromCharCode(Math.floor((C - 0x10000) / 0x400) + 0xD800) +\n\t\t\t\tString.fromCharCode((C - 0x10000) % 0x400 + 0xDC00);\n\t\t}\n\t});\n}\n\nfunction stringMatch(match, content) {\n\tvar value = unescapeString(content);\n\tthis.value.nodes.push({\n\t\ttype: \"string\",\n\t\tvalue: value,\n\t\tstringType: match[0]\n\t});\n}\n\nfunction commaMatch(match, spacing) {\n\tvar newValue = {\n\t\ttype: \"value\",\n\t\tnodes: []\n\t};\n\tif(spacing) {\n\t\tnewValue.before = spacing;\n\t}\n\tthis.root.nodes.push(newValue);\n\tthis.value = newValue;\n}\n\nfunction itemMatch(match) {\n\tthis.value.nodes.push({\n\t\ttype: \"item\",\n\t\tname: match\n\t});\n}\n\nfunction nestedItemMatch(match, name, spacing) {\n\tthis.stack.push(this.root);\n\tthis.root = {\n\t\ttype: \"nested-item\",\n\t\tname: name,\n\t\tnodes: [\n\t\t\t{ type: \"value\", nodes: [] }\n\t\t]\n\t};\n\tif(spacing) {\n\t\tthis.root.nodes[0].before = spacing;\n\t}\n\tthis.value.nodes.push(this.root);\n\tthis.value = this.root.nodes[0];\n}\n\nfunction nestedItemEndMatch(match, spacing, remaining) {\n\tif(this.stack.length === 0) {\n\t\tif(spacing) {\n\t\t\tvar item = this.value.nodes[this.value.nodes.length - 1];\n\t\t\titem.after = (item.after || \"\") + spacing;\n\t\t}\n\t\tthis.value.nodes.push({\n\t\t\ttype: \"invalid\",\n\t\t\tvalue: remaining\n\t\t});\n\t} else {\n\t\tif(spacing) {\n\t\t\tthis.value.after = spacing;\n\t\t}\n\t\tthis.root = this.stack.pop();\n\t\tthis.value = this.root.nodes[this.root.nodes.length - 1];\n\t}\n}\n\nfunction urlMatch(match, innerSpacingBefore, content, innerSpacingAfter) {\n\tvar item = {\n\t\ttype: \"url\"\n\t};\n\tif(innerSpacingBefore) {\n\t\titem.innerSpacingBefore = innerSpacingBefore;\n\t}\n\tif(innerSpacingAfter) {\n\t\titem.innerSpacingAfter = innerSpacingAfter;\n\t}\n\tswitch(content[0]) {\n\t\tcase \"\\\"\":\n\t\t\titem.stringType = \"\\\"\";\n\t\t\titem.url = unescapeString(content.substr(1, content.length - 2));\n\t\t\tbreak;\n\t\tcase \"'\":\n\t\t\titem.stringType = \"'\";\n\t\t\titem.url = unescapeString(content.substr(1, content.length - 2));\n\t\t\tbreak;\n\t\tdefault:\n\t\t\titem.url = unescapeString(content);\n\t\t\tbreak;\n\t}\n\tthis.value.nodes.push(item);\n}\n\nvar parser = new Parser({\n\tdecl: {\n\t\t\"^\\\\s+\": initialSpacingMatch,\n\t\t\"/\\\\*([\\\\s\\\\S]*?)\\\\*/\": commentMatch,\n\t\t\"\\\"((?:[^\\\\\\\\\\\"]|\\\\\\\\.)*)\\\"\": stringMatch,\n\t\t\"'((?:[^\\\\\\\\']|\\\\\\\\.)*)'\": stringMatch,\n\t\t\"url\\\\((\\\\s*)(\\\"(?:[^\\\\\\\\\\\"]|\\\\\\\\.)*\\\")(\\\\s*)\\\\)\": urlMatch,\n\t\t\"url\\\\((\\\\s*)('(?:[^\\\\\\\\']|\\\\\\\\.)*')(\\\\s*)\\\\)\": urlMatch,\n\t\t\"url\\\\((\\\\s*)((?:[^\\\\\\\\)'\\\"]|\\\\\\\\.)*)(\\\\s*)\\\\)\": urlMatch,\n\t\t\"([\\\\w-]+)\\\\((\\\\s*)\": nestedItemMatch,\n\t\t\"(\\\\s*)(\\\\))\": nestedItemEndMatch,\n\t\t\",(\\\\s*)\": commaMatch,\n\t\t\"\\\\s+$\": endSpacingMatch,\n\t\t\"\\\\s+\": spacingMatch,\n\t\t\"[^\\\\s,)]+\": itemMatch\n\t}\n});\n\nfunction parseValues(str) {\n\tvar valueNode = {\n\t\ttype: \"value\",\n\t\tnodes: []\n\t};\n\tvar rootNode = {\n\t\ttype: \"values\",\n\t\tnodes: [\n\t\t\tvalueNode\n\t\t]\n\t};\n\tparser.parse(\"decl\", str, {\n\t\tstack: [],\n\t\troot: rootNode,\n\t\tvalue: valueNode\n\t});\n\treturn rootNode;\n}\n\nmodule.exports = parseValues;\n", "\"use strict\";\n\nvar cssesc = require(\"cssesc\");\n\nvar stringify;\n\nfunction escape(str, stringType) {\n\treturn cssesc(str, {\n\t\tquotes: stringType === \"\\\"\" ? \"double\" : \"single\"\n\t});\n}\n\nfunction stringifyWithoutBeforeAfter(tree) {\n\tswitch(tree.type) {\n\tcase \"values\":\n\t\treturn tree.nodes.map(stringify).join(\",\");\n\tcase \"value\":\n\t\treturn tree.nodes.map(stringify).join(\"\");\n\tcase \"item\":\n\t\treturn tree.name;\n\tcase \"nested-item\":\n\t\treturn tree.name + \"(\" + tree.nodes.map(stringify).join(\",\") + \")\";\n\tcase \"invalid\":\n\t\treturn tree.value;\n\tcase \"comment\":\n\t\treturn \"/*\" + tree.content + \"*/\";\n\tcase \"string\":\n\t\tswitch(tree.stringType) {\n\t\tcase \"'\":\n\t\t\treturn \"'\" + escape(tree.value, \"'\") + \"'\";\n\t\tcase \"\\\"\":\n\t\t\treturn \"\\\"\" + escape(tree.value, \"\\\"\") + \"\\\"\";\n\t\t}\n\t\t/* istanbul ignore next */\n\t\tthrow new Error(\"Invalid stringType\");\n\tcase \"url\":\n\t\tvar start = \"url(\" + (tree.innerSpacingBefore || \"\");\n\t\tvar end = (tree.innerSpacingAfter || \"\") + \")\";\n\t\tswitch(tree.stringType) {\n\t\tcase \"'\":\n\t\t\treturn start + \"'\" + tree.url.replace(/(\\\\)/g, \"\\\\$1\").replace(/'/g, \"\\\\'\") + \"'\" + end;\n\t\tcase \"\\\"\":\n\t\t\treturn start + \"\\\"\" + tree.url.replace(/(\\\\)/g, \"\\\\$1\").replace(/\"/g, \"\\\\\\\"\") + \"\\\"\" + end;\n\t\tdefault:\n\t\t\treturn start + tree.url.replace(/(\"|'|\\)|\\\\)/g, \"\\\\$1\") + end;\n\t\t}\n\t}\n}\n\n\nstringify = function stringify(tree) {\n\tvar str = stringifyWithoutBeforeAfter(tree);\n\tif(tree.before) {\n\t\tstr = tree.before + str;\n\t}\n\tif(tree.after) {\n\t\tstr = str + tree.after;\n\t}\n\treturn str;\n};\n\nmodule.exports = stringify;\n", "exports.parse = require(\"./parse\");\nexports.stringify = require(\"./stringify\");\nexports.parseValues = require(\"./parseValues\");\nexports.stringifyValues = require(\"./stringifyValues\");\n", "import type {\n    lengthValidUnits,\n    angleValidUnits,\n    frequencyValidUnits,\n    resolutionValidUnits,\n    timeValidUnits,\n} from './units';\n\nexport interface CSSValueAST<TYPE extends string> {\n    type: TYPE;\n    start: number;\n    end: number;\n    value: string;\n}\n\nexport type BaseAstNode =\n    | Literal\n    | CssWideKeyword\n    | Space\n    | Comment\n    | Invalid\n    | CustomIdent\n    | DashedIdent\n    | Call\n    | String\n    | Number\n    | Integer\n    | Length\n    | Angle\n    | Time\n    | Percentage\n    | Frequency\n    | Resolution\n    | Flex\n    | UnknownUnit\n    | Color;\n\n/* types */\n\n// custom\nexport type BuildVarAst = CSSValueAST<`build-var`> & {\n    subType: string;\n    id: string;\n};\nexport type Literal = CSSValueAST<`literal`> & {\n    before: string;\n    after: string;\n};\nexport type CssWideKeyword = CSSValueAST<`css-wide-keyword`> & {\n    value: AnyCase<`inherit` | `unset` | `initial`>;\n};\nexport type Space = CSSValueAST<`space`> & {\n    before: string;\n    after: string;\n};\nexport type Comment = CSSValueAST<`comment`> & {\n    before: string;\n    after: string;\n};\nexport type Call<TYPE extends string = 'call'> = CSSValueAST<TYPE> & {\n    args: CSSValueAST<any>[];\n    before: string;\n    after: string;\n};\ntype Unit<TYPE extends string, UNIT extends string> = CSSValueAST<TYPE> & {\n    unit: UNIT;\n    integer: boolean;\n};\nexport type Invalid = CSSValueAST<`invalid`>;\nexport type UnknownUnit = Unit<`unknown-unit`, string>;\n\n// textual\nexport type CustomIdent = CSSValueAST<`<custom-ident>`>;\nexport type DashedIdent = CSSValueAST<`<dashed-ident>`>;\nexport type String = CSSValueAST<`<string>`>;\nexport type Url = CSSValueAST<`<url>`>;\n// numeric\nexport type Integer = CSSValueAST<`<integer>`>;\nexport type Number = CSSValueAST<`<number>`>;\nexport type Percentage = Unit<`<percentage>`, `%`>;\nexport type Ratio = CSSValueAST<`<ratio>`>;\n// distance\nexport type Length = Unit<`<length>`, AnyCase<(typeof lengthValidUnits)[number]>>;\n// other quantities\nexport type Flex = Unit<`<flex>`, AnyCase<`fr`>>;\nexport type Angle = Unit<`<angle>`, AnyCase<(typeof angleValidUnits)[number]>>;\nexport type Time = Unit<`<time>`, AnyCase<(typeof timeValidUnits)[number]>>;\nexport type Frequency = Unit<`<frequency>`, AnyCase<(typeof frequencyValidUnits)[number]>>;\nexport type Resolution = Unit<`<resolution>`, AnyCase<(typeof resolutionValidUnits)[number]>>;\n// other\nexport type Color = CSSValueAST<`<color>`>;\nexport type Image = CSSValueAST<`<image>`>;\nexport type Position = CSSValueAST<`<position>`>;\n// attribute\nexport type Attribute = CSSValueAST<`<attr()>`>;\n// mathematical\n/* \n<calc()>\n<min()>\n<max()>\n<clamp()>\n<round()>\n<mod()>\n<rem()>\n<sin()>\n<cos()>\n<tan()>\n<asin()>\n<acos()>\n<atan()>\n<atan2()>\n<pow()>\n<sqrt()>\n<hypot()>\n<log()>\n<exp()>\n<abs()>\n<sign()>\n\n<calc-sum>, <calc-product>, <calc-value>, <calc-constant>\n*/\n/////////////////////\ntype AnyCase<T extends string> = string extends T\n    ? string\n    : T extends `${infer F1}${infer F2}${infer R}`\n    ? `${Uppercase<F1> | Lowercase<F1>}${Uppercase<F2> | Lowercase<F2>}${AnyCase<R>}`\n    : T extends `${infer F}${infer R}`\n    ? `${Uppercase<F> | Lowercase<F>}${AnyCase<R>}`\n    : '';\n/////////////////////\n\nexport const invalid = (value: Partial<Invalid>): Invalid => ({\n    start: 0,\n    end: 0,\n    value: ``,\n    ...value,\n    type: `invalid`,\n});\nexport const literal = (value: Partial<Literal>): Literal => ({\n    start: 0,\n    end: 0,\n    before: ``,\n    after: ``,\n    value: ``,\n    ...value,\n    type: `literal`,\n});\nexport const cssWideKeyword = (value: Partial<CssWideKeyword>): CssWideKeyword => ({\n    start: 0,\n    end: 0,\n    value: `initial`,\n    ...value,\n    type: `css-wide-keyword`,\n});\nexport const space = (value: Partial<Space>): Space => ({\n    start: 0,\n    end: 0,\n    before: ``,\n    after: ``,\n    value: ` `,\n    ...value,\n    type: `space`,\n});\nexport const comment = (value: Partial<Comment>): Comment => ({\n    start: 0,\n    end: 0,\n    before: ``,\n    after: ``,\n    value: ``,\n    ...value,\n    type: `comment`,\n});\nexport const customIdent = (value: Partial<CustomIdent>): CustomIdent => ({\n    start: 0,\n    end: 0,\n    value: ``,\n    ...value,\n    type: `<custom-ident>`,\n});\nexport const dashedIdent = (value: Partial<DashedIdent>): DashedIdent => ({\n    start: 0,\n    end: 0,\n    value: `-`,\n    ...value,\n    type: `<dashed-ident>`,\n});\nexport const string = (value: Partial<String>): String => ({\n    start: 0,\n    end: 0,\n    value: `\"\"`,\n    ...value,\n    type: `<string>`,\n});\nexport const integer = (value: Partial<Integer>): Integer => ({\n    start: 0,\n    end: 0,\n    value: `0`,\n    ...value,\n    type: `<integer>`,\n});\nexport const number = (value: Partial<Number>): Number => ({\n    start: 0,\n    end: 0,\n    value: `0`,\n    ...value,\n    type: `<number>`,\n});\nexport const unknownUnit = (value: Partial<UnknownUnit>): UnknownUnit => ({\n    start: 0,\n    end: 0,\n    value: `0`,\n    unit: ``,\n    integer: false,\n    ...value,\n    type: `unknown-unit`,\n});\nexport const length = (value: Partial<Length> & Pick<Length, 'unit'>): Length => ({\n    start: 0,\n    end: 0,\n    value: `0`,\n    integer: false,\n    ...value,\n    type: `<length>`,\n});\nexport const angle = (value: Partial<Angle> & Pick<Angle, 'unit'>): Angle => ({\n    start: 0,\n    end: 0,\n    value: `0`,\n    integer: false,\n    ...value,\n    type: `<angle>`,\n});\nexport const percentage = (value: Partial<Percentage>): Percentage => ({\n    start: 0,\n    end: 0,\n    value: `0`,\n    unit: `%`,\n    integer: false,\n    ...value,\n    type: `<percentage>`,\n});\nexport const flex = (value: Partial<Flex>): Flex => ({\n    start: 0,\n    end: 0,\n    value: `0`,\n    unit: `fr`,\n    integer: false,\n    ...value,\n    type: `<flex>`,\n});\nexport const time = (value: Partial<Time> & Pick<Time, 'unit'>): Time => ({\n    start: 0,\n    end: 0,\n    value: `0`,\n    integer: false,\n    ...value,\n    type: `<time>`,\n});\nexport const frequency = (value: Partial<Frequency> & Pick<Frequency, 'unit'>): Frequency => ({\n    start: 0,\n    end: 0,\n    value: `0`,\n    integer: false,\n    ...value,\n    type: `<frequency>`,\n});\nexport const resolution = (value: Partial<Resolution> & Pick<Resolution, 'unit'>): Resolution => ({\n    start: 0,\n    end: 0,\n    value: `0`,\n    integer: false,\n    ...value,\n    type: `<resolution>`,\n});\nexport const call = (value: Partial<Call>): Call => ({\n    start: 0,\n    end: 0,\n    value: ``,\n    args: value.args || [],\n    before: ``,\n    after: ``,\n    ...value,\n    type: `call`,\n});\nexport const color = (value: Partial<Color>): Color => ({\n    start: 0,\n    end: 0,\n    value: `#000000`,\n    ...value,\n    type: `<color>`,\n});\n", "export const lengthValidUnits = [\n    `px`,\n    `em`,\n    `ex`,\n    `cap`,\n    `ch`,\n    `ic`,\n    `rem`,\n    `lh`,\n    `rlh`,\n    `vw`,\n    `vh`,\n    `vi`,\n    `vb`,\n    `vmin`,\n    `vmax`,\n    `cm`,\n    `mm`,\n    `q`,\n    `in`,\n    `pt`,\n    `pc`,\n] as const;\nexport const angleValidUnits = [`deg`, `grad`, `rad`, `turn`] as const;\nexport const timeValidUnits = [`s`, `ms`] as const;\nexport const frequencyValidUnits = [`hz`, `khz`] as const;\nexport const resolutionValidUnits = [`dpi`, `dpcm`, `dppx`] as const;\n", "import {\n    tokenize,\n    isStringDelimiter,\n    isWhitespace,\n    createToken,\n    getJSCommentStartType,\n    getMultilineCommentStartType,\n    isCommentEnd,\n    getUnclosedComment,\n} from '@tokey/core';\nimport type { Token, Descriptors } from '@tokey/core';\n\ntype Delimiters = '(' | ')' | ',' | '/' | '+' | '-' | '*' | '#' | '.' | '%';\n\nexport type CSSValueToken = Token<Descriptors | Delimiters>;\n\nexport function tokenizeValue(source: string, options: { offset?: number } = {}) {\n    const parseLineComments = false; // why would that be a choice?\n    return tokenize<CSSValueToken>(source, {\n        isDelimiter,\n        isStringDelimiter(char: string, previousChar: string) {\n            return previousChar !== `\\\\` && isStringDelimiter(char);\n        },\n        isWhitespace,\n        shouldAddToken: () => true,\n        createToken,\n        getCommentStartType: parseLineComments\n            ? getJSCommentStartType\n            : getMultilineCommentStartType,\n        isCommentEnd,\n        getUnclosedComment,\n        shouldClose(ch, previousChar) {\n            if (isWhitespace(ch) && isWhitespace(previousChar)) {\n                return false;\n            }\n            if (previousChar === '\\\\') {\n                return false;\n            }\n            const isAllowedChars = /[-_a-zA-Z0-9]/.test(ch);\n            if (isAllowedChars) {\n                return false;\n            }\n            // match css identifier char don't allow non-ascii chars\n            return ch.charCodeAt(0) <= 127;\n        },\n        offset: options.offset,\n    });\n}\n\nconst isDelimiter = (char: string, previousChar: string) =>\n    previousChar !== '\\\\' &&\n    (char === '(' ||\n        char === ')' ||\n        char === '[' ||\n        char === ']' ||\n        char === '<' ||\n        char === '>' ||\n        char === '{' ||\n        char === '}' ||\n        char === '@' ||\n        char === '|' ||\n        char === ':' ||\n        char === ';' ||\n        char === '~' ||\n        char === '&' ||\n        char === ',' ||\n        char === '/' ||\n        char === '+' ||\n        char === '-' ||\n        char === '*' ||\n        char === '#' ||\n        char === '%' ||\n        char === '.');\n", "import type {\n    BaseAstNode,\n    Literal,\n    CssWideKeyword,\n    Space,\n    Comment,\n    String,\n    Number,\n    Call,\n    CustomIdent,\n    DashedIdent,\n    Integer,\n    Angle,\n    Color,\n    Flex,\n    Frequency,\n    Invalid,\n    Length,\n    Percentage,\n    Resolution,\n    Time,\n    UnknownUnit,\n} from './ast-types';\n\nexport function stringifyCSSValue(ast: BaseAstNode | BaseAstNode[]) {\n    if (!Array.isArray(ast)) {\n        return stringifyNode(ast);\n    }\n    let result = ``;\n    for (const node of ast) {\n        result += stringifyNode(node);\n    }\n    return result;\n}\nfunction stringifyNode(node: BaseAstNode) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n    return stringifyByType[node.type]?.(node as any) || ``;\n}\n\ntype Printers = {\n    [K in BaseAstNode as K['type']]: (node: K) => string;\n};\nconst stringifyByType: Printers = {\n    space: ({ before, value, after }: Space) => before + value + after,\n    literal: ({ before, value, after }: Literal) => before + value + after,\n    'css-wide-keyword': ({ value }: CssWideKeyword) => value,\n    invalid: ({ value }: Invalid) => value,\n    comment: ({ value }: Comment) => value,\n    call: ({ value, before, after, args }: Call) =>\n        `${value}(${before}${stringifyCSSValue(args)}${after})`,\n    '<custom-ident>': ({ value }: CustomIdent) => value,\n    '<dashed-ident>': ({ value }: DashedIdent) => value,\n    '<string>': ({ value }: String) => value,\n    '<number>': ({ value }: Number) => value,\n    '<integer>': ({ value }: Integer) => value,\n    '<length>': ({ value, unit }: Length) => value + unit,\n    '<percentage>': ({ value, unit }: Percentage) => value + unit,\n    '<angle>': ({ value, unit }: Angle) => value + unit,\n    '<time>': ({ value, unit }: Time) => value + unit,\n    '<frequency>': ({ value, unit }: Frequency) => value + unit,\n    '<resolution>': ({ value, unit }: Resolution) => value + unit,\n    '<flex>': ({ value, unit }: Flex) => value + unit,\n    'unknown-unit': ({ value, unit }: UnknownUnit) => value + unit,\n    '<color>': ({ value }: Color) => value,\n};\n", "import {\n    BaseAstNode,\n    customIdent,\n    dashedIdent,\n    literal,\n    cssWideKeyword,\n    space,\n    string,\n    number,\n    unknownUnit,\n    length,\n    percentage,\n    angle,\n    time,\n    flex,\n    call,\n    frequency,\n    resolution,\n    integer,\n    color,\n    invalid,\n    comment,\n} from './ast-types';\nimport {\n    lengthValidUnits,\n    angleValidUnits,\n    timeValidUnits,\n    frequencyValidUnits,\n    resolutionValidUnits,\n} from './units';\nimport { tokenizeValue, CSSValueToken } from './tokenizer';\nimport { stringifyCSSValue } from './value-stringify';\nimport { Seeker, isComment } from '@tokey/core';\n\nexport type ParseResults = Array<BaseAstNode>;\n\nexport function parseCSSValue(\n    source: string,\n    _options?: { parseBuildVar?: () => { id: string; subType: string } }\n): ParseResults {\n    const tokens = tokenizeValue(source);\n    return new Seeker(tokens).run<ParseResults>(handleToken, [], source);\n}\n\nfunction handleToken(\n    token: CSSValueToken,\n    ast: ParseResults,\n    source: string,\n    s: Seeker<CSSValueToken>\n): void {\n    const { type, value, start, end } = token;\n    if (type === `space`) {\n        let firstSpace = value.indexOf(` `);\n        if (firstSpace === -1) {\n            firstSpace = value.indexOf(`\\n`);\n        }\n        if (firstSpace === -1) {\n            firstSpace = value.indexOf(`\\t`);\n        }\n        const before = firstSpace !== -1 ? value.substring(0, firstSpace) : ``;\n        const after = firstSpace !== -1 ? value.substring(firstSpace + 1) : value.substring(1);\n        ast.push(\n            space({\n                value: firstSpace !== -1 ? value[firstSpace] : value[0],\n                start,\n                end,\n                before,\n                after,\n            })\n        );\n    } else if (type === `text` || type === `-`) {\n        // numbers and lengths\n        if (parseNumber(token, ast, source, s)) {\n            return;\n        }\n        const ident = collectIdent(token, ast, source, s);\n        if (s.peek().type === `(`) {\n            // function\n            s.next();\n            const args: ParseResults = [];\n            s.run(\n                (token, args) => {\n                    if (token.type === ')') {\n                        return false;\n                    }\n                    return handleToken(token, args, source, s);\n                },\n                args,\n                source\n            );\n            const before =\n                args.length && args[0].type === `space` ? stringifyCSSValue(args.shift()!) : ``;\n            const after =\n                args.length && args[args.length - 1].type === `space`\n                    ? stringifyCSSValue(args.pop()!)\n                    : ``;\n            ast.push(\n                call({\n                    value: ident,\n                    start,\n                    end: s.peek(0).end,\n                    args,\n                    before,\n                    after,\n                })\n            );\n        } else if (ident.match(/^inherit|unset|initial$/i)) {\n            // css-wide keyword\n            ast.push(\n                cssWideKeyword({\n                    value: ident as any,\n                    start: token.start,\n                    end: s.peek(0).end,\n                })\n            );\n        } else if (ident.match(/^--/)) {\n            // dashed ident\n            ast.push(\n                dashedIdent({\n                    value: ident,\n                    start: token.start,\n                    end: s.peek(0).end,\n                })\n            );\n        } else if (ident.match(/^[-][a-z]|[a-z]/i)) {\n            // custom ident\n            ast.push(\n                customIdent({\n                    value: ident,\n                    start: token.start,\n                    end: s.peek(0).end,\n                })\n            );\n        } else {\n            ast.push(\n                literal({\n                    value: ident,\n                    start,\n                    end: s.peek(0).end,\n                })\n            );\n        }\n    } else if (type === `string`) {\n        ast.push(\n            string({\n                value,\n                start,\n                end,\n            })\n        );\n    } else if (type === `+`) {\n        if (parseNumber(token, ast, source, s)) {\n            return;\n        }\n        ast.push(\n            literal({\n                value,\n                start,\n                end,\n            })\n        );\n    } else if (type === `#`) {\n        const nextToken = s.next(); // #000000\n        const isValidColor =\n            nextToken.type === `text` &&\n            nextToken.value.match(/^[0-9a-f]{3,8}$/i) &&\n            nextToken.value.length !== 5 &&\n            nextToken.value.length !== 7;\n        if (isValidColor) {\n            ast.push(\n                color({\n                    value: value + nextToken.value,\n                    start,\n                    end: nextToken.end,\n                })\n            );\n        } else {\n            s.back();\n            ast.push(\n                invalid({\n                    value: `#`,\n                    start,\n                    end,\n                })\n            );\n        }\n    } else if (type === '.') {\n        if (parseNumber(token, ast, source, s)) {\n            // number parsed\n        } else {\n            ast.push(\n                literal({\n                    start,\n                    end,\n                    value,\n                })\n            );\n        }\n    } else if (isComment(type)) {\n        ast.push(\n            comment({\n                value,\n                start,\n                end,\n            })\n        );\n    } else if (value.length === 1) {\n        /* catches: , / or any other single char value.\n    not sure about this, might be better to break down \n    any multi value token into single literal nodes.\n    */\n        ast.push(\n            literal({\n                start,\n                end,\n                value,\n            })\n        );\n    } else {\n        ast.push(\n            invalid({\n                value,\n                start,\n                end,\n            })\n        );\n    }\n}\n\n/** parse ident **/\nfunction collectIdent(\n    token: CSSValueToken,\n    _ast: ParseResults,\n    _source: string,\n    s: Seeker<CSSValueToken>\n) {\n    let collectedValue = ``;\n    let pickAmount = 0;\n    let current = token;\n    while (current.type === `text` || current.type === `-`) {\n        collectedValue += current.value;\n        pickAmount++;\n        current = s.peek(pickAmount);\n    }\n    s.index += pickAmount - 1;\n    return collectedValue;\n}\n\n/** parse number **/\nfunction parseNumber(\n    token: CSSValueToken,\n    ast: ParseResults,\n    _source: string,\n    s: Seeker<CSSValueToken>\n) {\n    const { value, start } = token;\n    let startMatch = isStartOfNumber(value);\n    if (!startMatch) {\n        return false;\n    }\n    let [numberValue, numberUnit] = startMatch;\n    // check number is a valid full number (e.g. 5em -> [5e, m])\n    if (numberUnit && !isNumber(numberValue)) {\n        const fullNumberMatch = startWithValidNumber(value);\n        if (!fullNumberMatch) {\n            // token is not a valid number: bail out\n            return;\n        }\n        // token is number with a unit\n        [numberValue, numberUnit] = fullNumberMatch;\n    }\n    let peekCount = 1;\n    if (!numberUnit) {\n        // collect potential extra number parts\n        let nextToken = s.peek(peekCount);\n        while (\n            nextToken.type === `-` ||\n            nextToken.type === `+` ||\n            nextToken.type === `.` ||\n            nextToken.type === `%` ||\n            nextToken.type === `text`\n        ) {\n            const nextValue = numberValue + nextToken.value;\n            // const validNumber = isNumber(nextValue);\n            startMatch = isStartOfNumber(nextValue);\n            if (!startMatch) {\n                if (!isNumber(numberValue)) {\n                    // doesn't amount to a number: bail out\n                    return;\n                }\n                // collected a number: stop collection\n                peekCount--;\n                break;\n            }\n            //\n            peekCount++;\n            const [matchedNumber, leftover] = startMatch;\n            numberValue = matchedNumber;\n            if (leftover) {\n                // leftover must be unit: no more number to collect\n                numberUnit = leftover;\n                break;\n            }\n            nextToken = s.peek(peekCount);\n        }\n        // check final collected number\n        if (!isNumber(numberValue)) {\n            // check for partial initial number (e.g 5e with m as unit)\n            const fullNumberMatch = startWithValidNumber(numberValue + numberUnit);\n            if (!fullNumberMatch) {\n                return;\n            }\n            [numberValue, numberUnit] = fullNumberMatch;\n        }\n        // forward index by the tokens used for number value\n        s.index += peekCount - 1;\n        // take potential unit\n        if (!numberUnit && s.peek().type === `text`) {\n            numberUnit = s.next().value;\n        }\n    }\n    const isInteger = numberValue.match(integerRegExp);\n    // add to ast\n    if (numberUnit) {\n        const nodeType =\n            knownUnits[numberUnit.toLowerCase() as keyof typeof knownUnits] || unknownUnit;\n        ast.push(\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            nodeType({\n                value: numberValue,\n                unit: numberUnit,\n                integer: !!isInteger,\n                start,\n                end: s.peek(0).end,\n            } as any)\n        );\n    } else {\n        const nodeType = isInteger ? integer : number;\n        ast.push(\n            nodeType({\n                value: numberValue,\n                start,\n                end: s.peek(0).end,\n            })\n        );\n    }\n    return true;\n}\nconst knownUnits = {\n    '%': percentage,\n    fr: flex,\n    ...lengthValidUnits.reduce((units, unit) => {\n        units[unit] = length;\n        return units;\n    }, {} as Record<(typeof lengthValidUnits)[number], typeof length>),\n    ...angleValidUnits.reduce((units, unit) => {\n        units[unit] = angle;\n        return units;\n    }, {} as Record<(typeof angleValidUnits)[number], typeof angle>),\n    ...timeValidUnits.reduce((units, unit) => {\n        units[unit] = time;\n        return units;\n    }, {} as Record<(typeof timeValidUnits)[number], typeof time>),\n    ...frequencyValidUnits.reduce((units, unit) => {\n        units[unit] = frequency;\n        return units;\n    }, {} as Record<(typeof frequencyValidUnits)[number], typeof frequency>),\n    ...resolutionValidUnits.reduce((units, unit) => {\n        units[unit] = resolution;\n        return units;\n    }, {} as Record<(typeof resolutionValidUnits)[number], typeof resolution>),\n} as const;\n\nconst NumberRegExp = /^[-+]?(\\d+\\.?\\d*|\\d*\\.?\\d+)(e[-+]?\\d+)?/i;\nconst integerRegExp = /^[-+]?\\d+$/i; // one or more decimal digits 0 through 9 (preceded by -/+ ) - https://www.w3.org/TR/css-values-4/#integer-value\nconst validNumberRegex = [\n    /[-+]?(\\d+\\.?\\d*|\\d*\\.?\\d+)(e[-+]?\\d*)?/, // float+exponential\n    /[-+]?\\d+(e[-+]?\\d*)?/, // int+exponential\n    /[-+]/, // sign\n    /[-+]?\\./, // optional-sign+dot\n]\n    .map((r) => r.source)\n    .join(`|`); // join with one-of (\"or\")\n\n/**\n * Return true if the input is a valid number\n * for Example:\n * \"5\", \"+5\", \"-5\", \"55\", \"5.\", \"5.5\", \"5e5\", \"5E5\", \"5.5e55\", \"5e-5\", \"5e+5\"\n * @param value string to test\n * @returns true if value is valid as a number\n */\nfunction isNumber(value: string) {\n    const match = value.match(NumberRegExp);\n    const numVal = match?.[0];\n    return !!numVal && numVal === value;\n}\nfunction isStartOfNumber(value: string): false | [number: string, leftover: string] {\n    const match = value.match(new RegExp(`^(` + validNumberRegex + `)`, `i`));\n    const numVal = match?.[0];\n    return numVal ? [numVal, value.substring(numVal.length)] : false;\n}\nfunction startWithValidNumber(value: string): false | [number: string, leftover: string] {\n    const match = value.match(NumberRegExp);\n    const numVal = match?.[0];\n    return numVal ? [numVal, value.substring(numVal.length)] : false;\n}\n", "import type { CSSValueAST, BuildVarAst } from './ast-types';\nimport type { ParseResults } from './value-parser';\n\nexport function defineProperty<\n    FORMATS extends string,\n    CLASSIFICATIONS extends string,\n    TOP_COMMA extends boolean = false\n>(_config: {\n    name: string;\n    syntax: string;\n    subSyntax?: Record<string, string>;\n    subProperties?: Record<string, ReturnType<typeof defineProperty>>;\n    topLevelCommaSeparation?: TOP_COMMA;\n    formats?: Record<FORMATS, string>;\n    classifications?: Record<\n        CLASSIFICATIONS,\n        | MatchClassification // ToDo: optional default value / required\n        | (TOP_COMMA extends true\n              ? {\n                    match?: MatchClassification;\n                    syntax?: string;\n                    inTopLevelIndex?: (index: number, total: number) => boolean;\n                    cssProperty?: ReturnType<typeof defineProperty>;\n                }\n              : {\n                    match?: MatchClassification;\n                    syntax?: string;\n                    cssProperty?: ReturnType<typeof defineProperty>;\n                })\n    >;\n}): {\n    validate: (ast: CSSValueAST<any>[], options?: ActionParams) => [...errors: string[]];\n    getFormat: (ast: CSSValueAST<any>[], options?: ActionParams) => FORMATS;\n    classify: (\n        ast: CSSValueAST<any>[],\n        options?: ActionParams & { deep?: boolean; ignoreComments?: boolean }\n    ) => TOP_COMMA extends true\n        ? Record<CLASSIFICATIONS, Classification>[]\n        : Record<CLASSIFICATIONS, Classification>;\n} {\n    return {} as any;\n}\n\ndefineProperty.errors = {\n    unexpectedType: (node: CSSValueAST<any>, expectedType: string) =>\n        `expected to get ${expectedType}, but got ${node.type}`,\n    unexpectedComma: () => `unexpected comma`,\n};\n\nexport interface ActionParams {\n    cssVars?: Record<string, CSSValueAST<any>[]>;\n    resolveBuildVar?: (node: BuildVarAst) => CSSValueAST<any>[];\n}\n\ntype MatchClassification = (\n    node: CSSValueAST<any>,\n    info: {\n        index: number;\n        indexOfType: number;\n        amountOfType: number;\n    }\n) => boolean;\n\ntype Classification = {\n    value: CSSValueAST<any>[];\n    resolved: { origin: ParseResults; nodes: CSSValueAST<any>[] }[][]; // ToDo: should probably be more detailed... need to see cases\n    isProperty: boolean;\n};\n", "import { defineProperty } from '../define-property';\n\nexport const background = defineProperty({\n    name: `background`,\n    syntax: `[ <bg-layer> , ]* <final-bg-layer>`,\n    subSyntax: {\n        '<bg-layer>': `<bg-image> || <bg-position> [ / <bg-size> ]? || <repeat-style> || <attachment> || <box> || <box>`,\n        '<final-bg-layer>': `<'background-color'> || <bg-image> || <bg-position> [ / <bg-size> ]? || <repeat-style> || <attachment> || <box> || <box>`,\n    },\n    subProperties: {\n        // ToDo: define and add\n    },\n    topLevelCommaSeparation: true,\n    classifications: {\n        'background-image': () => {\n            return false;\n        },\n        'background-position': () => {\n            return false;\n        },\n        'background-size': {\n            syntax: `<bg-size>`,\n            match: () => true,\n        },\n        'background-repeat': () => {\n            return false;\n        },\n        'background-origin': () => {\n            return false;\n        },\n        'background-clip': () => {\n            return false;\n        },\n        'background-attachment': () => {\n            return false;\n        },\n        'background-color': {\n            inTopLevelIndex: (index, total) => {\n                return index === total - 1;\n            },\n            match: () => {\n                return false;\n            },\n        },\n    },\n});\n", "import { defineProperty } from '../define-property';\n\nconst subMarginPlacements: Record<\n    'top' | 'right' | 'bottom' | 'left',\n    [single: number, two: number, three: number, four: number]\n> = {\n    top: [0, 1, 0, 0],\n    left: [0, 0, 1, 3],\n    bottom: [0, 1, 2, 2],\n    right: [0, 0, 1, 1],\n};\n\nexport const margin = defineProperty({\n    name: `margin`,\n    syntax: `<length>{1,4}`,\n    formats: {\n        all: `<length>`,\n        'horizontal-vertical': `<length><length>`,\n        'top-horizontal-bottom': `<length><length><length>`,\n        'top-right-bottom-left': `<length><length><length><length>`,\n    },\n    classifications: {\n        'margin-top': (_node, { amountOfType, indexOfType }) => {\n            return subMarginPlacements.top[amountOfType - 1] === indexOfType;\n        },\n        'margin-right': (_node, { amountOfType, indexOfType }) => {\n            return subMarginPlacements.right[amountOfType - 1] === indexOfType;\n        },\n        'margin-bottom': (_node, { amountOfType, indexOfType }) => {\n            return subMarginPlacements.bottom[amountOfType - 1] === indexOfType;\n        },\n        'margin-left': (_node, { amountOfType, indexOfType }) => {\n            return subMarginPlacements.left[amountOfType - 1] === indexOfType;\n        },\n    },\n});\n", "import { tokenize, createToken, Token, Seeker, getText, last } from '@tokey/core';\n\ntype RangeMultipliers = '!' | '?' | '+' | '*';\n\ntype Delimiters =\n    | '<'\n    | '>'\n    | '['\n    | ']'\n    | ','\n    | '/'\n    | '|'\n    | '&'\n    | '#'\n    | '('\n    | ')'\n    | '{'\n    | '}'\n    | RangeMultipliers;\n\n/**\n * Add comments\n * allOf, oneOf, anyOf\n */\n\nconst isDelimiter = (char: string) =>\n    char === '<' ||\n    char === '>' ||\n    char === '[' ||\n    char === ']' ||\n    char === ',' ||\n    char === '/' ||\n    char === '|' ||\n    char === '&' ||\n    char === '#' ||\n    char === '(' ||\n    char === ')' ||\n    char === '{' ||\n    char === '}' ||\n    char === '?' ||\n    char === '!' ||\n    char === '*' ||\n    char === '+';\n\ntype ValueSyntaxToken = Token<'space' | 'text' | Delimiters>;\n\nexport const isWhitespace = (char: string) =>\n    char === ' ' || char === `\\t` || char === `\\r` || char === '\\n' || char === '\\f';\n\nexport function parseValueSyntax(source: string) {\n    return parseTokens(\n        tokenize<ValueSyntaxToken>(source, {\n            isDelimiter,\n            isWhitespace,\n            createToken,\n            isStringDelimiter: () => false,\n            shouldAddToken: () => true,\n            getCommentStartType: () => '',\n            isCommentEnd: () => false,\n            getUnclosedComment: () => '',\n        }),\n        source\n    );\n}\n\ntype Range = [min: number, max: number];\n\ninterface Multipliers {\n    range?: Range;\n    list?: boolean;\n}\n\ninterface DataTypeNode {\n    type: 'data-type';\n    name: string;\n    range?: Range;\n    multipliers?: Multipliers;\n}\n\ninterface PropertyNode {\n    type: 'property';\n    name: string;\n    range?: Range;\n    multipliers?: Multipliers;\n}\n\ninterface LiteralNode {\n    type: 'literal';\n    name: string;\n    enclosed: boolean;\n    multipliers?: Multipliers;\n}\n\ninterface KeywordNode {\n    type: 'keyword';\n    name: string;\n    multipliers?: Multipliers;\n}\n\ninterface CombinatorGroup {\n    nodes: ValueSyntaxAstNode[];\n}\n\ninterface JuxtaposingNode extends CombinatorGroup {\n    type: 'juxtaposing';\n}\n\ninterface DoubleAmpersandNode extends CombinatorGroup {\n    type: '&&';\n}\n\ninterface DoubleBarNode extends CombinatorGroup {\n    type: '||';\n}\n\ninterface BarNode extends CombinatorGroup {\n    type: '|';\n}\n\ninterface GroupNode extends CombinatorGroup {\n    type: 'group';\n    multipliers?: Multipliers;\n}\n\ntype Combinators = GroupNode | JuxtaposingNode | DoubleAmpersandNode | DoubleBarNode | BarNode;\n\ntype Components = DataTypeNode | PropertyNode;\nexport type ValueSyntaxAstNode = Components | KeywordNode | LiteralNode | Combinators;\n\nexport function literal(name: string, enclosed = false, multipliers?: Multipliers): LiteralNode {\n    return { type: 'literal', name, enclosed, multipliers };\n}\n\nexport function keyword(name: string, multipliers?: Multipliers): KeywordNode {\n    return { type: 'keyword', name, multipliers };\n}\n\nexport function property(name: string, range?: Range, multipliers?: Multipliers): PropertyNode {\n    return { type: 'property', name, range, multipliers };\n}\n\nexport function dataType(name: string, range?: Range, multipliers?: Multipliers): DataTypeNode {\n    return { type: 'data-type', name, range, multipliers };\n}\n\nexport function group(nodes: ValueSyntaxAstNode[], multipliers?: Multipliers): GroupNode {\n    return { type: 'group', nodes, multipliers };\n}\n\nexport function juxtaposing(nodes: ValueSyntaxAstNode[]): JuxtaposingNode {\n    return { type: 'juxtaposing', nodes };\n}\n\nexport function bar(nodes: ValueSyntaxAstNode[]): BarNode {\n    return { type: '|', nodes };\n}\n\nexport function doubleAmpersand(nodes: ValueSyntaxAstNode[]): DoubleAmpersandNode {\n    return { type: '&&', nodes };\n}\n\nexport function doubleBar(nodes: ValueSyntaxAstNode[]): DoubleBarNode {\n    return { type: '||', nodes };\n}\n\ninterface ParsingContext {\n    ast: ValueSyntaxAstNode[];\n}\n\nfunction parseTokens(tokens: ValueSyntaxToken[], source: string) {\n    const handleToken = (\n        token: ValueSyntaxToken,\n        { ast }: ParsingContext,\n        _source: string,\n        s: Seeker<ValueSyntaxToken>\n    ) => {\n        if (token.type === '<') {\n            let closed = false;\n            s.eat('space');\n            const nameBlock = s.run<ValueSyntaxToken[]>(\n                (node, ast) => {\n                    const { type } = node;\n                    if (type === 'space' || type === '[' || type === '>') {\n                        return false;\n                    } else {\n                        ast.push(node);\n                        return;\n                    }\n                },\n                [],\n                _source\n            );\n            if (nameBlock.length === 0) {\n                throw new Error('missing data type name');\n            }\n            s.back();\n            const name = getText(nameBlock, undefined, undefined, source);\n\n            const type = getLiteralValueType(name);\n            let range: Range | undefined;\n            if (type === 'invalid') {\n                throw new Error('missing data type name');\n            } else {\n                const t = s.eat('space').next();\n                if (t.type === '>') {\n                    closed = true;\n                } else if (t.type === '[') {\n                    const min = s.eat('space').take('text');\n                    const sep = s.eat('space').take(',');\n                    const max = s.eat('space').take('text');\n                    const end = s.eat('space').take(']');\n                    if (min && sep && max && end) {\n                        range = [parseNumber(min.value), parseNumber(max.value)];\n                    } else {\n                        throw new Error('Invalid range');\n                    }\n                    const t = s.eat('space').take('>');\n                    if (t) {\n                        closed = true;\n                    }\n                }\n            }\n            if (!closed) {\n                throw new Error('missing \">\"');\n            }\n            if (type === 'quoted') {\n                ast.push(property(name.slice(1, -1), range));\n            } else {\n                ast.push(dataType(name, range));\n            }\n        } else if (token.type === '[') {\n            const res = s.run(handleToken, { ast: [] }, source);\n            applyPrecedence(res.ast);\n            ast.push(group(res.ast));\n        } else if (token.type === ']') {\n            return false;\n        } else if (token.type === 'text') {\n            const t = getLiteralValueType(token.value);\n            if (t === 'invalid') {\n                if (token.value.startsWith(\"'\")) {\n                    const tokens = s.run(\n                        (token, ast) => {\n                            ast.push(token);\n                            return token.value.endsWith(\"'\") ? false : undefined;\n                        },\n                        [token] as ValueSyntaxToken[],\n                        source\n                    );\n                    if (tokens.length <= 2) {\n                        throw new Error('unclosed or empty literal');\n                    } else {\n                        ast.push(\n                            literal(\n                                getText(tokens, undefined, undefined, source).slice(1, -1),\n                                true\n                            )\n                        );\n                    }\n                } else {\n                    throw new Error('invalid literal');\n                }\n            } else if (t === 'quoted') {\n                ast.push(literal(token.value.slice(1, -1), true));\n            } else {\n                ast.push(keyword(token.value));\n            }\n        } else if (\n            token.type === ',' ||\n            token.type === '/' ||\n            token.type === '(' ||\n            token.type === ')'\n        ) {\n            ast.push(literal(token.value));\n        } else if (token.type === 'space') {\n            s.eat('space');\n        } else if (isRangeMultiplier(token)) {\n            const node = lastParsedNode(ast);\n            if (!node || node.type === 'juxtaposing' || isLowLevelGroup(node)) {\n                throw new Error('unexpected modifier');\n            }\n            node.multipliers ??= {};\n            if (node.multipliers.range) {\n                throw new Error('multiple multipliers on same node');\n            }\n            node.multipliers.range = typeToRange(token.type);\n        } else if (token.type === '{') {\n            if (s.peekBack().type === 'space') {\n                ast.push(literal(token.value, false));\n            } else {\n                const node = lastParsedNode(ast);\n\n                if (!node || isLowLevelGroup(node) || node.type === 'juxtaposing') {\n                    throw new Error('unexpected range modifier');\n                }\n\n                const start = s.eat('space').take('text');\n                if (!start) {\n                    throw new Error('missing range start value');\n                }\n                const sep = s.eat('space').take(',');\n                if (sep) {\n                    const end = s.eat('space').take('text');\n                    const close = s.eat('space').take('}');\n                    if (!close) {\n                        throw new Error('missing }');\n                    }\n\n                    node.multipliers ??= {};\n                    if (node.multipliers.range) {\n                        throw new Error('multiple multipliers on same node');\n                    }\n                    node.multipliers.range = [\n                        parseNumber(start.value),\n                        parseNumber(end?.value ?? '\u221E'),\n                    ];\n                } else {\n                    const close = s.eat('space').take('}');\n                    if (!close) {\n                        throw new Error('missing }');\n                    }\n                    node.multipliers ??= {};\n                    if (node.multipliers.range) {\n                        throw new Error('multiple multipliers on same node');\n                    }\n                    node.multipliers.range = [parseNumber(start.value), parseNumber(start.value)];\n                }\n            }\n        } else if (token.type === '#') {\n            const node = lastParsedNode(ast);\n            if (!node || node.type === 'juxtaposing' || isLowLevelGroup(node)) {\n                throw new Error('unexpected list modifier');\n            }\n            node.multipliers ??= {};\n            node.multipliers.list = true;\n        } else if (token.type === '&') {\n            const nextAnd = s.take('&');\n            if (!nextAnd) {\n                throw new Error('missing &');\n            }\n            ast.push(doubleAmpersand([]));\n        } else if (token.type === '|') {\n            ast.push(s.take('|') ? doubleBar([]) : bar([]));\n        } else if (token.type === '}') {\n            ast.push(literal(token.value, false));\n        } else {\n            throw new Error(`UnHandled ${JSON.stringify(token)}`);\n        }\n\n        applyJuxtaposing(ast);\n\n        return;\n    };\n\n    const results = new Seeker(tokens).run<ParsingContext>(handleToken, { ast: [] }, source);\n\n    applyPrecedence(results.ast);\n\n    return results.ast[0];\n}\n\nfunction lastParsedNode(ast: ValueSyntaxAstNode[]) {\n    const node = last(ast);\n    // assume the parse process in juxtaposing on each step\n    return node?.type === 'juxtaposing' ? last(node.nodes) : node;\n}\n\nfunction applyPrecedence(ast: ValueSyntaxAstNode[]) {\n    const order = ['&&', '||', '|'] as const;\n\n    for (let i = 0; i < order.length; i++) {\n        const type = order[i];\n        for (let j = 0; j < ast.length; j++) {\n            const node = ast[j];\n            if (node.type === type) {\n                const before = ast[j - 1];\n                const after = ast[j + 1];\n                if (!before) {\n                    throw new Error(`missing node before ${type}`);\n                }\n                if (!after) {\n                    throw new Error(`missing node after ${type}`);\n                }\n                if (after.type === type) {\n                    throw new Error('invalid grouping');\n                }\n                if (before.type === type) {\n                    before.nodes.push(after);\n                    ast.splice(j - 1, 3, before);\n                } else {\n                    node.nodes.push(before, after);\n                    ast.splice(j - 1, 3, node);\n                }\n                j--;\n            }\n        }\n    }\n\n    if (ast.length > 1) {\n        throw new Error('could not applyPrecedence');\n    }\n}\n\nfunction parseNumber(value: string): number {\n    if (value === '\u221E') {\n        return Infinity;\n    }\n    if (value === `-\u221E`) {\n        return -Infinity;\n    }\n    // TODO: check for valid number, NaN, more...\n    return parseFloat(value);\n}\n\nfunction isRangeMultiplier(token: ValueSyntaxToken): token is Token<RangeMultipliers> {\n    const { type } = token;\n    return type === '!' || type === '?' || type === '+' || type === '*';\n}\n\nfunction typeToRange(type: RangeMultipliers): [number, number] {\n    switch (type) {\n        case '!':\n            return [1, 1];\n        case '*':\n            return [0, Infinity];\n        case '+':\n            return [1, Infinity];\n        case '?':\n            return [0, 1];\n    }\n}\n\nfunction applyJuxtaposing(ast: ValueSyntaxAstNode[]) {\n    if (ast.length > 1) {\n        const last = ast[ast.length - 1];\n        const prev = ast[ast.length - 2];\n        if (prev.type === 'juxtaposing' && !isLowLevelGroup(last)) {\n            ast.length = ast.length - 1;\n            prev.nodes.push(last);\n        } else if (!isLowLevelGroup(prev) && !isLowLevelGroup(last)) {\n            ast.splice(ast.length - 2, 2, juxtaposing([prev, last]));\n        }\n    }\n}\n\nfunction isLowLevelGroup(\n    node: ValueSyntaxAstNode\n): node is DoubleBarNode | DoubleAmpersandNode | BarNode {\n    const { type } = node;\n    return type === '&&' || type === '|' || type === '||';\n}\n\nexport function stringify(node: ValueSyntaxAstNode): string {\n    const { type } = node;\n    if ('multipliers' in node) {\n        throw new Error('TODO: multipliers');\n    }\n    if (type === 'property') {\n        return `<'${node.name}'${node.range ? ` [${node.range}]` : ''}>`;\n    } else if (type === 'data-type') {\n        return `<${node.name}${node.range ? ` [${node.range}]` : ''}>`;\n    } else if (type === 'literal') {\n        return node.enclosed ? `'${node.name}'` : `${node.name}`;\n    } else if (type === 'group') {\n        return `[ ${node.nodes.map((child) => stringify(child)).join('')} ]`;\n    } else if (type === '&&') {\n        return node.nodes.map((child) => stringify(child)).join(' && ');\n    } else if (type === '||') {\n        return node.nodes.map((child) => stringify(child)).join(' || ');\n    } else if (type === '|') {\n        return node.nodes.map((child) => stringify(child)).join(' | ');\n    } else if (type === 'juxtaposing') {\n        return node.nodes.map((child) => stringify(child)).join(' ');\n    } else if (type === 'keyword') {\n        return node.name;\n    } else {\n        throw new Error(`missing stringify for node ${JSON.stringify(node)}`);\n    }\n}\n\nfunction getLiteralValueType(value: string) {\n    if (value.startsWith(\"'\")) {\n        if (value.endsWith(\"'\") && value.length > 1) {\n            return 'quoted';\n        } else {\n            return 'invalid';\n        }\n    } else {\n        return 'literal';\n    }\n}\n", "export * from './ast-types';\nexport { parseCSSValue } from './value-parser';\nexport { stringifyCSSValue } from './value-stringify';\nexport { defineProperty } from './define-property';\n// properties\nexport { background } from './properties/background';\nexport { margin } from './properties/margin';\n// syntax\nexport { parseValueSyntax } from './value-syntax-parser';\n", "'use strict'\n\nmodule.exports = function vendorPrefixes () {\n  return [\n    '-ms-', 'mso-', // Microsoft\n    '-moz-',\t      // Mozilla\n    '-o-', '-xv-',  // Opera Software\n    '-atsc-',       //\tAdvanced Television Standards Committee\n    '-wap-',        //\tThe WAP Forum\n    '-khtml-',      //\tKDE\n    '-webkit-',     //\tApple\n    'prince-',      //\tYesLogic\n    '-ah-',         //\tAntenna House\n    '-hp-',         //\tHewlett Packard\n    '-ro-',         //\tReal Objects\n    '-rim-',        //\tResearch In Motion\n    '-tc-'          //\tTallComponents\n  ]\n}\n", "const vendorPrefixes = require('vendor-prefixes')\n\nmodule.exports = property => {\n  if (typeof property !== 'string') {\n    throw new TypeError('is-vendor-prefixed expected a string')\n  }\n\n  const regexForPrefixes = new RegExp(\n    '^(' + vendorPrefixes().join('|') + ')([a-z-]+)$',\n    'i'\n  )\n  return regexForPrefixes.test(property)\n}\n", "export = {\n    _extensions: {},\n};\n", "export type processFn<T> = (fullpath: string, content: string) => T;\n\nexport interface CacheItem<T> {\n    value: T;\n    content: string;\n}\n\nexport interface MinimalFS {\n    statSync: (filePath: string) => { mtime: Date };\n    readFileSync: (filePath: string, encoding: 'utf8') => string;\n    readlinkSync: (filePath: string) => string;\n}\n\nexport interface FileProcessor<T> {\n    process: (filePath: string, invalidateCache?: boolean) => T;\n    add: (filePath: string, value: T) => void;\n    processContent: (content: string, filePath: string) => T;\n    cache: Record<string, CacheItem<T>>;\n    postProcessors: Array<(value: T, path: string) => T>;\n}\n\nexport function cachedProcessFile<T = any>(\n    processor: processFn<T>,\n    readFileSync: MinimalFS['readFileSync'],\n    postProcessors: Array<(value: T, path: string) => T> = [],\n    cache: { [key: string]: CacheItem<T> } = {}\n): FileProcessor<T> {\n    function process(filePath: string, invalidateCache = false) {\n        const content = readFileSync(filePath, 'utf8');\n        const cached = cache[filePath];\n        if (invalidateCache || !cached || (cached && cached.content !== content)) {\n            cache[filePath] = {\n                value: processContent(content, filePath),\n                content,\n            };\n        }\n        return cache[filePath].value;\n    }\n\n    function processContent(content: string, filePath: string): T {\n        return postProcessors.reduce<T>(\n            (value, postProcessor) => postProcessor(value, filePath),\n            processor(filePath, content)\n        );\n    }\n\n    function add(filePath: string, value: T) {\n        let content;\n        try {\n            content = readFileSync(filePath, 'utf8');\n        } catch (e) {\n            content = '';\n        }\n        cache[filePath] = {\n            value,\n            content,\n        };\n    }\n\n    return {\n        processContent,\n        postProcessors,\n        cache,\n        process,\n        add,\n    };\n}\n", "import postcss from './postcss.js'\n\nexport default postcss\n\nexport const stringify = postcss.stringify\nexport const fromJSON = postcss.fromJSON\nexport const plugin = postcss.plugin\nexport const parse = postcss.parse\nexport const list = postcss.list\n\nexport const document = postcss.document\nexport const comment = postcss.comment\nexport const atRule = postcss.atRule\nexport const rule = postcss.rule\nexport const decl = postcss.decl\nexport const root = postcss.root\n\nexport const CssSyntaxError = postcss.CssSyntaxError\nexport const Declaration = postcss.Declaration\nexport const Container = postcss.Container\nexport const Processor = postcss.Processor\nexport const Document = postcss.Document\nexport const Comment = postcss.Comment\nexport const Warning = postcss.Warning\nexport const AtRule = postcss.AtRule\nexport const Result = postcss.Result\nexport const Input = postcss.Input\nexport const Rule = postcss.Rule\nexport const Root = postcss.Root\nexport const Node = postcss.Node\n", "import postcss, { ProcessOptions, Root, parse as cssParse } from 'postcss';\nimport postcssNested from 'postcss-nested';\nimport postcssJS from 'postcss-js';\nimport safeParser from 'postcss-safe-parser';\n\nexport type CSSObject = any & object;\n\nconst processor = postcss([postcssNested()]);\n\nexport function cssObjectToAst(cssObject: CSSObject, sourceFile = '') {\n    const r = processor.process(cssObject, { from: sourceFile, parser: postcssJS });\n    return r.root.type === 'document' ? r.root.nodes[0] : r.root;\n}\n\nexport type CssParser = typeof safeParse;\n\nexport function safeParse(css: string, options: ProcessOptions = { from: 'style.st.css' }): Root {\n    return safeParser(css, options);\n}\n\nexport { cssParse };\n", "import index from './index.js'\n\nexport default index\n\nexport const objectify = index.objectify\nexport const parse = index.parse\nexport const async = index.async\nexport const sync = index.sync\n", "import type * as postcss from 'postcss';\n\nexport type DiagnosticSeverity = 'error' | 'warning' | 'info';\n\nexport interface DiagnosticBase {\n    severity: DiagnosticSeverity;\n    message: string;\n    code: string;\n}\n\nexport interface DiagnosticContext {\n    node: postcss.Node;\n    word?: string;\n    filePath?: string;\n}\n\nexport interface DiagnosticOptions {\n    word?: string;\n}\n\nexport type Diagnostic = DiagnosticBase & DiagnosticContext;\n\nexport class Diagnostics {\n    constructor(public reports: Diagnostic[] = []) {}\n    public report(diagnostic: DiagnosticBase, context: DiagnosticContext) {\n        const node = context.node;\n        this.reports.push({\n            filePath: node.source?.input.from,\n            ...diagnostic,\n            ...context,\n        });\n    }\n}\n\nexport function createDiagnosticReporter<T extends any[]>(\n    code: string,\n    severity: DiagnosticSeverity,\n    message: (...args: T) => string\n) {\n    const func = (...args: T): DiagnosticBase => {\n        return { code, severity, message: message(...args) };\n    };\n\n    func.code = code;\n    func.severity = severity;\n\n    return func;\n}\n", "// MDN reference: https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-classes\nexport const nativePseudoClasses = [\n    'active',\n    'any',\n    'any-link',\n    'checked',\n    'default',\n    'defined',\n    'dir',\n    'disabled',\n    'empty',\n    'enabled',\n    'first',\n    'first-child',\n    'first-of-type',\n    'fullscreen',\n    'focus',\n    'focus-within',\n    'focus-visible',\n    'has',\n    'hover',\n    'indeterminate',\n    'in-range',\n    'invalid',\n    'is',\n    'lang',\n    'last-child',\n    'last-of-type',\n    'left',\n    'link',\n    'not',\n    'nth-child',\n    'nth-last-child',\n    'nth-last-of-type',\n    'nth-of-type',\n    'only-child',\n    'only-of-type',\n    'optional',\n    'out-of-range',\n    'placeholder-shown',\n    'read-only',\n    'read-write',\n    'required',\n    'right',\n    'root',\n    'scope',\n    'target',\n    'valid',\n    'visited',\n    'where',\n];\n\nexport const CSSWideKeywords = ['initial', 'inherit', 'unset'];\n\n/**\n * list names of functional pseudo classes\n * - cannot be overridden by custom states\n * - might contain nested selectors\n */\nexport const reservedFunctionalPseudoClasses = [\n    `not`,\n    `any`,\n    `matches`,\n    `is`,\n    `where`,\n    `has`,\n    `host`,\n    `host-context`,\n    `nth-child`,\n    `nth-last-child`,\n    `nth-of-type`,\n    `nth-last-of-type`,\n    // not native\n    `global`,\n    `local`,\n];\nexport const knownPseudoClassesWithNestedSelectors = reservedFunctionalPseudoClasses.filter(\n    (name) => {\n        switch (name) {\n            case `global`:\n            case `local`:\n            case `nth-of-type`:\n            case `nth-last-of-type`:\n                return false;\n        }\n        return true;\n    }\n);\n\nexport const nativePseudoElements = [\n    'after',\n    'backdrop',\n    'before',\n    'cue',\n    'first-letter',\n    'first-line',\n    'grammar-error',\n    'marker',\n    'placeholder',\n    'selection',\n    'slotted',\n    'spelling-error',\n];\n\nexport const nativeFunctionsDic: Record<string, { preserveQuotes: boolean }> = {\n    annotation: { preserveQuotes: false },\n    attr: { preserveQuotes: false },\n    blur: { preserveQuotes: false },\n    brightness: { preserveQuotes: false },\n    calc: { preserveQuotes: false },\n    'character-variant': { preserveQuotes: false },\n    circle: { preserveQuotes: false },\n    clamp: { preserveQuotes: false },\n    'conic-gradient': { preserveQuotes: false },\n    constant: { preserveQuotes: false },\n    contrast: { preserveQuotes: false },\n    counter: { preserveQuotes: false },\n    counters: { preserveQuotes: false },\n    'cubic-bezier': { preserveQuotes: false },\n    'drop-shadow': { preserveQuotes: false },\n    ellipse: { preserveQuotes: false },\n    env: { preserveQuotes: false },\n    'fit-content': { preserveQuotes: false },\n    format: { preserveQuotes: false },\n    grayscale: { preserveQuotes: false },\n    hsl: { preserveQuotes: false },\n    hsla: { preserveQuotes: false },\n    'hue-rotate': { preserveQuotes: false },\n    hwb: { preserveQuotes: false },\n    image: { preserveQuotes: false },\n    inset: { preserveQuotes: false },\n    invert: { preserveQuotes: false },\n    leader: { preserveQuotes: false },\n    'linear-gradient': { preserveQuotes: false },\n    local: { preserveQuotes: false },\n    matrix: { preserveQuotes: false },\n    matrix3d: { preserveQuotes: false },\n    max: { preserveQuotes: false },\n    min: { preserveQuotes: false },\n    minmax: { preserveQuotes: false },\n    opacity: { preserveQuotes: false },\n    ornaments: { preserveQuotes: false },\n    paint: { preserveQuotes: false },\n    path: { preserveQuotes: true },\n    perspective: { preserveQuotes: false },\n    polygon: { preserveQuotes: false },\n    'radial-gradient': { preserveQuotes: false },\n    rect: { preserveQuotes: false },\n    repeat: { preserveQuotes: false },\n    'repeating-linear-gradient': { preserveQuotes: false },\n    'repeating-radial-gradient': { preserveQuotes: false },\n    'repeating-conic-gradient': { preserveQuotes: false },\n    rgb: { preserveQuotes: false },\n    rgba: { preserveQuotes: false },\n    rotate: { preserveQuotes: false },\n    rotate3d: { preserveQuotes: false },\n    rotateX: { preserveQuotes: false },\n    rotateY: { preserveQuotes: false },\n    rotateZ: { preserveQuotes: false },\n    saturate: { preserveQuotes: false },\n    scale: { preserveQuotes: false },\n    scale3d: { preserveQuotes: false },\n    scaleX: { preserveQuotes: false },\n    scaleY: { preserveQuotes: false },\n    scaleZ: { preserveQuotes: false },\n    scroll: { preserveQuotes: false },\n    sepia: { preserveQuotes: false },\n    skew: { preserveQuotes: false },\n    skewX: { preserveQuotes: false },\n    skewY: { preserveQuotes: false },\n    steps: { preserveQuotes: false },\n    styleset: { preserveQuotes: false },\n    stylistic: { preserveQuotes: false },\n    swash: { preserveQuotes: false },\n    symbols: { preserveQuotes: false },\n    translate: { preserveQuotes: false },\n    translate3d: { preserveQuotes: false },\n    translateX: { preserveQuotes: false },\n    translateY: { preserveQuotes: false },\n    translateZ: { preserveQuotes: false },\n    url: { preserveQuotes: false },\n    var: { preserveQuotes: false },\n    color: { preserveQuotes: true },\n    'color-mix': { preserveQuotes: true },\n    lab: { preserveQuotes: true },\n    oklab: { preserveQuotes: true },\n    lch: { preserveQuotes: true },\n    oklch: { preserveQuotes: true },\n    supports: { preserveQuotes: true },\n    anchor: { preserveQuotes: true },\n    selector: { preserveQuotes: true /* TODO:transform the nested selector */ },\n    style: { preserveQuotes: true /* TODO: transform the dashed ident property */ },\n    'image-set': { preserveQuotes: true },\n    sin: { preserveQuotes: true },\n    cos: { preserveQuotes: true },\n    tan: { preserveQuotes: true },\n    asin: { preserveQuotes: true },\n    acos: { preserveQuotes: true },\n    atan: { preserveQuotes: true },\n    atan2: { preserveQuotes: true },\n    pow: { preserveQuotes: true },\n    sqrt: { preserveQuotes: true },\n    hypot: { preserveQuotes: true },\n    log: { preserveQuotes: true },\n    exp: { preserveQuotes: true },\n    abs: { preserveQuotes: true },\n    sign: { preserveQuotes: true },\n};\n", "import { isAbsolute } from 'path';\nimport * as postcss from 'postcss';\nimport { createDiagnosticReporter, Diagnostics } from './diagnostics';\nimport type { ImportSymbol, StylableSymbol } from './features';\nimport { isChildOfAtRule, stMixinMarker, isStMixinMarker } from './helpers/rule';\nimport { scopeNestedSelector, parseSelectorWithCache } from './helpers/selector';\n\nexport function isValidDeclaration(decl: postcss.Declaration) {\n    return typeof decl.value === 'string';\n}\n\nexport const utilDiagnostics = {\n    INVALID_MERGE_OF: createDiagnosticReporter(\n        '14001',\n        'error',\n        (mergeValue: string) => `invalid merge of: \\n\"${mergeValue}\"`\n    ),\n    INVALID_RECURSIVE_MIXIN: createDiagnosticReporter(\n        '10010',\n        'error',\n        () => `invalid recursive mixin`\n    ),\n};\n\n// ToDo: move to helpers/mixin\nexport function mergeRules(\n    mixinAst: postcss.Root,\n    rule: postcss.Rule,\n    mixinDecl: postcss.Declaration,\n    report: Diagnostics,\n    useNestingAsAnchor: boolean\n) {\n    let mixinRoot: postcss.Rule | null | 'NoRoot' = null;\n    const nestedInKeyframes = isChildOfAtRule(rule, `keyframes`);\n    const anchorSelector = useNestingAsAnchor ? '&' : '[' + stMixinMarker + ']';\n    const anchorNodeCheck = useNestingAsAnchor ? undefined : isStMixinMarker;\n    mixinAst.walkRules((mixinRule: postcss.Rule) => {\n        if (isChildOfAtRule(mixinRule, 'keyframes')) {\n            return;\n        }\n        if (mixinRule.selector === anchorSelector && !mixinRoot) {\n            if (mixinRule.parent === mixinAst) {\n                mixinRoot = mixinRule;\n            } else {\n                const { selector } = scopeNestedSelector(\n                    parseSelectorWithCache(rule.selector),\n                    parseSelectorWithCache(mixinRule.selector),\n                    false,\n                    anchorNodeCheck\n                );\n                mixinRoot = 'NoRoot';\n                mixinRule.selector = selector;\n            }\n        } else if (!isChildOfMixinRoot(mixinRule, mixinRoot)) {\n            // scope to mixin target if not already scoped by parent\n            const { selector } = scopeNestedSelector(\n                parseSelectorWithCache(rule.selector),\n                parseSelectorWithCache(mixinRule.selector),\n                false,\n                anchorNodeCheck\n            );\n            mixinRule.selector = selector;\n        } else if (mixinRule.selector.includes(anchorSelector)) {\n            // report invalid nested mixin\n            mixinRule.selector = mixinRule.selector.split(anchorSelector).join('&');\n            report?.report(utilDiagnostics.INVALID_RECURSIVE_MIXIN(), {\n                node: rule,\n            });\n        }\n    });\n\n    if (mixinAst.nodes) {\n        let nextRule: postcss.Rule | postcss.AtRule = rule;\n        // TODO: handle rules before and after decl on entry\n        const inlineMixin = !hasNonDeclsBeforeDecl(mixinDecl);\n        const mixInto = inlineMixin ? rule : postcss.rule({ selector: '&' });\n        const mixIntoRule = (node: postcss.AnyNode) => {\n            // mix node into rule\n            if (inlineMixin) {\n                mixInto.insertBefore(mixinDecl, node);\n            } else {\n                // indent first level - doesn't change deep nested\n                node.raws.before = (node.raws.before || '') + '    ';\n                mixInto.append(node);\n            }\n            // mark following decls for nesting\n            if (!nestFollowingDecls && node.type !== 'decl' && hasAnyDeclsAfter(mixinDecl)) {\n                nestFollowingDecls = true;\n            }\n        };\n        let nestFollowingDecls = false;\n        mixinAst.nodes.slice().forEach((node) => {\n            if (node === mixinRoot) {\n                for (const nested of [...node.nodes]) {\n                    mixIntoRule(nested);\n                }\n            } else if (node.type === 'decl') {\n                // stand alone decl - most likely from js mixin\n                mixIntoRule(node);\n            } else if (node.type === 'rule' || node.type === 'atrule') {\n                const valid = !nestedInKeyframes;\n                if (valid) {\n                    if (rule.parent!.last === nextRule) {\n                        rule.parent!.append(node);\n                    } else {\n                        rule.parent!.insertAfter(nextRule, node);\n                    }\n                    nextRule = node;\n                } else {\n                    report?.report(utilDiagnostics.INVALID_MERGE_OF(node.toString()), {\n                        node: rule,\n                    });\n                }\n            }\n        });\n        // add nested mixin to rule body\n        if (mixInto !== rule && mixInto.nodes.length) {\n            mixinDecl.before(mixInto);\n        }\n        // nest following decls if needed\n        if (nestFollowingDecls) {\n            const nestFollowingDecls = postcss.rule({ selector: '&' });\n            while (mixinDecl.next()) {\n                const nextNode = mixinDecl.next()!;\n                nextNode.raws.before = (nextNode.raws.before || '') + '    ';\n                nestFollowingDecls.append(nextNode);\n            }\n            mixinDecl.after(nestFollowingDecls);\n        }\n    }\n\n    return rule;\n}\n\nfunction hasNonDeclsBeforeDecl(decl: postcss.Declaration) {\n    let current: postcss.AnyNode | undefined = decl.prev();\n    while (current) {\n        if (current.type !== 'decl' && current.type !== 'comment') {\n            return true;\n        }\n        current = current.prev();\n    }\n    return false;\n}\nfunction hasAnyDeclsAfter(decl: postcss.Declaration) {\n    let current: postcss.AnyNode | undefined = decl.next();\n    while (current) {\n        if (current.type === 'decl') {\n            return true;\n        }\n        current = current.prev();\n    }\n    return false;\n}\n\nconst isChildOfMixinRoot = (rule: postcss.Rule, mixinRoot: postcss.Rule | null | 'NoRoot') => {\n    let current: postcss.Container | postcss.Document | undefined = rule.parent;\n    while (current) {\n        if (current === mixinRoot) {\n            return true;\n        }\n        current = current.parent;\n    }\n    return false;\n};\n\nexport const sourcePathDiagnostics = {\n    MISSING_SOURCE_FILENAME: createDiagnosticReporter(\n        '17001',\n        'error',\n        () => 'missing source filename'\n    ),\n};\n\nexport function getSourcePath(root: postcss.Root, diagnostics: Diagnostics) {\n    const source = (root.source && root.source.input.file) || '';\n    if (!source) {\n        diagnostics.report(sourcePathDiagnostics.MISSING_SOURCE_FILENAME(), {\n            node: root,\n        });\n    } else if (!isAbsolute(source)) {\n        throw new Error('source filename is not absolute path: \"' + source + '\"');\n    }\n    return source;\n}\n\nexport function getAlias(symbol: StylableSymbol): ImportSymbol | undefined {\n    if (symbol._kind === 'class' || symbol._kind === 'element') {\n        if (!symbol[`-st-extends`]) {\n            return symbol.alias;\n        }\n    }\n\n    return undefined;\n}\n", "import {\n    parseCssSelector,\n    stringifySelectorAst,\n    walk,\n    SelectorNode,\n    PseudoClass,\n    Selector,\n    SelectorList,\n    FunctionalSelector,\n    Class,\n    Attribute,\n    Invalid,\n    ImmutableSelector,\n    ImmutableSelectorList,\n    ImmutableSelectorNode,\n    Combinator,\n} from '@tokey/css-selector-parser';\nimport cloneDeep from 'lodash.clonedeep';\n\nexport const parseSelector = parseCssSelector;\nexport const stringifySelector = stringifySelectorAst;\nexport const walkSelector = walk;\n\n/**\n * parse selectors and cache them\n */\nconst selectorAstCache = new Map<string, ImmutableSelectorList>();\nexport function parseSelectorWithCache(selector: string, options: { clone: true }): SelectorList;\nexport function parseSelectorWithCache(\n    selector: string,\n    options?: { clone?: false }\n): ImmutableSelectorList;\nexport function parseSelectorWithCache(\n    selector: string,\n    options: { clone?: boolean } = {}\n): ImmutableSelectorList {\n    if (!selectorAstCache.has(selector)) {\n        if (selectorAstCache.size > 10000) {\n            selectorAstCache.delete(selectorAstCache.keys().next().value);\n        }\n        selectorAstCache.set(selector, parseCssSelector(selector));\n    }\n    const cachedValue = selectorAstCache.get(selector);\n    return options.clone\n        ? (cloneDeep(cachedValue) as SelectorList)\n        : (cachedValue as ImmutableSelectorList);\n}\n\nexport function cloneSelector<T extends ImmutableSelector | ImmutableSelectorList>(s: T): T {\n    return cloneDeep(s);\n}\n\n/**\n * returns for each selector if it contains only\n * a single class or an element selector.\n */\nexport function isSimpleSelector(selector: string): {\n    isSimple: boolean;\n    type: 'class' | 'type' | 'complex';\n}[] {\n    const selectorList = parseSelectorWithCache(selector);\n    return selectorList.map((selector) => {\n        let foundType = ``;\n        walk(\n            selector,\n            (node) => {\n                if ((node.type !== `class` && node.type !== `type`) || foundType || node.nodes) {\n                    foundType = `complex`;\n                    return walk.stopAll;\n                }\n                foundType = node.type;\n                return;\n            },\n            { ignoreList: [`selector`, `comment`] }\n        );\n        if (foundType === `class` || foundType === `type`) {\n            return { type: foundType, isSimple: true };\n        } else {\n            return { type: `complex`, isSimple: false };\n        }\n    });\n}\n\n/**\n * take an ast node with nested nodes \"XXX(nest1,  nest2)\"\n * and convert it to a flat selector as node: \"nest1, nest2\"\n */\nexport function flattenFunctionalSelector(node: FunctionalSelector): Selector {\n    node.value = ``;\n    return convertToSelector(node);\n}\n\n/**\n * ast convertors\n */\nexport function convertToClass(node: SelectorNode): Class {\n    const castedNode = node as Class;\n    castedNode.type = `class`;\n    castedNode.dotComments = [];\n    return castedNode;\n}\nexport function convertToAttribute(node: SelectorNode): Attribute {\n    const castedNode = node as Attribute;\n    castedNode.type = `attribute`;\n    return castedNode;\n}\nexport function convertToInvalid(node: SelectorNode): Invalid {\n    const castedNode = node as Invalid;\n    castedNode.type = `invalid`;\n    return castedNode;\n}\nexport function convertToSelector(node: SelectorNode): Selector {\n    const castedNode = node as Selector;\n    castedNode.type = `selector`;\n    castedNode.before ||= ``;\n    castedNode.after ||= ``;\n    // ToDo: should this fix castedNode.end?\n    return castedNode;\n}\nexport function convertToPseudoClass(\n    node: SelectorNode,\n    name: string,\n    nestedSelectors?: SelectorList\n): PseudoClass {\n    const castedNode = node as PseudoClass;\n    castedNode.type = 'pseudo_class';\n    castedNode.value = name;\n    castedNode.colonComments = [];\n    if (nestedSelectors) {\n        castedNode.nodes = nestedSelectors;\n    } else {\n        delete castedNode.nodes;\n    }\n    return castedNode;\n}\n\nexport function createCombinatorSelector(partial: Partial<Combinator>): Combinator {\n    const type = partial.combinator || 'space';\n    return {\n        type: `combinator`,\n        combinator: type,\n        value: partial.value ?? (type === 'space' ? ` ` : type),\n        before: partial.before ?? ``,\n        after: partial.after ?? ``,\n        start: partial.start ?? 0,\n        end: partial.end ?? 0,\n        invalid: partial.invalid ?? false,\n    };\n}\n\nexport function isInPseudoClassContext(parents: ReadonlyArray<ImmutableSelectorNode>) {\n    for (const parent of parents) {\n        if (parent.type === `pseudo_class`) {\n            return true;\n        }\n    }\n    return false;\n}\n\nexport function matchTypeAndValue(\n    a: Partial<ImmutableSelectorNode>,\n    b: Partial<ImmutableSelectorNode>\n) {\n    return a.type === b.type && (a as any).value === (b as any).value;\n}\n\nexport function isCompRoot(name: string) {\n    return name.charAt(0).match(/[A-Z]/);\n}\n\nconst isNestedNode = (node: SelectorNode) => node.type === 'nesting';\n/**\n * combine 2 selector lists.\n * - add each scoping selector at the begging of each nested selector\n * - replace any nesting `&` nodes in the nested selector with the scoping selector nodes\n */\nexport function scopeNestedSelector(\n    scopeSelectorAst: ImmutableSelectorList,\n    nestedSelectorAst: ImmutableSelectorList,\n    rootScopeLevel = false,\n    isAnchor: (node: SelectorNode) => boolean = isNestedNode\n): { selector: string; ast: SelectorList } {\n    const resultSelectors: SelectorList = [];\n    nestedSelectorAst.forEach((targetAst) => {\n        scopeSelectorAst.forEach((scopeAst) => {\n            const outputAst = cloneDeep(targetAst) as Selector;\n\n            outputAst.before = scopeAst.before || outputAst.before;\n\n            let first = outputAst.nodes[0];\n            // search first actual first selector part\n            walkSelector(\n                outputAst,\n                (node) => {\n                    first = node;\n                    return walkSelector.stopAll;\n                },\n                { ignoreList: [`selector`] }\n            );\n            const parentRef = first.type === `nesting`;\n            const globalSelector = first.type === `pseudo_class` && first.value === `global`;\n            const startWithScoping = rootScopeLevel\n                ? scopeAst.nodes.every((node, i) => {\n                      return matchTypeAndValue(node, outputAst.nodes[i]);\n                  })\n                : false;\n            let nestedMixRoot = false;\n            walkSelector(outputAst, (node, i, nodes) => {\n                if (isAnchor(node)) {\n                    nestedMixRoot = true;\n                    nodes.splice(i, 1, {\n                        type: `selector`,\n                        nodes: cloneDeep(scopeAst.nodes as SelectorNode[]),\n                        start: node.start,\n                        end: node.end,\n                        after: ``,\n                        before: ``,\n                    });\n                }\n            });\n            if (first && !parentRef && !startWithScoping && !globalSelector && !nestedMixRoot) {\n                outputAst.nodes.unshift(...cloneDeep(scopeAst.nodes as SelectorNode[]), {\n                    type: `combinator`,\n                    combinator: `space`,\n                    value: ` `,\n                    before: ``,\n                    after: ``,\n                    start: first.start,\n                    end: first.start,\n                    invalid: false,\n                });\n            }\n\n            resultSelectors.push(outputAst);\n        });\n    });\n\n    return {\n        selector: stringifySelector(resultSelectors),\n        ast: resultSelectors,\n    };\n}\n", "import {\n    parseSelectorWithCache,\n    stringifySelector,\n    scopeNestedSelector,\n    walkSelector,\n    convertToSelector,\n    matchTypeAndValue,\n    isSimpleSelector,\n} from './selector';\nimport {\n    Selector,\n    ImmutableSelectorNode,\n    groupCompoundSelectors,\n    SelectorList,\n    SelectorNode,\n} from '@tokey/css-selector-parser';\nimport * as postcss from 'postcss';\nimport { transformInlineCustomSelectors } from './custom-selector';\n\nexport function isChildOfAtRule(rule: postcss.Container, atRuleName: string) {\n    let currentParent = rule.parent;\n    while (currentParent) {\n        if (\n            currentParent.type === 'atrule' &&\n            (currentParent as postcss.AtRule).name === atRuleName\n        ) {\n            return true;\n        }\n        currentParent = currentParent.parent;\n    }\n    return false;\n}\n\nexport function isInConditionalGroup(node: postcss.Rule | postcss.AtRule, includeRoot = true) {\n    // https://www.w3.org/TR/css-conditional-3/#contents-of\n    const parent = node.parent as any;\n    return (\n        parent &&\n        ((includeRoot && parent.type === `root`) ||\n            (parent.type === `atrule` && (parent.name === `media` || parent.name === `supports`)))\n    );\n}\n\nexport function createSubsetAst<T extends postcss.Root | postcss.AtRule | postcss.Rule>(\n    root: postcss.Root | postcss.AtRule | postcss.Rule,\n    selectorPrefix: string,\n    mixinTarget?: T,\n    isRoot = false,\n    getCustomSelector?: (name: string) => SelectorList | undefined,\n    isNestedInMixin = false\n): T {\n    // keyframes on class mixin?\n    const prefixSelectorList = parseSelectorWithCache(selectorPrefix);\n    const prefixType = prefixSelectorList[0].nodes[0];\n    const containsPrefix = containsMatchInFirstChunk.bind(null, prefixType);\n    const mixinRoot = mixinTarget ? mixinTarget : postcss.root();\n    root.nodes.forEach((node) => {\n        if (node.type === 'decl') {\n            mixinTarget?.append(node.clone());\n        } else if (\n            node.type === `rule` &&\n            (node.selector === ':vars' || node.selector === ':import')\n        ) {\n            // nodes that don't mix\n            return;\n        } else if (node.type === `rule`) {\n            const selectorAst = parseSelectorWithCache(node.selector, { clone: true });\n            let ast = isRoot\n                ? scopeNestedSelector(prefixSelectorList, selectorAst, true).ast\n                : selectorAst;\n            if (getCustomSelector) {\n                ast = transformInlineCustomSelectors(ast, getCustomSelector, () => {\n                    /*don't report*/\n                });\n            }\n            const matchesSelectors =\n                isRoot || isNestedInMixin ? ast : ast.filter((node) => containsPrefix(node));\n\n            if (matchesSelectors.length) {\n                const selector = stringifySelector(\n                    matchesSelectors.map((selectorNode) => {\n                        if (!isRoot) {\n                            selectorNode = fixChunkOrdering(selectorNode, prefixType);\n                        }\n                        replaceTargetWithMixinAnchor(selectorNode, prefixType);\n                        return selectorNode;\n                    })\n                );\n\n                const clonedRule = createSubsetAst(\n                    node,\n                    selectorPrefix,\n                    node.clone({ selector, nodes: [] }),\n                    isRoot,\n                    getCustomSelector,\n                    true /*isNestedInMixin*/\n                );\n                mixinRoot.append(clonedRule);\n            }\n        } else if (node.type === `atrule`) {\n            if (\n                node.name === 'media' ||\n                node.name === 'supports' ||\n                node.name === 'st-scope' ||\n                node.name === 'layer' ||\n                node.name === 'container'\n            ) {\n                let scopeSelector = node.name === 'st-scope' ? node.params : '';\n                let atruleHasMixin = isNestedInMixin || false;\n                if (scopeSelector) {\n                    const ast = parseSelectorWithCache(scopeSelector, { clone: true });\n                    const matchesSelectors = isRoot\n                        ? ast\n                        : ast.filter((node) => containsPrefix(node));\n                    if (matchesSelectors.length) {\n                        atruleHasMixin = true;\n                        scopeSelector = stringifySelector(\n                            matchesSelectors.map((selectorNode) => {\n                                if (!isRoot) {\n                                    selectorNode = fixChunkOrdering(selectorNode, prefixType);\n                                }\n                                replaceTargetWithMixinAnchor(selectorNode, prefixType);\n                                return selectorNode;\n                            })\n                        );\n                    }\n                }\n                const atRuleSubset = createSubsetAst(\n                    node,\n                    selectorPrefix,\n                    postcss.atRule({\n                        params: scopeSelector || node.params,\n                        name: node.name,\n                    }),\n                    isRoot,\n                    getCustomSelector,\n                    atruleHasMixin\n                );\n                if (atRuleSubset.nodes) {\n                    mixinRoot.append(atRuleSubset);\n                }\n            } else if (isRoot) {\n                mixinRoot.append(node.clone());\n            }\n        } else {\n            // TODO: add warn?\n        }\n    });\n\n    return mixinRoot as T;\n}\n\nexport const stMixinMarker = 'st-mixin-marker';\nexport const isStMixinMarker = (node: SelectorNode) =>\n    node.type === 'attribute' && node.value === stMixinMarker;\nfunction replaceTargetWithMixinAnchor(selectorNode: Selector, prefixType: ImmutableSelectorNode) {\n    walkSelector(selectorNode, (node) => {\n        if (matchTypeAndValue(node, prefixType)) {\n            convertToSelector(node).nodes = [\n                {\n                    type: `attribute`,\n                    value: stMixinMarker,\n                    start: node.start,\n                    end: node.end,\n                },\n            ];\n        }\n    });\n}\n\nfunction fixChunkOrdering(selectorNode: Selector, prefixType: ImmutableSelectorNode) {\n    const compound = groupCompoundSelectors(selectorNode, {\n        deep: true,\n        splitPseudoElements: false,\n    });\n    walkSelector(compound, (node) => {\n        if (node.type === `compound_selector`) {\n            const simpleNodes = node.nodes;\n            for (let i = 1; i < simpleNodes.length; i++) {\n                const childNode = simpleNodes[i];\n                if (matchTypeAndValue(childNode, prefixType)) {\n                    const chunk = simpleNodes.splice(i, simpleNodes.length - i);\n                    simpleNodes.unshift(...chunk);\n                    break;\n                }\n            }\n        }\n    });\n    return compound;\n}\n\nfunction containsMatchInFirstChunk(\n    prefixType: ImmutableSelectorNode,\n    selectorNode: ImmutableSelectorNode\n) {\n    let isMatch = false;\n    walkSelector(selectorNode, (node) => {\n        if (node.type === `combinator`) {\n            return walkSelector.stopAll;\n        } else if (node.type === 'pseudo_class') {\n            // handle nested match :is(.mix)\n            if (node.nodes) {\n                for (const innerSelectorNode of node.nodes) {\n                    if (containsMatchInFirstChunk(prefixType, innerSelectorNode)) {\n                        isMatch = true;\n                    }\n                }\n            }\n            return walkSelector.skipNested;\n        } else if (matchTypeAndValue(node, prefixType)) {\n            isMatch = true;\n            return walkSelector.stopAll;\n        }\n        return;\n    });\n    return isMatch;\n}\n\n/** @deprecated internal for transformer  */\nexport function findRule(\n    root: postcss.Root,\n    selector: string,\n    test: any = (statement: any) => statement.prop === `-st-extends`\n): null | postcss.Declaration {\n    let found: any = null;\n    root.walkRules(selector, (rule) => {\n        const declarationIndex = rule.nodes ? rule.nodes.findIndex(test) : -1;\n        const isSimplePerSelector = isSimpleSelector(rule.selector);\n        // This will assume that a selector that contains .a, .b:hover is simple! (for backward compatibility)\n        const isSimple = isSimplePerSelector.reduce((acc, { isSimple }) => {\n            return !isSimple ? false : acc;\n        }, true);\n        if (isSimple && !!~declarationIndex) {\n            found = rule.nodes[declarationIndex];\n        }\n    });\n    return found;\n}\n", "import {\n    PseudoClass,\n    Selector,\n    SelectorList,\n    walk,\n    SelectorNode,\n    parseCssSelector,\n} from '@tokey/css-selector-parser';\nimport cloneDeep from 'lodash.clonedeep';\n\nexport type CustomSelectorMap = Record<string, SelectorList>;\ntype InsertionIter = (progress: boolean) => boolean;\ntype UnknownReport = { type: 'unknown'; origin: string; unknown: string };\ntype CircularReport = { type: 'circular'; path: readonly string[] };\nexport type TransformCustomSelectorReport = UnknownReport | CircularReport;\n\nexport function transformInlineCustomSelectorMap(\n    customSelectors: CustomSelectorMap,\n    report: (data: TransformCustomSelectorReport) => void\n) {\n    const result: CustomSelectorMap = {};\n    const link = (name: string, path: string[]) => {\n        const ast = customSelectors[name];\n        if (!ast) {\n            return;\n        }\n        result[name] = transformInlineCustomSelectors(\n            ast,\n            (nestedName) => {\n                const selector = `:--${nestedName}`;\n                if (path.includes(selector)) {\n                    // loop!: report & preserve source selector\n                    report({ type: 'circular', path });\n                    return parseCssSelector(selector);\n                }\n                if (!result[nestedName]) {\n                    link(nestedName, [...path, selector]);\n                }\n                return result[nestedName];\n            },\n            ({ type, unknown }) => report({ type, origin: name, unknown })\n        );\n    };\n    for (const name of Object.keys(customSelectors)) {\n        link(name, [`:--${name}`]);\n    }\n    return result;\n}\n\nfunction isCustomSelectorNode(node: SelectorNode): node is PseudoClass {\n    return node.type === 'pseudo_class' && node.value.startsWith('--');\n}\n\n/**\n * Takes a list of selectors and a function that returns a selector\n * against a custom selector name.\n *\n * Then search for inline custom selectors (e.g. \":--custom\") and\n * replaces them with the retrieved selectors it receives\n */\nexport function transformInlineCustomSelectors(\n    inputSelectors: SelectorList,\n    getCustomSelector: (name: string) => SelectorList | undefined,\n    report: (data: UnknownReport) => void\n): SelectorList {\n    const result: SelectorList = [];\n    for (const selector of inputSelectors) {\n        result.push(...transformInlineCustomSelector(selector, getCustomSelector, report));\n    }\n    return result;\n}\n\nfunction transformInlineCustomSelector(\n    inputSelector: Selector,\n    getCustomSelector: (name: string) => SelectorList | undefined,\n    report: (data: UnknownReport) => void\n): SelectorList {\n    const insertions: InsertionIter[] = [];\n    // get insertion points\n    walk(inputSelector, (node, index, _nodes, parents) => {\n        if (isCustomSelectorNode(node)) {\n            const name = node.value.slice(2);\n            const targetSelectors = getCustomSelector(name);\n            if (!targetSelectors) {\n                report({ type: 'unknown', origin: '', unknown: name });\n            } else if (targetSelectors.length !== 0) {\n                const parent = parents[parents.length - 1];\n                if (parent && 'nodes' in parent && parent.nodes) {\n                    let selectorIndex = 0;\n                    insertions.push((progress) => {\n                        if (progress) {\n                            selectorIndex++;\n                        }\n                        const overflow = selectorIndex === targetSelectors.length;\n                        if (overflow) {\n                            selectorIndex = 0;\n                        }\n                        const currentSelector = targetSelectors[selectorIndex];\n                        currentSelector.before = currentSelector.after = '';\n                        parent.nodes![index] = currentSelector;\n                        return overflow;\n                    });\n                }\n            }\n        }\n    });\n    // permute selectors\n    const output: SelectorList = [];\n    if (insertions.length) {\n        // save first permutation\n        insertions.forEach((updateSelector) => updateSelector(false));\n        output.push(cloneDeep(inputSelector));\n        // collect rest of permutations\n        let run = true;\n        while (run) {\n            let progressIdx = 0;\n            for (let i = 0; i < insertions.length; ++i) {\n                const updateSelector = insertions[i];\n                const moveToNext = i === progressIdx;\n                const overflow = updateSelector(moveToNext);\n                if (overflow) {\n                    if (progressIdx < insertions.length - 1) {\n                        // advance next insertion point\n                        progressIdx++;\n                    } else {\n                        // finish run over all permutations\n                        run = false;\n                        return output;\n                    }\n                } else {\n                    // no need to update any farther this round\n                    break;\n                }\n            }\n            output.push(cloneDeep(inputSelector));\n        }\n    }\n    return [inputSelector];\n}\n", "import { FeatureContext, createFeature } from './feature';\nimport type { ImportSymbol } from './st-import';\nimport type { VarSymbol } from './st-var';\nimport type { ClassSymbol } from './css-class';\nimport type { ElementSymbol } from './css-type';\nimport type { CSSVarSymbol } from './css-custom-property';\nimport type { KeyframesSymbol } from './css-keyframes';\nimport type { LayerSymbol } from './css-layer';\nimport type { ContainerSymbol } from './css-contains';\nimport { plugableRecord } from '../helpers/plugable-record';\nimport type { StylableMeta } from '../stylable-meta';\nimport type * as postcss from 'postcss';\nimport { createDiagnosticReporter } from '../diagnostics';\n\n// SYMBOLS DEFINITION\n\n// union of all of the symbols\nexport type StylableSymbol =\n    | ImportSymbol\n    | VarSymbol\n    | ClassSymbol\n    | ElementSymbol\n    | CSSVarSymbol\n    | KeyframesSymbol\n    | LayerSymbol\n    | ContainerSymbol;\n// the namespace that each symbol exists on\nconst NAMESPACES = {\n    import: `main`,\n    class: `main`,\n    cssVar: `main`,\n    element: `main`,\n    keyframes: `keyframes`,\n    layer: `layer`,\n    container: `container`,\n    var: `main`,\n} as const;\nexport const readableTypeMap: Record<StylableSymbol['_kind'], string> = {\n    class: 'css class',\n    element: 'css element type',\n    cssVar: 'css custom property',\n    import: 'stylable imported symbol',\n    keyframes: 'css keyframes',\n    layer: 'css layer',\n    container: 'css container name',\n    var: 'stylable var',\n};\n// state structure\nfunction createState(clone?: State): State {\n    return {\n        byNS: {\n            main: clone ? [...clone.byNS.main] : [],\n            keyframes: clone ? [...clone.byNS.keyframes] : [],\n            layer: clone ? [...clone.byNS.layer] : [],\n            container: clone ? [...clone.byNS.container] : [],\n        },\n        byNSFlat: {\n            main: clone ? { ...clone.byNSFlat.main } : {},\n            keyframes: clone ? { ...clone.byNSFlat.keyframes } : {},\n            layer: clone ? { ...clone.byNSFlat.layer } : {},\n            container: clone ? { ...clone.byNSFlat.container } : {},\n        },\n        byType: {\n            import: clone ? { ...clone.byType.import } : {},\n            class: clone ? { ...clone.byType.class } : {},\n            cssVar: clone ? { ...clone.byType.cssVar } : {},\n            element: clone ? { ...clone.byType.element } : {},\n            keyframes: clone ? { ...clone.byType.keyframes } : {},\n            layer: clone ? { ...clone.byType.layer } : {},\n            container: clone ? { ...clone.byType.container } : {},\n            var: clone ? { ...clone.byType.var } : {},\n        },\n    };\n}\n\n// internal types\ntype SymbolTypes = StylableSymbol['_kind'];\ntype filterSymbols<T extends SymbolTypes> = Extract<StylableSymbol, { _kind: T }>;\ntype SymbolMap = {\n    [K in SymbolTypes]: filterSymbols<K>;\n};\ntype SymbolTypeToNamespace = typeof NAMESPACES;\ntype FilterByNamespace<NS extends Namespaces, T extends SymbolTypes = SymbolTypes> = T extends any\n    ? SymbolTypeToNamespace[T] extends NS\n        ? T\n        : never\n    : never;\ntype NamespaceToSymbolType = {\n    [NS in SymbolTypeToNamespace[SymbolTypes]]: FilterByNamespace<NS>;\n};\nexport type Namespaces = keyof NamespaceToSymbolType;\nexport type SymbolByNamespace<NS extends Namespaces> = Extract<\n    StylableSymbol,\n    {\n        _kind: NamespaceToSymbolType[NS];\n    }\n>;\ninterface SymbolDeclaration<NS = Namespaces> {\n    name: string;\n    symbol: filterSymbols<\n        SymbolTypes extends any ? (Namespaces extends NS ? SymbolTypes : any) : any\n    >;\n    ast: postcss.Node | undefined;\n    safeRedeclare: boolean;\n}\ninterface State {\n    byNS: {\n        [NS in Namespaces]: SymbolDeclaration<NS>[];\n    };\n    byNSFlat: {\n        [NS in Namespaces]: Record<string, filterSymbols<NamespaceToSymbolType[NS]>>;\n    };\n    byType: {\n        [T in keyof SymbolMap]: Record<string, SymbolMap[T]>;\n    };\n}\n\nconst dataKey = plugableRecord.key<State>('mappedSymbols');\n\nexport const diagnostics = {\n    REDECLARE_SYMBOL: createDiagnosticReporter(\n        '06001',\n        'warning',\n        (name: string) => `redeclare symbol \"${name}\"`\n    ),\n    REDECLARE_ROOT: createDiagnosticReporter(\n        '06002',\n        'error',\n        () => `root is used for the stylesheet and cannot be overridden`\n    ),\n};\n\n// HOOKS\n\nexport const hooks = createFeature({\n    metaInit({ meta }) {\n        plugableRecord.set(meta.data, dataKey, createState());\n    },\n});\n\n// API\nexport function get<T extends keyof SymbolMap>(meta: StylableMeta, name: string, type?: T) {\n    const { byNSFlat, byType } = plugableRecord.getUnsafe(meta.data, dataKey);\n    return (type ? byType[type][name] : byNSFlat['main'][name]) as filterSymbols<T> | undefined;\n}\n\nexport function getAll<NS extends keyof NamespaceToSymbolType = `main`>(\n    meta: StylableMeta,\n    ns?: NS\n) {\n    const { byNSFlat } = plugableRecord.getUnsafe(meta.data, dataKey);\n    return byNSFlat[ns || `main`] as State['byNSFlat'][NS];\n}\n\nexport function getAllByType<T extends SymbolTypes>(\n    meta: StylableMeta,\n    type: T\n): State['byType'][T] {\n    const { byType } = plugableRecord.getUnsafe(meta.data, dataKey);\n    return byType[type];\n}\n\nexport function addSymbol({\n    context,\n    symbol,\n    node,\n    safeRedeclare = false,\n    localName,\n}: {\n    context: FeatureContext;\n    symbol: StylableSymbol;\n    node?: postcss.Node;\n    safeRedeclare?: boolean;\n    localName?: string;\n}) {\n    const { byNS, byNSFlat, byType } = plugableRecord.getUnsafe(context.meta.data, dataKey);\n    const name = localName || symbol.name;\n    const typeTable = byType[symbol._kind];\n    const nsName = NAMESPACES[symbol._kind];\n    if (node && name === `root` && nsName === `main` && byNSFlat[nsName][name]) {\n        context.diagnostics.report(diagnostics.REDECLARE_ROOT(), {\n            node,\n            word: `root`,\n        });\n        return;\n    }\n    byNS[nsName].push({ name, symbol, ast: node, safeRedeclare });\n    byNSFlat[nsName][name] = symbol;\n    typeTable[name] = symbol;\n    return symbol;\n}\n\nexport function reportRedeclare(context: FeatureContext) {\n    const { byNS } = plugableRecord.getUnsafe(context.meta.data, dataKey);\n    for (const symbols of Object.values(byNS)) {\n        const flat: Record<string, SymbolDeclaration[]> = {};\n        const collisions: Set<string> = new Set();\n        for (const symbolDecl of symbols) {\n            const { name, safeRedeclare } = symbolDecl;\n            flat[name] = flat[name] || [];\n            if (!safeRedeclare && flat[name].length) {\n                collisions.add(name);\n            }\n            flat[name].push(symbolDecl);\n        }\n        for (const name of collisions) {\n            for (const { safeRedeclare, ast } of flat[name]) {\n                if (!safeRedeclare && ast) {\n                    context.diagnostics.report(diagnostics.REDECLARE_SYMBOL(name), {\n                        node: ast,\n                        word: name,\n                    });\n                }\n            }\n        }\n    }\n}\n", "import type { StylableMeta } from '../stylable-meta';\nimport type {\n    InferredSelector,\n    ScopeContext,\n    StylableExports,\n    StylableTransformer,\n} from '../stylable-transformer';\nimport type { StylableResolver, MetaResolvedSymbols } from '../stylable-resolver';\nimport type { StylableEvaluator, EvalValueData } from '../functions';\nimport type * as postcss from 'postcss';\nimport type { ImmutableSelectorNode } from '@tokey/css-selector-parser';\nimport type { Diagnostics } from '../diagnostics';\nimport type { ParsedValue } from '../types';\n\nexport interface FeatureFlags {\n    strictCustomProperty: boolean;\n}\nexport const defaultFeatureFlags: FeatureFlags = {\n    strictCustomProperty: false,\n};\n\nexport type SelectorNodeContext = [\n    index: number,\n    nodes: ImmutableSelectorNode[],\n    parents: ImmutableSelectorNode[]\n];\n\nexport interface FeatureContext {\n    meta: StylableMeta;\n    diagnostics: Diagnostics;\n}\nexport interface FeatureTransformContext extends FeatureContext {\n    resolver: StylableResolver;\n    evaluator: StylableEvaluator;\n    getResolvedSymbols: (meta: StylableMeta) => MetaResolvedSymbols;\n    passedThrough?: string[];\n    inferredSelectorMixin?: InferredSelector;\n}\n\nexport interface NodeTypes {\n    SELECTOR?: any;\n    IMMUTABLE_SELECTOR?: any;\n    RESOLVED?: any;\n}\n\ntype SelectorWalkReturn = number | undefined | void;\n\nexport interface FeatureHooks<T extends NodeTypes = NodeTypes> {\n    metaInit: (context: FeatureContext) => void;\n    analyzeInit: (context: FeatureContext) => void;\n    analyzeAtRule: (options: {\n        context: FeatureContext;\n        atRule: postcss.AtRule;\n        analyzeRule: (\n            rule: postcss.Rule,\n            options: { isScoped: boolean; originalNode: postcss.AtRule | postcss.Rule }\n        ) => boolean;\n    }) => void;\n    analyzeSelectorNode: (options: {\n        context: FeatureContext;\n        node: T['IMMUTABLE_SELECTOR'];\n        topSelectorIndex: number;\n        rule: postcss.Rule;\n        originalNode: postcss.AtRule | postcss.Rule; // used by rules generated from at-rules\n        walkContext: SelectorNodeContext;\n    }) => SelectorWalkReturn;\n    analyzeSelectorDone: (options: {\n        context: FeatureContext;\n        rule: postcss.Rule;\n        originalNode: postcss.AtRule | postcss.Rule; // used by rules generated from at-rules\n    }) => SelectorWalkReturn;\n    analyzeDeclaration: (options: { context: FeatureContext; decl: postcss.Declaration }) => void;\n    analyzeDone: (context: FeatureContext) => void;\n    prepareAST: (options: {\n        context: FeatureTransformContext;\n        node: postcss.ChildNode;\n        toRemove: Array<postcss.Node | (() => void)>;\n    }) => void;\n    transformInit: (options: { context: FeatureTransformContext }) => void;\n    transformResolve: (options: { context: FeatureTransformContext }) => T['RESOLVED'];\n    transformAtRuleNode: (options: {\n        context: FeatureTransformContext;\n        atRule: postcss.AtRule;\n        resolved: T['RESOLVED'];\n        // ToDo: move to FeatureTransformContext\n        transformer: StylableTransformer;\n    }) => void;\n    transformSelectorNode: (options: {\n        context: FeatureTransformContext;\n        node: T['SELECTOR'];\n        selectorContext: Required<ScopeContext>;\n    }) => boolean | void;\n    transformDeclaration: (options: {\n        context: FeatureTransformContext;\n        decl: postcss.Declaration;\n        resolved: T['RESOLVED'];\n    }) => void;\n    transformValue: (options: {\n        context: FeatureTransformContext;\n        node: ParsedValue;\n        data: EvalValueData;\n    }) => void;\n    transformJSExports: (options: { exports: StylableExports; resolved: T['RESOLVED'] }) => void;\n    transformLastPass: (options: {\n        context: FeatureTransformContext;\n        ast: postcss.Root;\n        transformer: StylableTransformer;\n        cssVarsMapping: Record<string, string>;\n        path: string[];\n    }) => void;\n}\nconst defaultHooks: FeatureHooks<NodeTypes> = {\n    metaInit() {\n        /**/\n    },\n    analyzeInit() {\n        /**/\n    },\n    analyzeAtRule() {\n        /**/\n    },\n    analyzeSelectorNode() {\n        /**/\n    },\n    analyzeSelectorDone() {\n        /**/\n    },\n    analyzeDeclaration() {\n        /**/\n    },\n    analyzeDone() {\n        /**/\n    },\n    prepareAST() {\n        /**/\n    },\n    transformInit() {\n        /**/\n    },\n    transformResolve() {\n        return {};\n    },\n    transformAtRuleNode() {\n        /**/\n    },\n    transformSelectorNode() {\n        /**/\n    },\n    transformDeclaration() {\n        /**/\n    },\n    transformValue() {\n        /**/\n    },\n    transformJSExports() {\n        /**/\n    },\n    transformLastPass() {\n        /**/\n    },\n};\nexport function createFeature<T extends NodeTypes>(\n    hooks: Partial<FeatureHooks<T>>\n): FeatureHooks<T> {\n    return {\n        ...defaultHooks,\n        ...hooks,\n    };\n}\n", "const type = Symbol();\n\nexport type PlugableRecord = Record<Key, unknown>;\nexport type Key<T = unknown> = symbol & { [type]: T };\nexport type Val<K extends Key> = K[typeof type];\n\nexport const plugableRecord = {\n    key<T>(desc: string) {\n        return Symbol(desc) as Key<T>;\n    },\n    set<K extends Key>(map: PlugableRecord, key: K, value: Val<K>) {\n        map[key] = value;\n    },\n    get<K extends Key>(map: PlugableRecord, key: K): Val<K> | undefined {\n        return map[key];\n    },\n    getAssure<K extends Key>(map: PlugableRecord, key: K): Val<K> {\n        if (!map[key]) {\n            throw new Error(`key ${key.description} is missing on map`);\n        }\n        return map[key];\n    },\n    getUnsafe<K extends Key>(map: PlugableRecord, key: K): Val<K> {\n        return map[key];\n    },\n};\n", "import { createFeature, FeatureContext, FeatureTransformContext } from './feature';\nimport { generalDiagnostics } from './diagnostics';\nimport * as STSymbol from './st-symbol';\nimport { plugableRecord } from '../helpers/plugable-record';\nimport {\n    parseStImport,\n    parsePseudoImport,\n    parseImportMessages,\n    tryCollectImportsDeep,\n} from '../helpers/import';\nimport { validateCustomPropertyName } from '../helpers/css-custom-property';\nimport type { StylableMeta } from '../stylable-meta';\nimport path from 'path';\nimport type { ImmutablePseudoClass, PseudoClass } from '@tokey/css-selector-parser';\nimport type * as postcss from 'postcss';\nimport { createDiagnosticReporter } from '../diagnostics';\nimport type { Stylable } from '../stylable';\nimport type { CachedModuleEntity } from '../stylable-resolver';\n\nexport interface ImportSymbol {\n    _kind: 'import';\n    type: 'named' | 'default';\n    name: string;\n    import: Imported;\n    context: string;\n}\n\nexport interface AnalyzedImport {\n    from: string;\n    default: string;\n    named: Record<string, string>;\n    typed: {\n        keyframes: Record<string, string>;\n    };\n}\n\nexport interface Imported {\n    from: string;\n    defaultExport: string;\n    named: Record<string, string>;\n    /**@deprecated use imported.typed.keyframes (remove in stylable 5) */\n    keyframes: Record<string, string>;\n    typed: Record<string, Record<string, string>>;\n    rule: postcss.Rule | postcss.AtRule;\n    request: string;\n    context: string;\n}\n\nexport const PseudoImport = `:import`;\nexport const PseudoImportDecl = {\n    DEFAULT: `-st-default` as const,\n    NAMED: `-st-named` as const,\n    FROM: `-st-from` as const,\n};\n\n/**\n * ImportTypeHook is used as a way to cast imported symbols before resolving their actual type.\n * currently used only for `keyframes` as they are completely on a separate namespace from other symbols.\n *\n * Hooks are registered statically since the features are static and cannot be selected/disabled.\n * If the system will ever change to support picking features dynamically, this mechanism would\n * have to move into the `metaInit` hook.\n */\nexport const ImportTypeHook = new Map<\n    string,\n    (context: FeatureContext, localName: string, importName: string, importDef: Imported) => void\n>();\n\nconst dataKey = plugableRecord.key<Imported[]>('imports');\n\nexport const diagnostics = {\n    ...parseImportMessages,\n    FORBIDDEN_DEF_IN_COMPLEX_SELECTOR: generalDiagnostics.FORBIDDEN_DEF_IN_COMPLEX_SELECTOR,\n    NO_ST_IMPORT_IN_NESTED_SCOPE: createDiagnosticReporter(\n        '05011',\n        'error',\n        () => `cannot use \"@st-import\" inside of nested scope`\n    ),\n    NO_PSEUDO_IMPORT_IN_NESTED_SCOPE: createDiagnosticReporter(\n        '05012',\n        'error',\n        () => `cannot use \":import\" inside of nested scope`\n    ),\n    INVALID_CUSTOM_PROPERTY_AS_VALUE: createDiagnosticReporter(\n        '05013',\n        'error',\n        (name: string, as: string) =>\n            `invalid alias for custom property \"${name}\" as \"${as}\"; custom properties must be prefixed with \"--\" (double-dash)`\n    ),\n    UNKNOWN_IMPORTED_SYMBOL: createDiagnosticReporter(\n        '05015',\n        'error',\n        (name: string, path: string) =>\n            `cannot resolve imported symbol \"${name}\" from stylesheet \"${path}\"`\n    ),\n    UNKNOWN_IMPORTED_FILE: createDiagnosticReporter(\n        '05016',\n        'error',\n        (path: string, error?: unknown) =>\n            `cannot resolve imported file: \"${path}\"${error ? `\\nFailed with:\\n${error}` : ''}`\n    ),\n    UNKNOWN_TYPED_IMPORT: createDiagnosticReporter(\n        '05018',\n        'error',\n        (type: string) => `Unknown type import \"${type}\"`\n    ),\n    NO_DEFAULT_EXPORT: createDiagnosticReporter(\n        '05020',\n        'error',\n        (path: string) => `Native CSS files have no default export. Imported file: \"${path}\"`\n    ),\n    UNSUPPORTED_NATIVE_IMPORT: createDiagnosticReporter(\n        '05021',\n        'warning',\n        () => `Unsupported @import within imported native CSS file`\n    ),\n};\n\n// HOOKS\n\nexport const hooks = createFeature<{\n    SELECTOR: PseudoClass;\n    IMMUTABLE_SELECTOR: ImmutablePseudoClass;\n}>({\n    metaInit({ meta }) {\n        plugableRecord.set(meta.data, dataKey, []);\n    },\n    analyzeInit(context) {\n        const imports = plugableRecord.getUnsafe(context.meta.data, dataKey);\n        const dirContext = path.dirname(context.meta.source);\n        // collect shallow imports\n        for (const node of context.meta.sourceAst.nodes) {\n            if (!isImportStatement(node)) {\n                continue;\n            }\n            const parsedImport =\n                node.type === `atrule`\n                    ? parseStImport(node, dirContext, context.diagnostics)\n                    : parsePseudoImport(node, dirContext, context.diagnostics);\n            imports.push(parsedImport);\n            addImportSymbols(parsedImport, context, dirContext);\n        }\n    },\n    analyzeAtRule({ context, atRule }) {\n        if (atRule.name === `st-import` && atRule.parent?.type !== `root`) {\n            context.diagnostics.report(diagnostics.NO_ST_IMPORT_IN_NESTED_SCOPE(), {\n                node: atRule,\n            });\n        } else if (atRule.name === `import` && context.meta.type === 'css') {\n            context.diagnostics.report(diagnostics.UNSUPPORTED_NATIVE_IMPORT(), {\n                node: atRule,\n            });\n        }\n    },\n    analyzeSelectorNode({ context, rule, node }) {\n        if (node.value !== `import`) {\n            return;\n        }\n        if (rule.selector !== `:import`) {\n            context.diagnostics.report(\n                diagnostics.FORBIDDEN_DEF_IN_COMPLEX_SELECTOR(PseudoImport),\n                { node: rule }\n            );\n            return;\n        }\n        if (rule.parent?.type !== `root`) {\n            context.diagnostics.report(diagnostics.NO_PSEUDO_IMPORT_IN_NESTED_SCOPE(), {\n                node: rule,\n            });\n        }\n    },\n    prepareAST({ node, toRemove }) {\n        if (isImportStatement(node)) {\n            toRemove.push(node);\n        }\n    },\n    transformInit({ context }) {\n        validateImports(context);\n        calcCssDepth(context);\n    },\n});\n\n// API\n\nexport class StylablePublicApi {\n    constructor(private stylable: Stylable) {}\n    public analyze(meta: StylableMeta): AnalyzedImport[] {\n        return getImportStatements(meta).map(({ request, defaultExport, named, keyframes }) => ({\n            from: request,\n            default: defaultExport,\n            named,\n            typed: {\n                keyframes,\n            },\n        }));\n    }\n}\n\nfunction calcCssDepth(context: FeatureTransformContext) {\n    let cssDepth = 0;\n    const deepDependencies = tryCollectImportsDeep(\n        context.resolver,\n        context.meta,\n        new Set(),\n        ({ depth }) => {\n            cssDepth = Math.max(cssDepth, depth);\n        },\n        1\n    );\n    context.meta.transformCssDepth = { cssDepth, deepDependencies };\n}\n\nfunction isImportStatement(node: postcss.ChildNode): node is postcss.Rule | postcss.AtRule {\n    return (\n        (node.type === `atrule` && node.name === `st-import`) ||\n        (node.type === `rule` && node.selector === `:import`)\n    );\n}\n\nexport function getImportStatements({ data }: StylableMeta): ReadonlyArray<Imported> {\n    const state = plugableRecord.getUnsafe(data, dataKey);\n    return state;\n}\n\nexport function createImportSymbol(\n    importDef: Imported,\n    type: `default` | `named`,\n    name: string,\n    dirContext: string\n): ImportSymbol {\n    return {\n        _kind: 'import',\n        type: type === 'default' ? `default` : `named`,\n        name: type === `default` ? name : importDef.named[name],\n        import: importDef,\n        context: dirContext,\n    };\n}\n\n// internal\n\nfunction addImportSymbols(importDef: Imported, context: FeatureContext, dirContext: string) {\n    checkForInvalidAsUsage(importDef, context);\n    if (importDef.defaultExport) {\n        STSymbol.addSymbol({\n            context,\n            localName: importDef.defaultExport,\n            symbol: createImportSymbol(importDef, `default`, `default`, dirContext),\n            node: importDef.rule,\n        });\n    }\n    Object.keys(importDef.named).forEach((name) => {\n        STSymbol.addSymbol({\n            context,\n            localName: name,\n            symbol: createImportSymbol(importDef, `named`, name, dirContext),\n            node: importDef.rule,\n        });\n    });\n    // import as typed symbol\n    for (const [type, imports] of Object.entries(importDef.typed)) {\n        const handler = ImportTypeHook.get(type);\n        if (handler) {\n            for (const [localName, importName] of Object.entries(imports)) {\n                handler(context, localName, importName, importDef);\n            }\n        } else {\n            context.diagnostics.report(diagnostics.UNKNOWN_TYPED_IMPORT(type), {\n                node: importDef.rule,\n                word: type,\n            });\n        }\n    }\n}\n\nfunction checkForInvalidAsUsage(importDef: Imported, context: FeatureContext) {\n    for (const [local, imported] of Object.entries(importDef.named)) {\n        if (validateCustomPropertyName(imported) && !validateCustomPropertyName(local)) {\n            context.diagnostics.report(\n                diagnostics.INVALID_CUSTOM_PROPERTY_AS_VALUE(imported, local),\n                { node: importDef.rule }\n            );\n        }\n    }\n}\n\nfunction validateImports(context: FeatureTransformContext) {\n    const imports = plugableRecord.getUnsafe(context.meta.data, dataKey);\n    for (const importObj of imports) {\n        const entity = context.resolver.getModule(importObj);\n        if (!entity.value) {\n            // warn about unknown imported files\n            const fromDecl =\n                importObj.rule.nodes &&\n                importObj.rule.nodes.find(\n                    (decl) => decl.type === 'decl' && decl.prop === PseudoImportDecl.FROM\n                );\n\n            context.diagnostics.report(\n                diagnostics.UNKNOWN_IMPORTED_FILE(importObj.request, getErrorText(entity)),\n                {\n                    node: fromDecl || importObj.rule,\n                    word: importObj.request,\n                }\n            );\n        } else if (entity.kind === 'css') {\n            const meta = entity.value;\n            // propagate some native CSS diagnostics to st-import\n            if (meta.type === 'css') {\n                let foundUnsupportedNativeImport = false;\n                for (const report of meta.diagnostics.reports) {\n                    if (report.code === '05021') {\n                        foundUnsupportedNativeImport = true;\n                        break;\n                    }\n                }\n                if (foundUnsupportedNativeImport) {\n                    context.diagnostics.report(diagnostics.UNSUPPORTED_NATIVE_IMPORT(), {\n                        node: importObj.rule,\n                        word: importObj.defaultExport,\n                    });\n                }\n            }\n            // report unsupported native CSS default import\n            if (meta.type !== 'stylable' && importObj.defaultExport) {\n                context.diagnostics.report(diagnostics.NO_DEFAULT_EXPORT(importObj.request), {\n                    node: importObj.rule,\n                    word: importObj.defaultExport,\n                });\n            }\n            // warn about unknown named imported symbols\n            for (const name in importObj.named) {\n                const origName = importObj.named[name];\n                const resolvedSymbol = context.resolver.resolveImported(importObj, origName);\n                if (resolvedSymbol === null || !resolvedSymbol.symbol) {\n                    const namedDecl =\n                        importObj.rule.nodes &&\n                        importObj.rule.nodes.find(\n                            (decl) => decl.type === 'decl' && decl.prop === PseudoImportDecl.NAMED\n                        );\n\n                    context.diagnostics.report(\n                        diagnostics.UNKNOWN_IMPORTED_SYMBOL(origName, importObj.request),\n                        { node: namedDecl || importObj.rule, word: origName }\n                    );\n                }\n            }\n        } else if (entity.kind === 'js') {\n            // TODO: add diagnostics for JS imports (typeof checks)\n        }\n    }\n}\n\nfunction getErrorText(res: CachedModuleEntity) {\n    if ('error' in res) {\n        const { error } = res;\n        if (typeof error === 'object' && error) {\n            return 'details' in error\n                ? String(error.details)\n                : 'message' in error\n                ? String(error.message)\n                : String(error);\n        }\n        return String(error);\n    }\n    return '';\n}\n", "import { createDiagnosticReporter } from '../diagnostics';\n\nexport const generalDiagnostics = {\n    INVALID_FUNCTIONAL_SELECTOR: createDiagnosticReporter(\n        '00001',\n        'error',\n        (selector: string, type: string) => `\"${selector}\" ${type} is not functional`\n    ),\n    FORBIDDEN_DEF_IN_COMPLEX_SELECTOR: createDiagnosticReporter(\n        '05014',\n        'error',\n        (name: string) => `cannot define \"${name}\" inside a complex selector`\n    ),\n};\n", "import path from 'path';\nimport { parseImports } from '@tokey/imports-parser';\nimport { createDiagnosticReporter, Diagnostics } from '../diagnostics';\nimport type { Imported } from '../features';\nimport { Root, decl, Declaration, atRule, rule, Rule, AtRule } from 'postcss';\nimport { stripQuotation } from '../helpers/string';\nimport { isCompRoot } from './selector';\nimport type { ParsedValue } from '../types';\nimport type { StylableMeta } from '../stylable-meta';\nimport type * as postcss from 'postcss';\nimport postcssValueParser, {\n    ParsedValue as PostCSSParsedValue,\n    FunctionNode,\n} from 'postcss-value-parser';\nimport type { StylableResolver } from '../stylable-resolver';\n\nexport const parseImportMessages = {\n    ST_IMPORT_STAR: createDiagnosticReporter(\n        '05001',\n        'error',\n        () => '@st-import * is not supported'\n    ),\n    INVALID_ST_IMPORT_FORMAT: createDiagnosticReporter(\n        '05002',\n        'error',\n        (errors: string[]) => `Invalid @st-import format:\\n - ${errors.join('\\n - ')}`\n    ),\n    ST_IMPORT_EMPTY_FROM: createDiagnosticReporter(\n        '05003',\n        'error',\n        () => '@st-import must specify a valid \"from\" string value'\n    ),\n    EMPTY_IMPORT_FROM: createDiagnosticReporter(\n        '05004',\n        'error',\n        () => '\"-st-from\" cannot be empty'\n    ),\n    MULTIPLE_FROM_IN_IMPORT: createDiagnosticReporter(\n        '05005',\n        'warning',\n        () => `cannot define multiple \"-st-from\" declarations in a single import`\n    ),\n    DEFAULT_IMPORT_IS_LOWER_CASE: createDiagnosticReporter(\n        '05006',\n        'warning',\n        () => 'Default import of a Stylable stylesheet must start with an upper-case letter'\n    ),\n    ILLEGAL_PROP_IN_IMPORT: createDiagnosticReporter(\n        '05007',\n        'warning',\n        (propName: string) => `\"${propName}\" css attribute cannot be used inside :import block`\n    ),\n    FROM_PROP_MISSING_IN_IMPORT: createDiagnosticReporter(\n        '05008',\n        'error',\n        () => `\"-st-from\" is missing in :import block`\n    ),\n    INVALID_NAMED_IMPORT_AS: createDiagnosticReporter(\n        '05009',\n        'error',\n        (name: string) => `Invalid named import \"as\" with name \"${name}\"`\n    ),\n    INVALID_NESTED_KEYFRAMES: createDiagnosticReporter(\n        '05010',\n        'error',\n        (name: string) => `Invalid nested keyframes import \"${name}\"`\n    ),\n    INVALID_NESTED_TYPED_IMPORT: createDiagnosticReporter(\n        '05019',\n        'warning',\n        (type: string, name: string) => `Invalid nested ${type} import \"${name}\"`\n    ),\n};\n\nexport const ensureImportsMessages = {\n    ATTEMPT_OVERRIDE_SYMBOL: createDiagnosticReporter(\n        '16001',\n        'error',\n        (kind: 'default' | 'named' | 'keyframes', origin: string, override: string) =>\n            `Attempt to override existing ${kind} import symbol. ${origin} -> ${override}`\n    ),\n    PATCH_CONTAINS_NEW_IMPORT_IN_NEW_IMPORT_NONE_MODE: createDiagnosticReporter(\n        '16002',\n        'error',\n        () => `Attempt to insert new a import in newImport \"none\" mode`\n    ),\n};\n\nexport function createAtImportProps(\n    importObj: Partial<Pick<Imported, 'named' | 'keyframes' | 'defaultExport' | 'request'>>\n): {\n    name: string;\n    params: string;\n} {\n    const named = Object.entries(importObj.named || {});\n    const keyframes = Object.entries(importObj.keyframes || {});\n    let params = '';\n    if (importObj.defaultExport) {\n        params += importObj.defaultExport;\n    }\n    if (importObj.defaultExport && (named.length || keyframes.length)) {\n        params += ', ';\n    }\n    if (named.length || keyframes.length) {\n        params += '[';\n\n        const namedParts = getNamedImportParts(named);\n        const keyFramesParts = getNamedImportParts(keyframes);\n\n        params += namedParts.join(', ');\n\n        if (keyFramesParts.length) {\n            if (namedParts.length) {\n                params += ', ';\n            }\n            params += `keyframes(${keyFramesParts.join(', ')})`;\n        }\n        params += ']';\n    }\n\n    params += ` from ${JSON.stringify(importObj.request || '')}`;\n    return { name: 'st-import', params };\n}\n\nexport function ensureModuleImport(\n    ast: Root,\n    importPatches: Array<ImportPatch>,\n    options: {\n        newImport: 'none' | 'st-import' | ':import';\n    },\n    diagnostics: Diagnostics = new Diagnostics()\n) {\n    const patches = createImportPatches(ast, importPatches, options, diagnostics);\n    if (!diagnostics.reports.length) {\n        for (const patch of patches) {\n            patch();\n        }\n    }\n    return { diagnostics };\n}\nfunction createImportPatches(\n    ast: Root,\n    importPatches: Array<ImportPatch>,\n    { newImport }: { newImport: 'none' | 'st-import' | ':import' },\n    diagnostics: Diagnostics\n) {\n    const patches: Array<() => void> = [];\n    const handled = new Set<ImportPatch>();\n    for (const node of ast.nodes) {\n        if (node.type === 'atrule' && node.name === 'st-import') {\n            const imported = parseStImport(node, '*', diagnostics);\n            processImports(imported, importPatches, handled, diagnostics);\n            patches.push(() => node.assign(createAtImportProps(imported)));\n        } else if (node.type === 'rule' && node.selector === ':import') {\n            const imported = parsePseudoImport(node, '*', diagnostics);\n            processImports(imported, importPatches, handled, diagnostics);\n\n            patches.push(() => {\n                const named = generateNamedValue(imported);\n                const { defaultDecls, namedDecls } = patchDecls(node, named, imported);\n\n                if (imported.defaultExport) {\n                    ensureSingleDecl(defaultDecls, node, '-st-default', imported.defaultExport);\n                }\n                if (named.length) {\n                    ensureSingleDecl(namedDecls, node, '-st-named', named.join(', '));\n                }\n            });\n        }\n    }\n    if (newImport === 'none') {\n        if (handled.size !== importPatches.length) {\n            diagnostics.report(\n                ensureImportsMessages.PATCH_CONTAINS_NEW_IMPORT_IN_NEW_IMPORT_NONE_MODE(),\n                { node: ast }\n            );\n        }\n        return patches;\n    }\n    if (handled.size === importPatches.length) {\n        return patches;\n    }\n    for (const item of importPatches) {\n        if (handled.has(item)) {\n            continue;\n        }\n        if (!hasDefinitions(item)) {\n            continue;\n        }\n        if (newImport === 'st-import') {\n            patches.push(() => {\n                ast.prepend(\n                    atRule(\n                        createAtImportProps({\n                            defaultExport: item.defaultExport || '',\n                            keyframes: item.keyframes || {},\n                            named: item.named || {},\n                            request: item.request,\n                        })\n                    )\n                );\n            });\n        } else {\n            patches.push(() => {\n                ast.prepend(rule(createPseudoImportProps(item)));\n            });\n        }\n    }\n    return patches;\n}\n\nfunction setImportObjectFrom(importPath: string, dirPath: string, importObj: Imported) {\n    if (!path.isAbsolute(importPath) && !importPath.startsWith('.')) {\n        importObj.request = importPath;\n        importObj.from = importPath;\n    } else {\n        importObj.request = importPath;\n        importObj.from =\n            path.posix && path.posix.isAbsolute(dirPath) // browser has no posix methods\n                ? path.posix.resolve(dirPath, importPath)\n                : path.resolve(dirPath, importPath);\n    }\n}\n\nexport function parseModuleImportStatement(\n    node: AtRule | Rule,\n    context: string,\n    diagnostics: Diagnostics\n) {\n    if (node.type === 'atrule') {\n        return parseStImport(node, context, diagnostics);\n    } else {\n        return parsePseudoImport(node, context, diagnostics);\n    }\n}\n\nexport function parseStImport(atRule: AtRule, context: string, diagnostics: Diagnostics) {\n    const keyframes = {};\n    const importObj: Imported = {\n        defaultExport: '',\n        from: '',\n        request: '',\n        named: {},\n        rule: atRule,\n        context,\n        keyframes,\n        typed: {\n            keyframes,\n        },\n    };\n    const imports = parseImports(`import ${atRule.params}`, '[', ']', true)[0];\n\n    if (imports && imports.star) {\n        diagnostics.report(parseImportMessages.ST_IMPORT_STAR(), { node: atRule });\n    } else {\n        setImportObjectFrom(imports.from || '', context, importObj);\n\n        importObj.defaultExport = imports.defaultName || '';\n        if (\n            importObj.defaultExport &&\n            !isCompRoot(importObj.defaultExport) &&\n            importObj.from.endsWith(`.css`)\n        ) {\n            diagnostics.report(parseImportMessages.DEFAULT_IMPORT_IS_LOWER_CASE(), {\n                node: atRule,\n                word: importObj.defaultExport,\n            });\n        }\n        if (imports.tagged) {\n            for (const [kind, namedTyped] of Object.entries(imports.tagged)) {\n                if (!namedTyped) {\n                    continue;\n                }\n                for (const [impName, impAsName] of namedTyped) {\n                    importObj.typed[kind] ??= {};\n                    importObj.typed[kind][impAsName] = impName;\n                }\n            }\n        }\n        if (imports.named) {\n            for (const [impName, impAsName] of imports.named) {\n                importObj.named[impAsName] = impName;\n            }\n        }\n        if (imports.errors.length) {\n            diagnostics.report(parseImportMessages.INVALID_ST_IMPORT_FORMAT(imports.errors), {\n                node: atRule,\n            });\n        } else if (!imports.from?.trim()) {\n            diagnostics.report(parseImportMessages.ST_IMPORT_EMPTY_FROM(), { node: atRule });\n        }\n    }\n\n    return importObj;\n}\n\nexport function parsePseudoImport(rule: Rule, context: string, diagnostics: Diagnostics) {\n    let fromExists = false;\n    const keyframes = {};\n    const importObj: Imported = {\n        defaultExport: '',\n        from: '',\n        request: '',\n        named: {},\n        keyframes,\n        typed: {\n            keyframes,\n        },\n        rule,\n        context,\n    };\n\n    rule.walkDecls((decl) => {\n        switch (decl.prop) {\n            case `-st-from`: {\n                const importPath = stripQuotation(decl.value);\n                if (!importPath.trim()) {\n                    diagnostics.report(parseImportMessages.EMPTY_IMPORT_FROM(), { node: decl });\n                }\n\n                if (fromExists) {\n                    diagnostics.report(parseImportMessages.MULTIPLE_FROM_IN_IMPORT(), {\n                        node: rule,\n                    });\n                }\n\n                setImportObjectFrom(importPath, context, importObj);\n                fromExists = true;\n                break;\n            }\n            case `-st-default`:\n                importObj.defaultExport = decl.value;\n                if (!isCompRoot(importObj.defaultExport) && importObj.from.endsWith(`.css`)) {\n                    diagnostics.report(parseImportMessages.DEFAULT_IMPORT_IS_LOWER_CASE(), {\n                        node: decl,\n                        word: importObj.defaultExport,\n                    });\n                }\n                break;\n            case `-st-named`:\n                {\n                    const { typedMap, namedMap } = parsePseudoImportNamed(\n                        decl.value,\n                        decl,\n                        diagnostics\n                    );\n                    importObj.named = namedMap;\n                    importObj.keyframes = typedMap.keyframes || {};\n                    importObj.typed = typedMap;\n                }\n                break;\n            default:\n                diagnostics.report(parseImportMessages.ILLEGAL_PROP_IN_IMPORT(decl.prop), {\n                    node: decl,\n                    word: decl.prop,\n                });\n                break;\n        }\n    });\n\n    if (!importObj.from) {\n        diagnostics.report(parseImportMessages.FROM_PROP_MISSING_IN_IMPORT(), {\n            node: rule,\n        });\n    }\n    return importObj;\n}\n\nexport function parsePseudoImportNamed(\n    value: string,\n    node: postcss.Declaration | postcss.AtRule,\n    diagnostics: Diagnostics\n) {\n    const namedMap: Record<string, string> = {};\n    const typedMap: Record<string, Record<string, string>> = {};\n    if (value) {\n        handleNamedTokens(postcssValueParser(value), namedMap, typedMap, node, diagnostics);\n    }\n    return { namedMap, typedMap };\n}\n\nfunction createPseudoImportProps(\n    item: Partial<Pick<Imported, 'named' | 'keyframes' | 'defaultExport' | 'request'>>\n) {\n    const nodes = [];\n    const named = generateNamedValue(item);\n    if (item.request) {\n        nodes.push(decl({ prop: '-st-from', value: JSON.stringify(item.request) }));\n    }\n    if (item.defaultExport) {\n        nodes.push(\n            decl({\n                prop: '-st-default',\n                value: item.defaultExport,\n            })\n        );\n    }\n    if (named.length) {\n        nodes.push(\n            decl({\n                prop: '-st-named',\n                value: named.join(', '),\n            })\n        );\n    }\n\n    return {\n        selector: ':import',\n        nodes,\n    };\n}\n\nfunction patchDecls(node: Rule, named: string[], pseudoImport: Imported) {\n    const namedDecls: Declaration[] = [];\n    const defaultDecls: Declaration[] = [];\n    for (const decl of node.nodes) {\n        if (decl.type !== 'decl') {\n            continue;\n        }\n        if (decl.prop === '-st-named') {\n            decl.assign({ value: named.join(', ') });\n            namedDecls.push(decl);\n        } else if (decl.prop === '-st-default') {\n            decl.assign({ value: pseudoImport.defaultExport });\n            defaultDecls.push(decl);\n        }\n    }\n    return { defaultDecls, namedDecls };\n}\n\nfunction ensureSingleDecl(decls: Declaration[], node: Rule, prop: string, value: string) {\n    if (!decls.length) {\n        node.append(decl({ prop, value }));\n    } else if (decls.length > 1) {\n        // remove duplicates keep last one\n        for (let i = 0; i < decls.length - 1; i++) {\n            decls[i].remove();\n        }\n    }\n}\n\nfunction getNamedImportParts(named: [string, string][]) {\n    const parts: string[] = [];\n    for (const [as, name] of named) {\n        if (as === name) {\n            parts.push(name);\n        } else {\n            parts.push(`${name} as ${as}`);\n        }\n    }\n\n    return parts;\n}\n\ntype ImportPatch = Partial<Pick<Imported, 'defaultExport' | 'named' | 'keyframes'>> &\n    Pick<Imported, 'request'>;\n\nfunction generateNamedValue({\n    named = {},\n    keyframes = {},\n}: Partial<Pick<Imported, 'named' | 'keyframes'>>) {\n    const namedParts = getNamedImportParts(Object.entries(named));\n    const keyframesParts = getNamedImportParts(Object.entries(keyframes));\n    if (keyframesParts.length) {\n        namedParts.push(`keyframes(${keyframesParts.join(', ')})`);\n    }\n    return namedParts;\n}\n\nfunction hasDefinitions({\n    named = {},\n    keyframes = {},\n    defaultExport,\n}: Partial<Pick<Imported, 'named' | 'keyframes' | 'defaultExport'>>) {\n    return defaultExport || Object.keys(named).length || Object.keys(keyframes).length;\n}\n\nfunction processImports(\n    imported: Imported,\n    importPatches: Array<ImportPatch>,\n    handled: Set<ImportPatch>,\n    diagnostics: Diagnostics\n) {\n    const ops = ['named', 'keyframes'] as const;\n    for (const patch of importPatches) {\n        if (handled.has(patch)) {\n            continue;\n        }\n        if (imported.request === patch.request) {\n            for (const op of ops) {\n                const patchBucket = patch[op];\n                if (!patchBucket) {\n                    continue;\n                }\n                for (const [asName, symbol] of Object.entries(patchBucket)) {\n                    const currentSymbol = imported[op][asName];\n                    if (currentSymbol === symbol) {\n                        continue;\n                    } else if (currentSymbol) {\n                        diagnostics.report(\n                            ensureImportsMessages.ATTEMPT_OVERRIDE_SYMBOL(\n                                op,\n                                currentSymbol === asName\n                                    ? currentSymbol\n                                    : `${currentSymbol} as ${asName}`,\n                                symbol === asName ? symbol : `${symbol} as ${asName}`\n                            ),\n                            {\n                                node: imported.rule,\n                            }\n                        );\n                    } else {\n                        imported[op][asName] = symbol;\n                    }\n                }\n            }\n\n            if (patch.defaultExport) {\n                if (!imported.defaultExport) {\n                    imported.defaultExport = patch.defaultExport;\n                } else if (imported.defaultExport !== patch.defaultExport) {\n                    diagnostics.report(\n                        ensureImportsMessages.ATTEMPT_OVERRIDE_SYMBOL(\n                            'default',\n                            imported.defaultExport,\n                            patch.defaultExport\n                        ),\n                        {\n                            node: imported.rule,\n                        }\n                    );\n                }\n            }\n            handled.add(patch);\n        }\n    }\n}\n\nfunction handleNamedTokens(\n    tokens: PostCSSParsedValue | FunctionNode,\n    mainBucket: Record<string, string>,\n    typedBuckets: Record<string, Record<string, string>> | null,\n    node: postcss.Declaration | postcss.AtRule,\n    diagnostics: Diagnostics\n) {\n    const { nodes } = tokens;\n    for (let i = 0; i < nodes.length; i++) {\n        const token = nodes[i];\n        if (token.type === 'word') {\n            const space = nodes[i + 1];\n            const as = nodes[i + 2];\n            const spaceAfter = nodes[i + 3];\n            const asName = nodes[i + 4];\n            if (isImportAs(space, as)) {\n                if (spaceAfter?.type === 'space' && asName?.type === 'word') {\n                    mainBucket[asName.value] = token.value;\n                    i += 4; //ignore next 4 tokens\n                } else {\n                    i += !asName ? 3 : 2;\n                    diagnostics.report(parseImportMessages.INVALID_NAMED_IMPORT_AS(token.value), {\n                        node,\n                    });\n                    continue;\n                }\n            } else {\n                mainBucket[token.value] = token.value;\n            }\n        } else if (token.type === 'function') {\n            if (!typedBuckets) {\n                diagnostics.report(\n                    parseImportMessages.INVALID_NESTED_TYPED_IMPORT(\n                        token.value,\n                        postcssValueParser.stringify(token)\n                    ),\n                    { node }\n                );\n            } else {\n                typedBuckets[token.value] ??= {};\n                handleNamedTokens(token, typedBuckets[token.value], null, node, diagnostics);\n            }\n        }\n    }\n}\n\nfunction isImportAs(space: ParsedValue, as: ParsedValue) {\n    return space?.type === 'space' && as?.type === 'word' && as?.value === 'as';\n}\n\ntype ImportEvent = {\n    context: string;\n    request: string;\n    resolved: string;\n    depth: number;\n};\n\nexport function tryCollectImportsDeep(\n    resolver: StylableResolver,\n    meta: StylableMeta,\n    imports = new Set<string>(),\n    onImport: undefined | ((e: ImportEvent) => void) = undefined,\n    depth = 0\n) {\n    for (const { context, request } of meta.getImportStatements()) {\n        try {\n            const resolved = resolver.resolvePath(context, request);\n            onImport?.({ context, request, resolved, depth });\n\n            if (!imports.has(resolved)) {\n                imports.add(resolved);\n                if (resolved.endsWith('.st.css')) {\n                    tryCollectImportsDeep(\n                        resolver,\n                        resolver.analyze(resolved),\n                        imports,\n                        onImport,\n                        depth + 1\n                    );\n                }\n            }\n        } catch {\n            /** */\n        }\n    }\n    return imports;\n}\n", "export function stripQuotation(str: string) {\n    return str.replace(/^['\"](.*?)['\"]$/g, '$1');\n}\n\nexport function filename2varname(filename: string) {\n    return string2varname(filename.replace(/(?=.*)\\.\\w+$/, '').replace(/\\.st$/, ''));\n}\n\nfunction string2varname(str: string) {\n    return str.replace(/[^0-9a-zA-Z_]/gm, '').replace(/^[^a-zA-Z_]+/gm, '');\n}\n", "import type * as postcss from 'postcss';\nimport { createDiagnosticReporter, Diagnostics } from '../diagnostics';\nimport { stripQuotation } from '../helpers/string';\n\nconst UNIVERSAL_SYNTAX_DEFINITION = '*';\nconst AT_PROPERTY_DISCRIPTOR_LIST = ['initial-value', 'syntax', 'inherits'];\n\ninterface AtPropertyValidationResponse {\n    valid: boolean;\n}\n\nexport const atPropertyValidationWarnings = {\n    MISSING_REQUIRED_DESCRIPTOR: createDiagnosticReporter(\n        '01001',\n        'error',\n        (descriptorName: string) => `@property rules require a \"${descriptorName}\" descriptor`\n    ),\n    MISSING_REQUIRED_INITIAL_VALUE_DESCRIPTOR: createDiagnosticReporter(\n        '01002',\n        'warning',\n        () =>\n            '@property \"initial-value\" descriptor is optional only if the \"syntax\" is the universal syntax definition, otherwise the descriptor is required'\n    ),\n    INVALID_DESCRIPTOR_TYPE: createDiagnosticReporter(\n        '01003',\n        'error',\n        (descriptorType: string) =>\n            `@property does not support descriptor of type \"${descriptorType}\"`\n    ),\n    INVALID_DESCRIPTOR_NAME: createDiagnosticReporter(\n        '01004',\n        'error',\n        (descriptorName: string) =>\n            `@property does not support descriptor named \"${descriptorName}\"`\n    ),\n};\n\nexport function validateAtProperty(\n    atRule: postcss.AtRule,\n    diagnostics: Diagnostics\n): AtPropertyValidationResponse {\n    const name = atRule.params;\n    const atPropertyValues: Map<string, string> = new Map();\n\n    if (!atRule.nodes?.length) {\n        return {\n            valid: true,\n        };\n    }\n\n    for (const node of atRule.nodes) {\n        if (node.type !== 'decl') {\n            if (node.type === 'atrule' || node.type === 'rule') {\n                diagnostics.report(\n                    atPropertyValidationWarnings.INVALID_DESCRIPTOR_TYPE(node.type),\n                    {\n                        node,\n                        word: 'params' in node ? node.params : node.selector,\n                    }\n                );\n            }\n\n            continue;\n        }\n\n        if (!AT_PROPERTY_DISCRIPTOR_LIST.includes(node.prop)) {\n            diagnostics.report(atPropertyValidationWarnings.INVALID_DESCRIPTOR_NAME(node.prop), {\n                node,\n                word: node.prop,\n            });\n\n            continue;\n        }\n\n        atPropertyValues.set(node.prop, stripQuotation(node.value));\n    }\n\n    if (!atPropertyValues.has('syntax')) {\n        diagnostics.report(atPropertyValidationWarnings.MISSING_REQUIRED_DESCRIPTOR('syntax'), {\n            node: atRule,\n            word: name,\n        });\n\n        return {\n            valid: false,\n        };\n    }\n\n    if (!atPropertyValues.has('inherits')) {\n        diagnostics.report(atPropertyValidationWarnings.MISSING_REQUIRED_DESCRIPTOR('inherits'), {\n            node: atRule,\n            word: name,\n        });\n\n        return {\n            valid: false,\n        };\n    }\n\n    if (\n        !atPropertyValues.has('initial-value') &&\n        atPropertyValues.get('syntax') !== UNIVERSAL_SYNTAX_DEFINITION\n    ) {\n        diagnostics.report(\n            atPropertyValidationWarnings.MISSING_REQUIRED_INITIAL_VALUE_DESCRIPTOR(),\n            {\n                node: atRule,\n                word: name,\n            }\n        );\n\n        return {\n            valid: false,\n        };\n    }\n\n    return {\n        valid: true,\n    };\n}\n\nexport function validateCustomPropertyName(value: string) {\n    return value.startsWith('--');\n}\n\nexport function generateScopedCSSVar(namespace: string, varName: string) {\n    return `--${namespace}-${varName}`;\n}\n", "import path from 'path';\nimport { createFeature, FeatureContext } from './feature';\nimport { plugableRecord } from '../helpers/plugable-record';\nimport { filename2varname } from '../helpers/string';\nimport { stripQuotation } from '../helpers/string';\nimport valueParser from 'postcss-value-parser';\nimport { murmurhash3_32_gc } from '../murmurhash';\nimport { createDiagnosticReporter, Diagnostics } from '../diagnostics';\nimport type { AtRule } from 'postcss';\n\nexport const diagnostics = {\n    INVALID_NAMESPACE_DEF: createDiagnosticReporter(\n        '11007',\n        'error',\n        () => 'invalid @st-namespace'\n    ),\n    EMPTY_NAMESPACE_DEF: createDiagnosticReporter(\n        '11008',\n        'error',\n        () => '@st-namespace must contain at least one character or digit'\n    ),\n    EXTRA_DEFINITION: createDiagnosticReporter(\n        '11012',\n        'error',\n        () => '@st-namespace must contain a single string definition'\n    ),\n    INVALID_NAMESPACE_VALUE: createDiagnosticReporter(\n        '11013',\n        'error',\n        () => '@st-namespace must contain only letters, numbers or dashes'\n    ),\n    INVALID_NAMESPACE_REFERENCE: createDiagnosticReporter(\n        '11010',\n        'error',\n        () => 'st-namespace-reference dose not have any value'\n    ),\n    NATIVE_OVERRIDE_DEPRECATION: createDiagnosticReporter(\n        '11014',\n        'info',\n        () => '@namespace will stop working in version 6, use @st-namespace instead'\n    ),\n};\n\nconst dataKey = plugableRecord.key<{\n    namespaces: string[];\n    usedNativeNamespace: string[];\n    usedNativeNamespaceNodes: AtRule[];\n    foundStNamespace: boolean;\n}>('namespace');\n\n// HOOKS\n\nexport const hooks = createFeature({\n    metaInit({ meta }) {\n        plugableRecord.set(meta.data, dataKey, {\n            namespaces: [],\n            usedNativeNamespace: [],\n            usedNativeNamespaceNodes: [],\n            foundStNamespace: false,\n        });\n    },\n    analyzeAtRule({ context, atRule }) {\n        const isSTNamespace = atRule.name === 'st-namespace';\n        const isNamespace = atRule.name === 'namespace';\n        if (!isSTNamespace && !isNamespace) {\n            return;\n        }\n        const data = plugableRecord.getUnsafe(context.meta.data, dataKey);\n        if (data.foundStNamespace && isNamespace) {\n            // ignore @namespace once @st-namespace was found\n            return;\n        }\n        const diag = isSTNamespace ? context.diagnostics : undefined;\n        const match = parseNamespace(atRule, diag);\n        if (match) {\n            data.namespaces.push(match);\n            if (isNamespace) {\n                data.usedNativeNamespace.push(atRule.params);\n                data.usedNativeNamespaceNodes.push(atRule);\n            } else {\n                // clear @namespace matches once @st-namespace if found\n                data.usedNativeNamespace.length = 0;\n                data.usedNativeNamespaceNodes.length = 0;\n                // mark to prevent any further @namespace collection\n                data.foundStNamespace = true;\n            }\n        }\n    },\n    analyzeDone(context) {\n        const { usedNativeNamespaceNodes } = plugableRecord.getUnsafe(context.meta.data, dataKey);\n        for (const node of usedNativeNamespaceNodes) {\n            context.diagnostics.report(diagnostics.NATIVE_OVERRIDE_DEPRECATION(), {\n                node,\n            });\n        }\n    },\n    prepareAST({ context, node, toRemove }) {\n        // remove @st-namespace or @namespace that was used as @st-namespace\n        const { usedNativeNamespace } = plugableRecord.getUnsafe(context.meta.data, dataKey);\n        if (\n            node.type === 'atrule' &&\n            (node.name === 'st-namespace' ||\n                (node.name === 'namespace' && usedNativeNamespace.includes(node.params)))\n        ) {\n            toRemove.push(node);\n        }\n    },\n});\n\n// API\n\nexport function parseNamespace(node: AtRule, diag?: Diagnostics): string | undefined {\n    const { nodes } = valueParser(node.params);\n    if (!nodes.length) {\n        // empty params (not even empty quotes)\n        diag?.report(diagnostics.EMPTY_NAMESPACE_DEF(), { node });\n        return;\n    }\n    let isInvalid = false;\n    let namespace: string | undefined = undefined;\n    for (const valueNode of nodes) {\n        switch (valueNode.type) {\n            case 'string': {\n                if (namespace === undefined) {\n                    // first namespace\n                    if (!isInvalid) {\n                        namespace = stripQuotation(valueNode.value);\n                    }\n                } else {\n                    // extra definition - mark as invalid and clear namespace\n                    diag?.report(diagnostics.EXTRA_DEFINITION(), {\n                        node,\n                        word: valueParser.stringify(valueNode),\n                    });\n                    isInvalid = true;\n                    namespace = undefined;\n                }\n                break;\n            }\n            case 'comment':\n            case 'space':\n                // do nothing\n                break;\n            default: {\n                // invalid definition - mark as invalid and clear namespace\n                diag?.report(diagnostics.EXTRA_DEFINITION(), {\n                    node,\n                    word: valueParser.stringify(valueNode),\n                });\n                isInvalid = true;\n                namespace = undefined;\n            }\n        }\n    }\n    if (namespace === undefined) {\n        // no namespace found\n        diag?.report(diagnostics.INVALID_NAMESPACE_DEF(), {\n            node,\n        });\n        return;\n    }\n    if (namespace !== undefined && namespace.trim() === '') {\n        // empty namespace found\n        diag?.report(diagnostics.EMPTY_NAMESPACE_DEF(), {\n            node,\n        });\n        return;\n    }\n    // ident like - without escapes\n    // eslint-disable-next-line no-control-regex\n    if (!namespace.match(/^([a-zA-Z-_]|[^\\x00-\\x7F]+)([a-zA-Z-_0-9]|[^\\x00-\\x7F])*$/)) {\n        // empty namespace found\n        diag?.report(diagnostics.INVALID_NAMESPACE_VALUE(), {\n            node,\n            word: namespace,\n        });\n        return;\n    }\n    return namespace;\n}\n\nexport function defaultProcessNamespace(namespace: string, origin: string, _source?: string) {\n    return namespace + murmurhash3_32_gc(origin); // .toString(36);\n}\n\nexport function setMetaNamespace(\n    context: FeatureContext,\n    resolveNamespace: typeof defaultProcessNamespace\n): void {\n    const meta = context.meta;\n    // resolve namespace\n    const { namespaces } = plugableRecord.getUnsafe(meta.data, dataKey);\n    const namespace =\n        namespaces[namespaces.length - 1] || filename2varname(path.basename(meta.source)) || 's';\n    // resolve path origin\n    let pathToSource: string | undefined;\n    let length = meta.sourceAst.nodes.length;\n    while (length--) {\n        const node = meta.sourceAst.nodes[length];\n        if (node.type === 'comment' && node.text.includes('st-namespace-reference')) {\n            const i = node.text.indexOf('=');\n            if (i === -1) {\n                context.diagnostics.report(diagnostics.INVALID_NAMESPACE_REFERENCE(), {\n                    node,\n                });\n            } else {\n                pathToSource = stripQuotation(node.text.slice(i + 1));\n            }\n            break;\n        }\n    }\n    // generate final namespace\n    meta.namespace = resolveNamespace(\n        namespace,\n        pathToSource ? path.resolve(path.dirname(meta.source), pathToSource) : meta.source,\n        meta.source\n    );\n}\n", "/* eslint-disable no-fallthrough */\n/* eslint-disable @typescript-eslint/ban-ts-comment */\n/**\n * JS Implementation of MurmurHash3 (r136) (as of May 20, 2011)\n *\n * @author <a href=\"mailto:gary.court@gmail.com\">Gary Court</a>\n * @see http://github.com/garycourt/murmurhash-js\n * @author <a href=\"mailto:aappleby@gmail.com\">Austin Appleby</a>\n * @see http://sites.google.com/site/murmurhash/\n *\n * @param {string} key ASCII only\n * @param {number} seed Positive integer only\n * @return {number} 32-bit positive integer hash\n */\nexport function murmurhash3_32_gc(key: string, seed = 0) {\n    const remainder = key.length & 3; // key.length % 4\n    const bytes = key.length - remainder;\n    const c1 = 0xcc9e2d51;\n    const c2 = 0x1b873593;\n    let h1 = seed;\n    let i = 0;\n    let k1 = 0;\n    let h1b = 0;\n    while (i < bytes) {\n        k1 =\n            (key.charCodeAt(i) & 0xff) |\n            ((key.charCodeAt(++i) & 0xff) << 8) |\n            ((key.charCodeAt(++i) & 0xff) << 16) |\n            ((key.charCodeAt(++i) & 0xff) << 24);\n        ++i;\n\n        k1 = ((k1 & 0xffff) * c1 + ((((k1 >>> 16) * c1) & 0xffff) << 16)) & 0xffffffff;\n        k1 = (k1 << 15) | (k1 >>> 17);\n        k1 = ((k1 & 0xffff) * c2 + ((((k1 >>> 16) * c2) & 0xffff) << 16)) & 0xffffffff;\n\n        h1 ^= k1;\n        h1 = (h1 << 13) | (h1 >>> 19);\n        h1b = ((h1 & 0xffff) * 5 + ((((h1 >>> 16) * 5) & 0xffff) << 16)) & 0xffffffff;\n        h1 = (h1b & 0xffff) + 0x6b64 + ((((h1b >>> 16) + 0xe654) & 0xffff) << 16);\n    }\n\n    k1 = 0;\n    switch (remainder) {\n        // @ts-expect-error\n        case 3:\n            k1 ^= (key.charCodeAt(i + 2) & 0xff) << 16;\n        // @ts-expect-error\n        case 2:\n            k1 ^= (key.charCodeAt(i + 1) & 0xff) << 8;\n        case 1:\n            k1 ^= key.charCodeAt(i) & 0xff;\n\n            k1 = ((k1 & 0xffff) * c1 + ((((k1 >>> 16) * c1) & 0xffff) << 16)) & 0xffffffff;\n            k1 = (k1 << 15) | (k1 >>> 17);\n            k1 = ((k1 & 0xffff) * c2 + ((((k1 >>> 16) * c2) & 0xffff) << 16)) & 0xffffffff;\n            h1 ^= k1;\n    }\n\n    h1 ^= key.length;\n\n    h1 ^= h1 >>> 16;\n    h1 = ((h1 & 0xffff) * 0x85ebca6b + ((((h1 >>> 16) * 0x85ebca6b) & 0xffff) << 16)) & 0xffffffff;\n    h1 ^= h1 >>> 13;\n    h1 = ((h1 & 0xffff) * 0xc2b2ae35 + ((((h1 >>> 16) * 0xc2b2ae35) & 0xffff) << 16)) & 0xffffffff;\n    h1 ^= h1 >>> 16;\n\n    return h1 >>> 0;\n}\n", "import { createFeature } from './feature';\nimport { plugableRecord } from '../helpers/plugable-record';\nimport {\n    walkSelector,\n    stringifySelector,\n    parseSelectorWithCache,\n    flattenFunctionalSelector,\n    isCompRoot,\n} from '../helpers/selector';\nimport type { StylableMeta } from '../stylable-meta';\nimport type { ImmutableSelectorNode, SelectorList } from '@tokey/css-selector-parser';\nimport { createDiagnosticReporter } from '../diagnostics';\nimport type * as postcss from 'postcss';\n\nconst dataKey = plugableRecord.key<{\n    rules: Map<\n        postcss.Rule | postcss.AtRule,\n        {\n            isGlobal: boolean;\n            checkedRule: postcss.AtRule | postcss.Rule;\n            topLevelSelectorsFlags: boolean[];\n        }\n    >;\n}>('globals');\n\nexport const diagnostics = {\n    UNSUPPORTED_MULTI_SELECTOR_IN_GLOBAL: createDiagnosticReporter(\n        '04001',\n        'error',\n        () => `unsupported multi selector in :global()`\n    ),\n};\n\n// HOOKS\n\nexport const hooks = createFeature<{ IMMUTABLE_SELECTOR: ImmutableSelectorNode }>({\n    metaInit({ meta }) {\n        plugableRecord.set(meta.data, dataKey, { rules: new Map() });\n    },\n    analyzeSelectorNode({ context, node, topSelectorIndex, rule, originalNode }) {\n        const { rules } = plugableRecord.getUnsafe(context.meta.data, dataKey);\n        if (node.type === 'selector' || node.type === 'combinator' || node.type === 'comment') {\n            return;\n        }\n        if (!rules.has(originalNode)) {\n            rules.set(originalNode, {\n                isGlobal: true,\n                checkedRule: rule,\n                topLevelSelectorsFlags: [],\n            });\n        }\n        const ruleData = rules.get(originalNode)!;\n        if (node.type === 'pseudo_class' && node.value === `global`) {\n            // mark selector as global only if it isn't set\n            ruleData.topLevelSelectorsFlags[topSelectorIndex] ??= true;\n            if (node.nodes && node.nodes?.length > 1) {\n                context.diagnostics.report(diagnostics.UNSUPPORTED_MULTI_SELECTOR_IN_GLOBAL(), {\n                    node: rule,\n                    word: stringifySelector(node.nodes),\n                });\n            }\n            return walkSelector.skipNested;\n        } else if (node.type === 'universal' || (node.type === 'type' && !isCompRoot(node.value))) {\n            // mark selector as global only if it isn't set\n            ruleData.topLevelSelectorsFlags[topSelectorIndex] ??= true;\n        } else {\n            // mark selector as local if it has a local selector\n            ruleData.topLevelSelectorsFlags[topSelectorIndex] = false;\n        }\n        return;\n    },\n    analyzeSelectorDone({ context, originalNode }) {\n        const { rules } = plugableRecord.getUnsafe(context.meta.data, dataKey);\n        const data = rules.get(originalNode);\n        if (!data) {\n            return;\n        }\n        // require at least one global selector in rule selectors\n        if (!data.topLevelSelectorsFlags.find((isGlobal) => isGlobal)) {\n            data.isGlobal = false;\n            return;\n        }\n\n        // rule is global if it doesn't have any local parents\n        let parent: postcss.Container | postcss.Document | undefined = originalNode.parent;\n        while (parent) {\n            const parentData = rules.get(parent as postcss.Rule);\n            if (parentData) {\n                // quick resolution: parent calculated first\n                data.isGlobal = parentData.isGlobal;\n                break;\n            }\n            // keep searching\n            parent = parent.parent;\n        }\n    },\n    transformInit({ context }) {\n        context.meta.globals = {};\n    },\n    transformLastPass({ context: { meta }, ast }) {\n        ast.walkRules((r) => {\n            if (!r.selector.includes(`:global(`)) {\n                return;\n            }\n            const selectorAst = parseSelectorWithCache(r.selector, { clone: true });\n            walkSelector(unwrapPseudoGlobals(selectorAst), (inner) => {\n                if (inner.type === 'class') {\n                    meta.globals[inner.value] = true;\n                }\n            });\n            r.selector = stringifySelector(selectorAst);\n        });\n    },\n});\n\n// API\n\nexport function getGlobalRules(meta: StylableMeta) {\n    const { rules } = plugableRecord.getUnsafe(meta.data, dataKey);\n    const globalRules: postcss.Rule[] = [];\n    for (const [rule, { isGlobal, checkedRule }] of rules) {\n        if (isGlobal && checkedRule === rule && rule.type === 'rule') {\n            globalRules.push(rule);\n        }\n    }\n    return globalRules;\n}\n\nexport function unwrapPseudoGlobals(selectorAst: SelectorList) {\n    const collectedGlobals: SelectorList = [];\n    walkSelector(selectorAst, (node) => {\n        if (node.type === 'pseudo_class' && node.value === 'global') {\n            if (node.nodes?.length === 1) {\n                collectedGlobals.push(flattenFunctionalSelector(node));\n            }\n            return walkSelector.skipNested;\n        }\n        return;\n    });\n    return collectedGlobals;\n}\n", "import { createFeature } from './feature';\nimport { parseSelectorWithCache, scopeNestedSelector } from '../helpers/selector';\nimport type { Stylable } from '../stylable';\nimport type { ImmutablePseudoClass } from '@tokey/css-selector-parser';\nimport * as postcss from 'postcss';\nimport type { SRule } from '../deprecated/postcss-ast-extension';\n\nexport const diagnostics = {\n    // INVALID_SCOPING: createDiagnosticReporter(\n    //     '11009',\n    //     'error',\n    //     () => '\"@st-scope\" requires a valid selector or empty value'\n    // ),\n};\n\n// HOOKS\n\nexport const hooks = createFeature<{ IMMUTABLE_SELECTOR: ImmutablePseudoClass }>({\n    analyzeAtRule({ context, atRule, analyzeRule }) {\n        if (!isStScopeStatement(atRule)) {\n            return;\n        }\n        // notice: any value from params would be taken as a scoping\n        // selector to be prepended to nested selectors\n        analyzeRule(\n            postcss.rule({\n                selector: atRule.params,\n                source: atRule.source,\n            }),\n            {\n                isScoped: true,\n                originalNode: atRule,\n            }\n        );\n        context.meta.scopes.push(atRule);\n    },\n    prepareAST({ node, toRemove }) {\n        // called without experimentalSelectorInference\n        // flatten @st-scope before transformation\n        if (isStScopeStatement(node)) {\n            flattenScope(node);\n            toRemove.push(() => node.replaceWith(node.nodes || []));\n        }\n    },\n    transformAtRuleNode({ context: { meta, inferredSelectorMixin }, atRule, transformer }) {\n        if (isStScopeStatement(atRule)) {\n            const { selector, inferredSelector } = transformer.scopeSelector(\n                meta,\n                atRule.params,\n                atRule,\n                undefined,\n                inferredSelectorMixin\n            );\n            // transform selector in params\n            atRule.params = selector;\n            // track selector context for nested selector nodes\n            transformer.containerInferredSelectorMap.set(atRule, inferredSelector);\n        }\n    },\n    transformLastPass({ ast }) {\n        // called with experimentalSelectorInference=true\n        // flatten @st-scope after transformation\n        const toRemove = [];\n        for (const node of ast.nodes) {\n            if (isStScopeStatement(node)) {\n                flattenScope(node);\n                toRemove.push(() => node.replaceWith(node.nodes || []));\n            }\n        }\n        toRemove.forEach((remove) => remove());\n    },\n});\n\n// API\n\nexport class StylablePublicApi {\n    constructor(private stylable: Stylable) {}\n    public getStScope(rule: postcss.Rule) {\n        return getStScope(rule);\n    }\n}\n\nexport function isStScopeStatement(node: any): node is postcss.AtRule {\n    return node.type === 'atrule' && node.name === 'st-scope';\n}\n\nfunction flattenScope(atRule: postcss.AtRule) {\n    const scopeSelector = atRule.params;\n    if (scopeSelector) {\n        atRule.walkRules((rule) => {\n            rule.selector = scopeNestedSelector(\n                parseSelectorWithCache(scopeSelector),\n                parseSelectorWithCache(rule.selector)\n            ).selector;\n            (rule as SRule).stScopeSelector = atRule.params;\n        });\n    }\n}\n\nfunction getStScope(rule: postcss.Rule): postcss.AtRule | undefined {\n    let current: postcss.Container | postcss.Document = rule;\n    while (current?.parent) {\n        current = current.parent;\n        if (isStScopeStatement(current) && current.parent?.type === 'root') {\n            return current;\n        }\n    }\n    return;\n}\n", "import { createFeature, FeatureContext, FeatureTransformContext } from './feature';\nimport { unbox, Box, deprecatedStFunctions, boxString } from '../custom-values';\nimport { generalDiagnostics } from './diagnostics';\nimport * as STSymbol from './st-symbol';\nimport type { StylableMeta } from '../stylable-meta';\nimport { createSymbolResolverWithCache, CSSResolve } from '../stylable-resolver';\nimport { EvalValueData, EvalValueResult, StylableEvaluator } from '../functions';\nimport { isChildOfAtRule } from '../helpers/rule';\nimport { walkSelector } from '../helpers/selector';\nimport { stringifyFunction, getStringValue, strategies } from '../helpers/value';\nimport { stripQuotation } from '../helpers/string';\nimport type { ImmutablePseudoClass, PseudoClass } from '@tokey/css-selector-parser';\nimport type * as postcss from 'postcss';\nimport { processDeclarationFunctions } from '../process-declaration-functions';\nimport { createDiagnosticReporter, Diagnostics } from '../diagnostics';\nimport type { ParsedValue } from '../types';\nimport type { Stylable } from '../stylable';\nimport type { RuntimeStVar } from '../stylable-transformer';\nimport postcssValueParser from 'postcss-value-parser';\n\nexport interface VarSymbol {\n    _kind: 'var';\n    name: string;\n    value: string;\n    text: string;\n    valueType: string | null;\n    node: postcss.Node;\n}\n\nexport type CustomValueInput = Box<\n    string,\n    CustomValueInput | Record<string, CustomValueInput | string> | Array<CustomValueInput | string>\n>;\n\nexport interface ComputedStVar {\n    value: RuntimeStVar;\n    diagnostics: Diagnostics;\n    input: CustomValueInput;\n}\n\nexport interface FlatComputedStVar {\n    value: string;\n    path: string[];\n}\n\nexport const diagnostics = {\n    FORBIDDEN_DEF_IN_COMPLEX_SELECTOR: generalDiagnostics.FORBIDDEN_DEF_IN_COMPLEX_SELECTOR,\n    NO_VARS_DEF_IN_ST_SCOPE: createDiagnosticReporter(\n        '07002',\n        'error',\n        () => `cannot define \":vars\" inside of \"@st-scope\"`\n    ),\n    DEPRECATED_ST_FUNCTION_NAME: createDiagnosticReporter(\n        '07003',\n        'info',\n        (name: string, alternativeName: string) =>\n            `\"${name}\" is deprecated, use \"${alternativeName}\"`\n    ),\n    CYCLIC_VALUE: createDiagnosticReporter(\n        '07004',\n        'error',\n        (cyclicChain: string[]) =>\n            `Cyclic value definition detected: \"${cyclicChain\n                .map((s, i) => (i === cyclicChain.length - 1 ? '\u21BB ' : i === 0 ? '\u2192 ' : '\u21AA ') + s)\n                .join('\\n')}\"`\n    ),\n    MISSING_VAR_IN_VALUE: createDiagnosticReporter(\n        '07005',\n        'error',\n        () => `invalid value() with no var identifier`\n    ),\n    COULD_NOT_RESOLVE_VALUE: createDiagnosticReporter(\n        '07006',\n        'error',\n        (args?: string) =>\n            `cannot resolve value function${args ? ` using the arguments provided: \"${args}\"` : ''}`\n    ),\n    MULTI_ARGS_IN_VALUE: createDiagnosticReporter(\n        '07007',\n        'error',\n        (args: string) => `value function accepts only a single argument: \"value(${args})\"`\n    ),\n    CANNOT_USE_AS_VALUE: createDiagnosticReporter(\n        '07008',\n        'error',\n        (type: string, varName: string) => `${type} \"${varName}\" cannot be used as a variable`\n    ),\n    CANNOT_USE_JS_AS_VALUE: createDiagnosticReporter(\n        '07009',\n        'error',\n        (type: string, varName: string) =>\n            `JavaScript ${type} import \"${varName}\" cannot be used as a variable`\n    ),\n    UNKNOWN_VAR: createDiagnosticReporter(\n        '07010',\n        'error',\n        (name: string) => `unknown var \"${name}\"`\n    ),\n    UNKNOWN_CUSTOM_PROP: createDiagnosticReporter('07011', 'info', (names: string[]) => {\n        const msgStart =\n            names.length > 1\n                ? `Unknown custom-properties \"${names.join(', ')}\" are`\n                : `Unknown custom-property \"${names[0]}\" is`;\n        return `${msgStart} currently not namespaced. However, in Stylable 6, it will be namespaced to the stylesheet. To maintain the current behavior, either wrap the value in quotes or establish a global custom property. If you intend for the custom property to be namespaced based on a different stylesheet context where the variable may be utilized, please reconsider your approach, as this will not be supported in future versions.`;\n    }),\n};\n\n// HOOKS\n\nexport const hooks = createFeature<{\n    SELECTOR: PseudoClass;\n    IMMUTABLE_SELECTOR: ImmutablePseudoClass;\n    RESOLVED: Record<string, EvalValueResult>;\n}>({\n    analyzeSelectorNode({ context, node, rule }) {\n        if (node.type !== `pseudo_class` || node.value !== `vars`) {\n            return;\n        }\n        // make sure `:vars` is the only selector\n        if (rule.selector === `:vars`) {\n            if (isChildOfAtRule(rule, `st-scope`)) {\n                context.diagnostics.report(diagnostics.NO_VARS_DEF_IN_ST_SCOPE(), { node: rule });\n            } else {\n                collectVarSymbols(context, rule);\n            }\n            // stop further walk into `:vars {}`\n            return walkSelector.stopAll;\n        } else {\n            context.diagnostics.report(diagnostics.FORBIDDEN_DEF_IN_COMPLEX_SELECTOR(`:vars`), {\n                node: rule,\n            });\n        }\n        return;\n    },\n    transformInit({ context }) {\n        const { cssVar } = context.getResolvedSymbols(context.meta);\n        for (const [_localName, localSymbol] of Object.entries(\n            STSymbol.getAllByType(context.meta, 'var')\n        )) {\n            const value = postcssValueParser(stripQuotation(localSymbol.text));\n            const unknownUsedProps: string[] = [];\n            value.walk((node) => {\n                if (node.type === 'function' && node.value.toLowerCase() === 'var') {\n                    for (const argNode of node.nodes) {\n                        if (\n                            argNode.type === 'word' &&\n                            argNode.value.startsWith('--') &&\n                            !cssVar[argNode.value]\n                        ) {\n                            unknownUsedProps.push(argNode.value);\n                        }\n                    }\n                }\n            });\n            if (unknownUsedProps.length) {\n                context.diagnostics.report(diagnostics.UNKNOWN_CUSTOM_PROP(unknownUsedProps), {\n                    node: localSymbol.node,\n                });\n            }\n        }\n    },\n    prepareAST({ node, toRemove }) {\n        if (node.type === 'rule' && node.selector === ':vars') {\n            toRemove.push(node);\n        }\n    },\n    transformResolve({ context }) {\n        // Resolve local vars\n        const resolved: Record<string, any> = {};\n        const symbols = STSymbol.getAllByType(context.meta, `var`);\n        // Temporarily don't report issues here // ToDo: move reporting here (from value() transformation)\n        const noDaigContext = {\n            ...context,\n            diagnostics: new Diagnostics(),\n        };\n        for (const name of Object.keys(symbols)) {\n            const symbol = symbols[name];\n            const evaluated = context.evaluator.evaluateValue(noDaigContext, {\n                // ToDo: change to `value(${name})` in order to fix overrides in exports\n                value: stripQuotation(symbol.text),\n                meta: context.meta,\n                node: symbol.node,\n            });\n            resolved[name] = evaluated;\n        }\n        return resolved;\n    },\n    transformValue({ context, node, data }) {\n        evaluateValueCall(context, node, data);\n    },\n    transformJSExports({ exports, resolved }) {\n        for (const [name, { topLevelType, outputValue }] of Object.entries(resolved)) {\n            exports.stVars[name] = topLevelType ? unbox(topLevelType) : outputValue;\n        }\n    },\n});\n\n// API\n\nexport function get(meta: StylableMeta, name: string): VarSymbol | undefined {\n    return STSymbol.get(meta, name, `var`);\n}\n\n// Stylable StVar Public APIs\n\nexport class StylablePublicApi {\n    constructor(private stylable: Stylable) {}\n\n    public getComputed(meta: StylableMeta) {\n        const topLevelDiagnostics = new Diagnostics();\n        const getResolvedSymbols = createSymbolResolverWithCache(\n            this.stylable.resolver,\n            topLevelDiagnostics\n        );\n        const evaluator = new StylableEvaluator({ getResolvedSymbols });\n\n        const { var: stVars } = getResolvedSymbols(meta);\n\n        const computed: Record<string, ComputedStVar> = {};\n\n        for (const [localName, resolvedVar] of Object.entries(stVars)) {\n            const diagnostics = new Diagnostics();\n            const { outputValue, topLevelType, runtimeValue } = evaluator.evaluateValue(\n                {\n                    resolver: this.stylable.resolver,\n                    evaluator,\n                    meta,\n                    diagnostics,\n                },\n                {\n                    meta: resolvedVar.meta,\n                    value: stripQuotation(resolvedVar.symbol.text),\n                    node: resolvedVar.symbol.node,\n                }\n            );\n\n            const computedStVar: ComputedStVar = {\n                value: runtimeValue ?? outputValue,\n                input: topLevelType ?? unbox(outputValue, false),\n                diagnostics,\n            };\n\n            computed[localName] = computedStVar;\n        }\n\n        return computed;\n    }\n\n    public flatten(meta: StylableMeta) {\n        const computed = this.getComputed(meta);\n\n        const flatStVars: FlatComputedStVar[] = [];\n\n        for (const [symbol, stVar] of Object.entries(computed)) {\n            flatStVars.push(...this.flatSingle(stVar.input, [symbol]));\n        }\n\n        return flatStVars;\n    }\n\n    private flatSingle(input: CustomValueInput, path: string[]) {\n        const currentVars: FlatComputedStVar[] = [];\n\n        if (input.flatValue) {\n            currentVars.push({\n                value: input.flatValue,\n                path,\n            });\n        }\n\n        if (typeof input.value === `object` && input.value !== null) {\n            for (const [key, innerInput] of Object.entries(input.value)) {\n                currentVars.push(\n                    ...this.flatSingle(\n                        typeof innerInput === 'string' ? boxString(innerInput) : innerInput,\n                        [...path, key]\n                    )\n                );\n            }\n        }\n\n        return currentVars;\n    }\n}\n\nexport function parseVarsFromExpr(expr: string) {\n    const nameSet = new Set<string>();\n    postcssValueParser(expr).walk((node) => {\n        if (node.type === 'function' && node.value === 'value') {\n            for (const argNode of node.nodes) {\n                switch (argNode.type) {\n                    case 'word':\n                        nameSet.add(argNode.value);\n                        return;\n                    case 'div':\n                        if (argNode.value === ',') {\n                            return;\n                        }\n                }\n            }\n        }\n    });\n    return nameSet;\n}\n\nfunction collectVarSymbols(context: FeatureContext, rule: postcss.Rule) {\n    rule.walkDecls((decl) => {\n        collectUrls(context.meta, decl); // ToDo: remove\n        warnOnDeprecatedCustomValues(context, decl);\n\n        // check type annotation\n        let type = null;\n        const prev = decl.prev() as postcss.Comment;\n        if (prev && prev.type === 'comment') {\n            const typeMatch = prev.text.match(/^@type (.+)$/);\n            if (typeMatch) {\n                type = typeMatch[1];\n            }\n        }\n        // add symbol\n        const name = decl.prop;\n        STSymbol.addSymbol({\n            context,\n            symbol: {\n                _kind: 'var',\n                name,\n                value: '',\n                text: decl.value,\n                node: decl,\n                valueType: type,\n            },\n            node: decl,\n        });\n    });\n}\n\nfunction warnOnDeprecatedCustomValues(context: FeatureContext, decl: postcss.Declaration) {\n    processDeclarationFunctions(\n        decl,\n        (node) => {\n            if (node.type === 'nested-item' && deprecatedStFunctions[node.name]) {\n                const { alternativeName } = deprecatedStFunctions[node.name];\n                context.diagnostics.report(\n                    diagnostics.DEPRECATED_ST_FUNCTION_NAME(node.name, alternativeName),\n                    {\n                        node: decl,\n                        word: node.name,\n                    }\n                );\n            }\n        },\n        false\n    );\n}\n\n// ToDo: remove after moving :vars removal to end of analyze.\n// url collection should pickup vars value during general decls walk\nfunction collectUrls(meta: StylableMeta, decl: postcss.Declaration) {\n    processDeclarationFunctions(\n        decl,\n        (node) => {\n            if (node.type === 'url') {\n                meta.urls.push(node.url);\n            }\n        },\n        false\n    );\n}\n\nfunction evaluateValueCall(\n    context: FeatureTransformContext,\n    parsedNode: ParsedValue,\n    data: EvalValueData\n): void {\n    const { stVarOverride, value, node } = data;\n    const passedThrough = context.passedThrough || [];\n    const parsedArgs = strategies.args(parsedNode).map((x) => x.value);\n    const varName = parsedArgs[0];\n    const restArgs = parsedArgs.slice(1);\n\n    // check var not empty\n    if (!varName) {\n        if (node) {\n            context.diagnostics.report(diagnostics.MISSING_VAR_IN_VALUE(), {\n                node,\n                word: getStringValue(parsedNode),\n            });\n        }\n    } else if (parsedArgs.length >= 1) {\n        // override with value\n        if (stVarOverride?.[varName]) {\n            parsedNode.resolvedValue = stVarOverride?.[varName];\n            return;\n        }\n        // check cyclic\n        const refUniqID = createUniqID(data.meta.source, varName);\n        if (passedThrough.includes(refUniqID)) {\n            // TODO: move diagnostic to original value usage instead of the end of the cyclic chain\n            handleCyclicValues(context, passedThrough, refUniqID, data.node, value, parsedNode);\n            return;\n        }\n        // resolve\n        const resolvedSymbols = context.getResolvedSymbols(data.meta);\n        const resolvedVar = resolvedSymbols.var[varName];\n        const resolvedVarSymbol = resolvedVar?.symbol;\n        const possibleNonSTVarSymbol = STSymbol.get(context.meta, varName);\n        if (resolvedVarSymbol) {\n            const { outputValue, topLevelType, typeError } = context.evaluator.evaluateValue(\n                { ...context, passedThrough: passedThrough.concat(refUniqID) },\n                {\n                    ...data,\n                    value: stripQuotation(resolvedVarSymbol.text),\n                    args: restArgs,\n                    node: resolvedVarSymbol.node,\n                    meta: resolvedVar.meta,\n                    rootArgument: varName,\n                    initialNode: node,\n                }\n            );\n            // report errors\n            if (node) {\n                const argsAsString = parsedArgs.join(', ');\n                if (!typeError && !topLevelType && parsedArgs.length > 1) {\n                    context.diagnostics.report(diagnostics.MULTI_ARGS_IN_VALUE(argsAsString), {\n                        node,\n                    });\n                }\n            }\n\n            parsedNode.resolvedValue = context.evaluator.valueHook\n                ? context.evaluator.valueHook(outputValue, varName, true, passedThrough)\n                : outputValue;\n        } else if (possibleNonSTVarSymbol) {\n            const type = resolvedSymbols.mainNamespace[varName];\n            if (type === `js`) {\n                const deepResolve = resolvedSymbols.js[varName];\n                const importedType = typeof deepResolve.symbol;\n                if (importedType === 'string') {\n                    parsedNode.resolvedValue = context.evaluator.valueHook\n                        ? context.evaluator.valueHook(\n                              deepResolve.symbol,\n                              varName,\n                              false,\n                              passedThrough\n                          )\n                        : deepResolve.symbol;\n                } else if (node) {\n                    // unsupported Javascript value\n                    // ToDo: provide actual exported id (default/named as x)\n                    context.diagnostics.report(\n                        diagnostics.CANNOT_USE_JS_AS_VALUE(importedType, varName),\n                        {\n                            node,\n                            word: varName,\n                        }\n                    );\n                }\n            } else if (type) {\n                // report mismatch type\n                const deepResolve = resolvedSymbols[type][varName];\n                let finalResolve: CSSResolve = {\n                    _kind: `css`,\n                    meta: data.meta,\n                    symbol: possibleNonSTVarSymbol,\n                };\n                if (deepResolve instanceof Array) {\n                    // take the deep resolved in order to\n                    // print the actual mismatched type\n                    finalResolve = deepResolve[deepResolve.length - 1];\n                } else if (deepResolve._kind === `css`) {\n                    finalResolve = deepResolve;\n                }\n                reportUnsupportedSymbolInValue(context, varName, finalResolve, node);\n            } else if (node) {\n                // report unknown var\n                context.diagnostics.report(diagnostics.UNKNOWN_VAR(varName), {\n                    node,\n                    word: varName,\n                });\n            }\n        } else if (node) {\n            context.diagnostics.report(diagnostics.UNKNOWN_VAR(varName), {\n                node,\n                word: varName,\n            });\n        }\n    }\n}\n\nexport function resolveReferencedVarNames(\n    context: Pick<FeatureTransformContext, 'meta' | 'resolver'>,\n    initialName: string\n) {\n    const refNames = new Set<string>();\n    const varsToCheck: { meta: StylableMeta; name: string }[] = [\n        { meta: context.meta, name: initialName },\n    ];\n    const checked = new Set<string>();\n    while (varsToCheck.length) {\n        const { meta, name } = varsToCheck.shift()!;\n        const contextualId = meta.source + '/' + name;\n        if (!checked.has(contextualId)) {\n            checked.add(contextualId);\n            refNames.add(name);\n            const symbol = STSymbol.get(meta, name);\n            switch (symbol?._kind) {\n                case 'var':\n                    parseVarsFromExpr(symbol.text).forEach((refName) =>\n                        varsToCheck.push({\n                            meta,\n                            name: refName,\n                        })\n                    );\n                    break;\n                case 'import': {\n                    const resolved = context.resolver.deepResolve(symbol);\n                    if (resolved?._kind === 'css' && resolved.symbol._kind === 'var') {\n                        varsToCheck.push({ meta: resolved.meta, name: resolved.symbol.name });\n                    }\n                    break;\n                }\n            }\n        }\n    }\n    return refNames;\n}\n\nfunction reportUnsupportedSymbolInValue(\n    context: FeatureTransformContext,\n    name: string,\n    resolve: CSSResolve,\n    node: postcss.Node | undefined\n) {\n    const symbol = resolve.symbol;\n    const errorKind = symbol._kind === 'class' && symbol[`-st-root`] ? 'stylesheet' : symbol._kind;\n    if (node) {\n        context.diagnostics.report(diagnostics.CANNOT_USE_AS_VALUE(errorKind, name), {\n            node,\n            word: name,\n        });\n    }\n}\n\nfunction handleCyclicValues(\n    context: FeatureTransformContext,\n    passedThrough: string[],\n    refUniqID: string,\n    node: postcss.Node | undefined,\n    value: string,\n    parsedNode: ParsedValue\n) {\n    if (node) {\n        const cyclicChain = passedThrough.map((variable) => variable || '');\n        cyclicChain.push(refUniqID);\n        context.diagnostics.report(diagnostics.CYCLIC_VALUE(cyclicChain), {\n            node,\n            word: refUniqID, // ToDo: check word is path+var and not var name\n        });\n    }\n    return stringifyFunction(value, parsedNode);\n}\n\nfunction createUniqID(source: string, varName: string) {\n    return `${source}: ${varName}`;\n}\n", "import cloneDeepWith from 'lodash.clonedeepwith';\nimport postcssValueParser from 'postcss-value-parser';\nimport { getFormatterArgs, getNamedArgs, getStringValue } from './helpers/value';\nimport type { ParsedValue } from './types';\n\nexport class CustomValueError extends Error {\n    constructor(message: string, public fallbackValue: string) {\n        super(message);\n    }\n}\n\nexport interface Box<Type extends string, Value> {\n    type: Type;\n    value: Value;\n    flatValue: string | undefined;\n}\n\nexport function box<Type extends string, Value>(\n    type: Type,\n    value: Value,\n    flatValue?: string\n): Box<Type, Value> {\n    return {\n        type,\n        value,\n        flatValue,\n    };\n}\n\nexport function boxString(value: string) {\n    return box('st-string', value, value);\n}\n\nexport function unbox<B extends Box<string, unknown>>(\n    boxed: B | string,\n    unboxPrimitives = true,\n    customValues?: CustomTypes,\n    node?: ParsedValue\n): any {\n    if (typeof boxed === 'string') {\n        return unboxPrimitives ? boxed : boxString(boxed);\n    } else if (typeof boxed === 'object' && boxed) {\n        const customValue = customValues?.[boxed.type];\n        let value = boxed.value;\n        if (customValue?.flattenValue && node) {\n            value = customValue.getValue([], boxed, node, customValues!);\n        }\n        return cloneDeepWith(value, (v) => unbox(v, unboxPrimitives, customValues, node));\n    }\n}\n\nexport interface BoxedValueMap {\n    [k: string]: string | Box<string, unknown>;\n}\n\nexport type BoxedValueArray = Array<string | Box<string, unknown>>;\n\ntype CustomTypes = Record<string, CustomValueExtension<any>>;\n\nexport interface CustomValueExtension<T> {\n    flattenValue?: FlattenValue<T>;\n    evalVarAst(\n        valueAst: ParsedValue,\n        customTypes: {\n            [typeID: string]: CustomValueExtension<unknown>;\n        },\n        boxPrimitive?: boolean\n    ): Box<string, T>;\n    getValue(\n        path: string[],\n        value: Box<string, T>,\n        node: ParsedValue,\n        customTypes: CustomTypes\n    ): string;\n}\n\nfunction createStArrayCustomFunction() {\n    return createCustomValue<BoxedValueArray, BoxedValueArray>({\n        processArgs: (node, customTypes, boxPrimitive) => {\n            return CustomValueStrategy.args(node, customTypes, boxPrimitive);\n        },\n        createValue: (args) => {\n            return args;\n        },\n        getValue: (value, index) => value[parseInt(index, 10)],\n    });\n}\n\nfunction createStMapCustomFunction() {\n    return createCustomValue<BoxedValueMap, BoxedValueMap>({\n        processArgs: (node, customTypes, boxPrimitive) => {\n            return CustomValueStrategy.named(node, customTypes, boxPrimitive);\n        },\n        createValue: (args) => {\n            return args;\n        },\n        getValue: (value, index) => value[index],\n    });\n}\n\nexport const stTypes: CustomTypes = {\n    /** @deprecated - use `st-array` */\n    stArray: createStArrayCustomFunction().register('stArray'),\n    /** @deprecated - use `st-map` */\n    stMap: createStMapCustomFunction().register('stMap'),\n    'st-array': createStArrayCustomFunction().register('st-array'),\n    'st-map': createStMapCustomFunction().register('st-map'),\n    'st-string': createStMapCustomFunction().register('st-string'),\n} as const;\n\nexport const deprecatedStFunctions: Record<string, { alternativeName: string }> = {\n    stArray: {\n        alternativeName: 'st-array',\n    },\n    stMap: {\n        alternativeName: 'st-map',\n    },\n};\n\nexport const CustomValueStrategy = {\n    args: (fnNode: ParsedValue, customTypes: CustomTypes, boxPrimitive?: boolean) => {\n        const pathArgs = getFormatterArgs(fnNode);\n        const outputArray = [];\n        for (const arg of pathArgs) {\n            const parsedArg = postcssValueParser(arg).nodes[0];\n            const ct = parsedArg.type === 'function' && parsedArg.value;\n            const resolvedValue =\n                typeof ct === 'string' && customTypes[ct]\n                    ? customTypes[ct].evalVarAst(parsedArg, customTypes, boxPrimitive)\n                    : unbox(arg, !boxPrimitive);\n            outputArray.push(resolvedValue);\n        }\n        return outputArray;\n    },\n    named: (fnNode: ParsedValue, customTypes: CustomTypes, boxPrimitive?: boolean) => {\n        const outputMap: BoxedValueMap = {};\n        const s = getNamedArgs(fnNode);\n        for (const [prop, space, ...valueNodes] of s) {\n            if (space.type !== 'space') {\n                // TODO: error catch\n                throw new Error('Invalid argument');\n            }\n            let resolvedValue;\n            if (valueNodes.length === 0) {\n                // TODO: error\n            } else {\n                const nonComments = valueNodes.filter((node) => node.type !== 'comment');\n                if (nonComments.length === 1) {\n                    const valueNode = nonComments[0];\n                    resolvedValue = valueNode.resolvedValue;\n\n                    if (!resolvedValue) {\n                        const ct = customTypes[valueNode.value];\n                        if (valueNode.type === 'function' && ct) {\n                            resolvedValue = ct.evalVarAst(valueNode, customTypes, boxPrimitive);\n                        } else {\n                            resolvedValue = unbox(getStringValue(valueNode), !boxPrimitive);\n                        }\n                    } else if (typeof resolvedValue === 'string') {\n                        const parsedArg = postcssValueParser(resolvedValue).nodes[0];\n                        const ct = parsedArg.type === 'function' && parsedArg.value;\n                        resolvedValue =\n                            typeof ct === 'string' && customTypes[ct]\n                                ? customTypes[ct].evalVarAst(parsedArg, customTypes, boxPrimitive)\n                                : unbox(resolvedValue, !boxPrimitive);\n                    }\n                } else {\n                    resolvedValue = unbox(getStringValue(valueNodes), !boxPrimitive);\n                }\n            }\n\n            if (resolvedValue) {\n                outputMap[prop.value] = resolvedValue;\n            }\n        }\n        return outputMap;\n    },\n};\n\nexport interface JSValueExtension<Value> {\n    _kind: 'CustomValue';\n    register(localTypeSymbol: string): CustomValueExtension<Value>;\n}\n\ntype FlattenValue<Value> = (v: Box<string, Value>) => {\n    parts: Array<string | Box<string, unknown>>;\n    delimiter: ',' | ' ';\n};\n\ninterface ExtensionApi<Value, Args> {\n    processArgs: (fnNode: ParsedValue, customTypes: CustomTypes, boxPrimitive?: boolean) => Args;\n    createValue: (args: Args) => Value;\n    getValue: (v: Value, key: string) => string | Box<string, unknown>;\n    flattenValue?: FlattenValue<Value>;\n}\n\nexport function createCustomValue<Value, Args>({\n    processArgs,\n    createValue,\n    flattenValue,\n    getValue,\n}: ExtensionApi<Value, Args>): JSValueExtension<Value> {\n    return {\n        _kind: 'CustomValue',\n        register(localTypeSymbol: string) {\n            return {\n                flattenValue,\n                evalVarAst(fnNode: ParsedValue, customTypes: CustomTypes, boxPrimitive?: boolean) {\n                    const args = processArgs(fnNode, customTypes, boxPrimitive);\n                    const value = createValue(args);\n                    let flatValue: string | undefined;\n\n                    if (flattenValue) {\n                        flatValue = getFlatValue(\n                            flattenValue,\n                            box(localTypeSymbol, value),\n                            fnNode,\n                            customTypes\n                        );\n                    }\n\n                    return box(localTypeSymbol, value, flatValue);\n                },\n                getValue(\n                    path: string[],\n                    obj: Box<string, Value>,\n                    fallbackNode: ParsedValue, // TODO: add test\n                    customTypes: CustomTypes\n                ): string {\n                    if (path.length === 0) {\n                        if (flattenValue) {\n                            return getFlatValue(flattenValue, obj, fallbackNode, customTypes);\n                        } else {\n                            const stringifiedValue = getStringValue([fallbackNode]);\n\n                            throw new CustomValueError(\n                                `/* Error trying to flat -> */${stringifiedValue}`,\n                                stringifiedValue\n                            );\n                        }\n                    }\n                    const value = getValue(obj.value, path[0]);\n                    return getBoxValue(path.slice(1), value, fallbackNode, customTypes);\n                },\n            };\n        },\n    };\n}\n\nfunction getFlatValue<Value>(\n    flattenValue: FlattenValue<Value>,\n    obj: Box<string, Value>,\n    fallbackNode: ParsedValue,\n    customTypes: CustomTypes\n) {\n    const { delimiter, parts } = flattenValue(obj);\n    return parts.map((v) => getBoxValue([], v, fallbackNode, customTypes)).join(delimiter);\n}\n\nfunction getBoxValue(\n    path: string[],\n    value: string | Box<string, unknown>,\n    node: ParsedValue,\n    customTypes: CustomTypes\n): string {\n    if (typeof value === 'string' || value.type === 'st-string') {\n        return unbox(value, true, customTypes);\n    } else if (value && customTypes[value.type]) {\n        return customTypes[value.type].getValue(path, value, node, customTypes);\n    } else {\n        throw new Error('Unknown Type ' + JSON.stringify(value));\n        // return JSON.stringify(value);\n    }\n}\n\nexport function isCustomValue(symbol: any): symbol is JSValueExtension<unknown> {\n    return symbol?._kind === 'CustomValue';\n}\n", "import type { ParsedValue } from '../types';\nimport postcssValueParser from 'postcss-value-parser';\nimport type { Node as ValueNode } from 'postcss-value-parser';\nimport { createDiagnosticReporter, DiagnosticBase } from '../diagnostics';\n\nexport type ReportWarning = (diagnostic: DiagnosticBase, options?: { word: string }) => void;\n\nexport const valueDiagnostics = {\n    INVALID_NAMED_PARAMS: createDiagnosticReporter(\n        '13001',\n        'error',\n        () => `invalid named parameters (e.g. \"func(name value, [name value, ...])\")`\n    ),\n    MISSING_REQUIRED_FORMATTER_ARG: createDiagnosticReporter(\n        '13002',\n        'error',\n        (node: ParsedValue, argIndex: number) =>\n            `${postcssValueParser.stringify(\n                node as postcssValueParser.Node\n            )}: argument at index ${argIndex} is empty`\n    ),\n};\n\nexport function getNamedArgs(node: ParsedValue) {\n    const args: ParsedValue[][] = [];\n    if (node.nodes.length) {\n        args.push([]);\n        node.nodes.forEach((node: any) => {\n            if (node.type === 'div') {\n                args.push([]);\n            } else {\n                const {\n                    sourceIndex: _sourceIndex,\n                    sourceEndIndex: _sourceEndIndex,\n                    ...clone\n                } = node;\n                args[args.length - 1].push(clone);\n            }\n        });\n    }\n\n    // handle trailing comma\n    return args.length && args[args.length - 1].length === 0 ? args.slice(0, -1) : args;\n}\n\nexport function stringifyFunction(name: string, parsedNode: ParsedValue, perserveQuotes = false) {\n    return `${name}(${getFormatterArgs(parsedNode, false, undefined, perserveQuotes).join(', ')})`;\n}\n\nexport function getFormatterArgs(\n    node: ParsedValue,\n    allowComments = false,\n    reportWarning?: ReportWarning,\n    preserveQuotes = false\n) {\n    const argsResult = [];\n    let currentArg = '';\n    let argIndex = 0;\n    for (const currentNode of node.nodes) {\n        if (currentNode.type === 'div' && currentNode.value === ',') {\n            checkEmptyArg();\n            argIndex++;\n            argsResult.push(currentArg.trim());\n            currentArg = '';\n        } else if (currentNode.type === 'comment') {\n            if (allowComments) {\n                currentArg +=\n                    currentNode.resolvedValue || postcssValueParser.stringify(currentNode);\n            }\n        } else if (currentNode.type === 'string') {\n            currentArg += preserveQuotes\n                ? postcssValueParser.stringify(currentNode)\n                : currentNode.value;\n        } else {\n            currentArg += currentNode.resolvedValue || postcssValueParser.stringify(currentNode);\n        }\n    }\n    checkEmptyArg();\n    argsResult.push(currentArg.trim());\n\n    let i = argsResult.length;\n    while (i--) {\n        if (argsResult[i] === '') {\n            argsResult.pop();\n        } else {\n            return argsResult;\n        }\n    }\n    return argsResult;\n\n    function checkEmptyArg() {\n        if (reportWarning && argsResult.length && currentArg.trim() === '') {\n            reportWarning(valueDiagnostics.MISSING_REQUIRED_FORMATTER_ARG(node, argIndex));\n        }\n    }\n}\n\nexport function getStringValue(nodes: ParsedValue | ParsedValue[]): string {\n    return postcssValueParser.stringify(nodes as postcssValueParser.Node, (node) => {\n        if ((node as ParsedValue).resolvedValue !== undefined) {\n            return (node as ParsedValue).resolvedValue as string | undefined;\n        } else {\n            // TODO: warn\n            return undefined;\n        }\n    });\n}\n\nexport function listOptions(node: any) {\n    return groupValues(node.nodes)\n        .map((nodes: any) =>\n            postcssValueParser.stringify(nodes, (n: any) => {\n                if (n.type === 'div') {\n                    return null;\n                } else if (n.type === 'string') {\n                    return n.value;\n                } else {\n                    return undefined;\n                }\n            })\n        )\n        .filter((x: string) => typeof x === 'string');\n}\n\nexport function groupValues(nodes: ValueNode[], divType = 'div') {\n    const grouped: ValueNode[][] = [];\n    let current: ValueNode[] = [];\n\n    nodes.forEach((n: any) => {\n        if (n.type === divType) {\n            grouped.push(current);\n            current = [];\n        } else {\n            current.push(n);\n        }\n    });\n\n    const last = grouped[grouped.length - 1];\n\n    if ((last && last !== current && current.length) || (!last && current.length)) {\n        grouped.push(current);\n    }\n    return grouped;\n}\n\nexport function validateAllowedNodesUntil(\n    node: ParsedValue,\n    i: number,\n    untilType = 'div',\n    allowed = ['comment']\n) {\n    i = 1;\n    let current = node.nodes[i];\n    while (current && current.type !== untilType) {\n        if (!allowed.includes(current.type)) {\n            return false;\n        }\n        i++;\n        current = node.nodes[i];\n    }\n\n    return true;\n}\n\nexport const strategies = {\n    named: (node: any, reportWarning?: ReportWarning) => {\n        const named: Record<string, string> = {};\n        getNamedArgs(node).forEach((mixinArgsGroup) => {\n            const argsDivider = mixinArgsGroup[1];\n            if (mixinArgsGroup.length < 3 || (argsDivider && argsDivider.type !== 'space')) {\n                if (reportWarning) {\n                    const argValue = mixinArgsGroup[0];\n                    reportWarning(valueDiagnostics.INVALID_NAMED_PARAMS(), {\n                        word: argValue.value,\n                    });\n                }\n                return;\n            }\n            named[mixinArgsGroup[0].value] = stringifyParam(mixinArgsGroup.slice(2));\n        });\n        return named;\n    },\n    args: (node: any, reportWarning?: ReportWarning) => {\n        return getFormatterArgs(node, true, reportWarning).map((value) => ({ value }));\n    },\n};\n\nfunction stringifyParam(nodes: any) {\n    return postcssValueParser.stringify(nodes, (n: any) => {\n        if (n.type === 'function') {\n            return postcssValueParser.stringify(n);\n        } else if (n.type === 'div') {\n            return null;\n        } else if (n.type === 'string') {\n            return n.value;\n        } else {\n            return undefined;\n        }\n    });\n}\n", "import type { FileProcessor } from './cached-process-file';\nimport type { Diagnostics } from './diagnostics';\nimport type { StylableMeta } from './stylable-meta';\nimport {\n    ImportSymbol,\n    ClassSymbol,\n    ElementSymbol,\n    Imported,\n    StylableSymbol,\n    CSSClass,\n    STSymbol,\n    STCustomSelector,\n    VarSymbol,\n    CSSVarSymbol,\n    KeyframesSymbol,\n    LayerSymbol,\n    ContainerSymbol,\n    CSSKeyframes,\n    CSSLayer,\n    CSSContains,\n    STStructure,\n} from './features';\nimport type { StylableTransformer } from './stylable-transformer';\nimport { findRule } from './helpers/rule';\nimport type { ModuleResolver } from './types';\nimport { CustomValueExtension, isCustomValue, stTypes } from './custom-values';\n\nexport type JsModule = {\n    default?: unknown;\n    [key: string]: unknown;\n};\n\nexport interface InvalidCachedModule {\n    kind: 'js' | 'css';\n    value: null;\n    error: unknown;\n    request: string;\n    context: string;\n    resolvedPath: string | undefined;\n}\n\nexport interface CachedStylableMeta {\n    resolvedPath: string;\n    kind: 'css';\n    value: StylableMeta;\n}\n\nexport interface CachedJsModule {\n    resolvedPath: string;\n    kind: 'js';\n    value: JsModule;\n}\n\nexport interface ResolveOnly {\n    resolvedPath: string;\n    kind: 'resolve';\n    value: null;\n}\n\nexport type CachedModuleEntity =\n    | InvalidCachedModule\n    | CachedStylableMeta\n    | CachedJsModule\n    | ResolveOnly;\n\nexport type StylableResolverCache = Map<string, CachedModuleEntity>;\n\nexport interface CSSResolve<T extends StylableSymbol | STStructure.PartSymbol = StylableSymbol> {\n    _kind: 'css';\n    symbol: T;\n    meta: StylableMeta;\n}\nexport type CSSResolvePath = Array<CSSResolve<ClassSymbol | ElementSymbol>>;\n\nexport interface JSResolve {\n    _kind: 'js';\n    symbol: any;\n    meta: null;\n}\n\nexport interface MetaResolvedSymbols {\n    mainNamespace: Record<string, StylableSymbol['_kind'] | 'js'>;\n    class: Record<string, Array<CSSResolve<ClassSymbol | ElementSymbol>>>;\n    element: Record<string, Array<CSSResolve<ClassSymbol | ElementSymbol>>>;\n    var: Record<string, CSSResolve<VarSymbol>>;\n    js: Record<string, JSResolve>;\n    customValues: Record<string, CustomValueExtension<any>>;\n    cssVar: Record<string, CSSResolve<CSSVarSymbol>>;\n    keyframes: Record<string, CSSResolve<KeyframesSymbol>>;\n    layer: Record<string, CSSResolve<LayerSymbol>>;\n    container: Record<string, CSSResolve<ContainerSymbol>>;\n    import: Record<string, CSSResolve<ImportSymbol>>;\n}\n\nexport type ReportError = (\n    res: CSSResolve | JSResolve | null,\n    extend: ImportSymbol | ClassSymbol | ElementSymbol,\n    extendPath: Array<CSSResolve<ClassSymbol | ElementSymbol>>,\n    meta: StylableMeta,\n    name: string,\n    isElement: boolean\n) => void;\n\nfunction isInPath(\n    extendPath: Array<CSSResolve<ClassSymbol | ElementSymbol>>,\n    { symbol: { name: name1 }, meta: { source: source1 } }: CSSResolve<ClassSymbol | ElementSymbol>\n) {\n    return extendPath.find(({ symbol: { name }, meta: { source } }) => {\n        return name1 === name && source === source1;\n    });\n}\n\n// this is a safe cache key delimiter for all OS;\nconst safePathDelimiter = ';:';\n\nexport class StylableResolver {\n    constructor(\n        protected fileProcessor: FileProcessor<StylableMeta>,\n        protected requireModule: (resolvedPath: string) => any,\n        protected moduleResolver: ModuleResolver,\n        protected cache?: StylableResolverCache\n    ) {}\n    public getModule({\n        context,\n        request,\n    }: Pick<Imported, 'context' | 'request'>): CachedModuleEntity {\n        let entity: CachedModuleEntity;\n        let resolvedPath: string | undefined;\n\n        const key = cacheKey(context, request);\n\n        if (this.cache?.has(key)) {\n            const entity = this.cache.get(key)!;\n            if (entity.kind === 'resolve') {\n                resolvedPath = entity.resolvedPath;\n            } else {\n                return entity;\n            }\n        }\n\n        try {\n            resolvedPath ||= this.moduleResolver(context, request);\n        } catch (error) {\n            entity = {\n                kind: request.endsWith('css') ? 'css' : 'js',\n                value: null,\n                error,\n                request,\n                context,\n                resolvedPath: undefined,\n            };\n            this.cache?.set(key, entity);\n            return entity;\n        }\n\n        if (resolvedPath.endsWith('.css')) {\n            const kind = 'css';\n            try {\n                entity = { kind, value: this.fileProcessor.process(resolvedPath), resolvedPath };\n            } catch (error) {\n                entity = { kind, value: null, error, request, context, resolvedPath };\n            }\n        } else {\n            const kind = 'js';\n            try {\n                entity = { kind, value: this.requireModule(resolvedPath), resolvedPath };\n            } catch (error) {\n                entity = { kind, value: null, error, request, context, resolvedPath };\n            }\n        }\n\n        this.cache?.set(key, entity);\n\n        return entity;\n    }\n    public analyze(filePath: string) {\n        return this.fileProcessor.process(filePath);\n    }\n    public resolvePath(directoryPath: string, request: string): string {\n        const key = cacheKey(directoryPath, request);\n        let resolvedPath = this.cache?.get(key)?.resolvedPath;\n        if (resolvedPath !== undefined) {\n            return resolvedPath;\n        }\n        resolvedPath = this.moduleResolver(directoryPath, request);\n        this.cache?.set(key, {\n            resolvedPath,\n            value: null,\n            kind: 'resolve',\n        });\n        return resolvedPath;\n    }\n    public resolveImported(\n        imported: Imported,\n        name: string,\n        subtype: 'mappedSymbols' | 'mappedKeyframes' | STSymbol.Namespaces = 'mappedSymbols'\n    ): CSSResolve | JSResolve | null {\n        const res = this.getModule(imported);\n        if (res.value === null) {\n            return null;\n        }\n\n        if (res.kind === 'css') {\n            const { value: meta } = res;\n            const namespace =\n                subtype === `mappedSymbols`\n                    ? `main`\n                    : subtype === 'mappedKeyframes'\n                    ? `keyframes`\n                    : subtype;\n            name = !name && namespace === `main` ? meta.root : name;\n            const symbol = STSymbol.getAll(meta, namespace)[name];\n            return {\n                _kind: 'css',\n                symbol,\n                meta,\n            };\n        } else {\n            const { value: jsModule } = res;\n            return {\n                _kind: 'js',\n                symbol: !name ? jsModule.default || jsModule : jsModule[name],\n                meta: null,\n            };\n        }\n    }\n    public resolveImport(importSymbol: ImportSymbol) {\n        const name = importSymbol.type === 'named' ? importSymbol.name : '';\n        return this.resolveImported(importSymbol.import, name);\n    }\n    public resolve(maybeImport: StylableSymbol | undefined): CSSResolve | JSResolve | null {\n        if (!maybeImport || maybeImport._kind !== 'import') {\n            if (\n                maybeImport &&\n                maybeImport._kind !== 'var' &&\n                maybeImport._kind !== 'cssVar' &&\n                maybeImport._kind !== 'keyframes' &&\n                maybeImport._kind !== 'layer' &&\n                maybeImport._kind !== 'container'\n            ) {\n                if (maybeImport.alias && !maybeImport[`-st-extends`]) {\n                    maybeImport = maybeImport.alias;\n                } else if (maybeImport[`-st-extends`]) {\n                    maybeImport = maybeImport[`-st-extends`];\n                } else {\n                    return null;\n                }\n            } else if (maybeImport && maybeImport._kind === 'cssVar') {\n                if (maybeImport.alias) {\n                    maybeImport = maybeImport.alias;\n                } else {\n                    return null;\n                }\n            } else {\n                return null;\n            }\n        }\n        if (!maybeImport || maybeImport._kind !== 'import') {\n            return null;\n        }\n        return this.resolveImport(maybeImport);\n    }\n    public deepResolve(\n        maybeImport: StylableSymbol | undefined,\n        path: StylableSymbol[] = []\n    ): CSSResolve | JSResolve | null {\n        let resolved = this.resolve(maybeImport);\n        while (\n            resolved &&\n            resolved._kind === 'css' &&\n            resolved.symbol &&\n            resolved.symbol._kind === 'import'\n        ) {\n            resolved = this.resolve(resolved.symbol);\n        }\n        if (resolved && resolved.symbol && resolved.meta) {\n            if (\n                ((resolved.symbol._kind === 'class' || resolved.symbol._kind === 'element') &&\n                    resolved.symbol.alias &&\n                    !resolved.symbol[`-st-extends`]) ||\n                (resolved.symbol._kind === 'cssVar' && resolved.symbol.alias)\n            ) {\n                if (path.includes(resolved.symbol)) {\n                    return { _kind: 'css', symbol: resolved.symbol, meta: resolved.meta };\n                }\n                path.push(resolved.symbol);\n                return this.deepResolve(resolved.symbol.alias, path);\n            }\n        }\n        return resolved;\n    }\n    public resolveSymbolOrigin(\n        symbol: StylableSymbol | undefined,\n        meta: StylableMeta,\n        path: StylableSymbol[] = []\n    ): CSSResolve | null {\n        if (!symbol || !meta) {\n            return null;\n        }\n        if (symbol._kind === 'element' || symbol._kind === 'class') {\n            if (path.includes(symbol)) {\n                return { meta, symbol, _kind: 'css' };\n            }\n            path.push(symbol);\n            const isAliasOnly = symbol.alias && !symbol[`-st-extends`];\n            return isAliasOnly\n                ? this.resolveSymbolOrigin(symbol.alias, meta, path)\n                : { meta, symbol, _kind: 'css' };\n        } else if (symbol._kind === 'cssVar') {\n            if (path.includes(symbol)) {\n                return { meta, symbol, _kind: 'css' };\n            }\n        } else if (symbol._kind === 'import') {\n            const resolved = this.resolveImport(symbol);\n            if (resolved && resolved.symbol && resolved._kind === 'css') {\n                return this.resolveSymbolOrigin(resolved.symbol, resolved.meta, path);\n            } else {\n                return null;\n            }\n        }\n        return null;\n    }\n    public resolveSymbols(meta: StylableMeta, diagnostics: Diagnostics) {\n        const resolvedSymbols: MetaResolvedSymbols = {\n            mainNamespace: {},\n            class: {},\n            element: {},\n            var: {},\n            js: {},\n            customValues: { ...stTypes },\n            keyframes: {},\n            layer: {},\n            container: {},\n            cssVar: {},\n            import: {},\n        };\n        // resolve main namespace\n        for (const [name, symbol] of Object.entries(meta.getAllSymbols())) {\n            let deepResolved: CSSResolve | JSResolve | null;\n            if (symbol._kind === `import` || (symbol._kind === `cssVar` && symbol.alias)) {\n                deepResolved = this.deepResolve(symbol);\n                if (!deepResolved || !deepResolved.symbol) {\n                    // diagnostics for unresolved imports are reported\n                    // as part of st-import validateImports\n                    continue;\n                } else if (deepResolved?._kind === `js`) {\n                    resolvedSymbols.js[name] = deepResolved;\n                    resolvedSymbols.mainNamespace[name] = `js`;\n\n                    const customValueSymbol = deepResolved.symbol;\n                    if (isCustomValue(customValueSymbol)) {\n                        resolvedSymbols.customValues[name] = customValueSymbol.register(name);\n                    }\n\n                    continue;\n                } else if (\n                    symbol._kind !== `cssVar` &&\n                    (deepResolved.symbol._kind === `class` ||\n                        deepResolved.symbol._kind === `element`)\n                ) {\n                    // virtual alias\n                    deepResolved = {\n                        _kind: `css`,\n                        meta,\n                        symbol: CSSClass.createSymbol({ name, alias: symbol }),\n                    };\n                }\n            } else {\n                deepResolved = { _kind: `css`, meta, symbol };\n            }\n            switch (deepResolved.symbol._kind) {\n                case `class`:\n                    resolvedSymbols.class[name] = this.resolveExtends(\n                        meta,\n                        deepResolved.symbol,\n                        false,\n                        undefined,\n                        validateClassResolveExtends(meta, name, diagnostics, deepResolved)\n                    );\n                    break;\n                case `element`:\n                    resolvedSymbols.element[name] = this.resolveExtends(meta, name, true);\n                    break;\n                case `var`:\n                    resolvedSymbols.var[name] = deepResolved as CSSResolve<VarSymbol>;\n                    break;\n                case `cssVar`:\n                    resolvedSymbols.cssVar[name] = deepResolved as CSSResolve<CSSVarSymbol>;\n                    break;\n            }\n            resolvedSymbols.mainNamespace[name] = deepResolved.symbol._kind;\n        }\n        // resolve keyframes\n        for (const [name, symbol] of Object.entries(CSSKeyframes.getAll(meta))) {\n            const result = resolveByNamespace(meta, symbol, this, 'keyframes');\n            if (result) {\n                resolvedSymbols.keyframes[name] = {\n                    _kind: `css`,\n                    meta: result.meta,\n                    symbol: result.symbol,\n                };\n            }\n        }\n        // resolve layers\n        for (const [name, symbol] of Object.entries(CSSLayer.getAll(meta))) {\n            const result = resolveByNamespace(meta, symbol, this, 'layer');\n            if (result) {\n                resolvedSymbols.layer[name] = {\n                    _kind: `css`,\n                    meta: result.meta,\n                    symbol: result.symbol,\n                };\n            }\n        }\n        // resolve containers\n        for (const [name, symbol] of Object.entries(CSSContains.getAll(meta))) {\n            const result = resolveByNamespace(meta, symbol, this, 'container');\n            if (result) {\n                resolvedSymbols.container[name] = {\n                    _kind: `css`,\n                    meta: result.meta,\n                    symbol: result.symbol,\n                };\n            }\n        }\n        return resolvedSymbols;\n    }\n    public resolveExtends(\n        meta: StylableMeta,\n        nameOrSymbol: string | ClassSymbol | ElementSymbol,\n        isElement = false,\n        transformer?: StylableTransformer,\n        reportError?: ReportError\n    ): CSSResolvePath {\n        const name = typeof nameOrSymbol === `string` ? nameOrSymbol : nameOrSymbol.name;\n        const symbol =\n            typeof nameOrSymbol === `string`\n                ? isElement\n                    ? meta.getTypeElement(nameOrSymbol)\n                    : meta.getClass(nameOrSymbol)\n                : nameOrSymbol;\n\n        const customSelector = isElement\n            ? null\n            : STCustomSelector.getCustomSelectorExpended(meta, name);\n\n        if (!symbol && !customSelector) {\n            return [];\n        }\n\n        if (customSelector && transformer) {\n            const parsed = transformer.resolveSelectorElements(meta, customSelector);\n            if (parsed.length === 1) {\n                return parsed[0][parsed[0].length - 1].resolved;\n            } else {\n                return [];\n            }\n        }\n\n        if (!symbol) {\n            return [];\n        }\n\n        let current = {\n            _kind: 'css' as const,\n            symbol,\n            meta,\n        };\n        const extendPath: Array<CSSResolve<ClassSymbol | ElementSymbol>> = [];\n\n        while (current?.symbol) {\n            if (isInPath(extendPath, current)) {\n                break;\n            }\n\n            extendPath.push(current);\n\n            const parent = current.symbol[`-st-extends`] || current.symbol.alias;\n\n            if (parent) {\n                if (parent._kind === 'import') {\n                    const res = this.resolve(parent);\n                    if (\n                        res &&\n                        res._kind === 'css' &&\n                        res.symbol &&\n                        (res.symbol._kind === 'element' || res.symbol._kind === 'class')\n                    ) {\n                        const { _kind, meta, symbol } = res;\n                        current = {\n                            _kind,\n                            meta,\n                            symbol,\n                        };\n                    } else {\n                        if (reportError) {\n                            reportError(res, parent, extendPath, meta, name, isElement);\n                        }\n                        break;\n                    }\n                } else {\n                    current = { _kind: 'css', symbol: parent, meta: current.meta };\n                }\n            } else {\n                break;\n            }\n        }\n\n        return extendPath;\n    }\n}\n\nfunction cacheKey(context: string, request: string) {\n    return `${context}${safePathDelimiter}${request}`;\n}\n\nfunction validateClassResolveExtends(\n    meta: StylableMeta,\n    name: string,\n    diagnostics: Diagnostics,\n    deepResolved: CSSResolve<StylableSymbol> | JSResolve | null\n): ReportError | undefined {\n    return (res, extend) => {\n        const decl = findRule(meta.sourceAst, '.' + name);\n        if (decl) {\n            // ToDo: move to STExtends\n            if (res && res._kind === 'js') {\n                diagnostics.report(CSSClass.diagnostics.CANNOT_EXTEND_JS(), {\n                    node: decl,\n                    word: decl.value,\n                });\n            } else if (res && !res.symbol) {\n                diagnostics.report(CSSClass.diagnostics.CANNOT_EXTEND_UNKNOWN_SYMBOL(extend.name), {\n                    node: decl,\n                    word: decl.value,\n                });\n            } else {\n                diagnostics.report(CSSClass.diagnostics.IMPORT_ISNT_EXTENDABLE(), {\n                    node: decl,\n                    word: decl.value,\n                });\n            }\n        } else {\n            if (deepResolved?.symbol.alias) {\n                meta.sourceAst.walkRules(new RegExp('\\\\.' + name), (rule) => {\n                    diagnostics.report(CSSClass.diagnostics.UNKNOWN_IMPORT_ALIAS(name), {\n                        node: rule,\n                        word: name,\n                    });\n                    return false;\n                });\n            }\n        }\n    };\n}\n\nexport function createSymbolResolverWithCache(\n    resolver: StylableResolver,\n    diagnostics: Diagnostics\n) {\n    const cache = new WeakMap<StylableMeta, MetaResolvedSymbols>();\n    return (meta: StylableMeta): MetaResolvedSymbols => {\n        let symbols = cache.get(meta);\n        if (!symbols) {\n            symbols = resolver.resolveSymbols(meta, diagnostics);\n            cache.set(meta, symbols);\n        }\n        return symbols;\n    };\n}\n\nfunction resolveByNamespace<NS extends STSymbol.Namespaces>(\n    meta: StylableMeta,\n    symbol: StylableSymbol,\n    resolver: StylableResolver,\n    type: NS\n): CSSResolve<STSymbol.SymbolByNamespace<NS>> | undefined {\n    const current = { meta, symbol };\n    while ('import' in current.symbol && current.symbol.import) {\n        const res = resolver.resolveImported(current.symbol.import, current.symbol.name, type);\n        if (res?._kind === 'css' && res.symbol?._kind === type) {\n            ({ meta: current.meta, symbol: current.symbol } = res);\n        } else {\n            return undefined;\n        }\n    }\n    if (current.symbol?._kind === type) {\n        return current as CSSResolve<STSymbol.SymbolByNamespace<typeof type>>;\n    }\n    return undefined;\n}\n", "import { dirname, relative } from 'path';\nimport postcssValueParser from 'postcss-value-parser';\nimport type * as postcss from 'postcss';\nimport { createDiagnosticReporter, Diagnostics } from './diagnostics';\nimport { nativeFunctionsDic } from './native-reserved-lists';\nimport { assureRelativeUrlPrefix } from './stylable-assets';\nimport type { StylableMeta } from './stylable-meta';\nimport {\n    StylableResolver,\n    createSymbolResolverWithCache,\n    MetaResolvedSymbols,\n} from './stylable-resolver';\nimport type { replaceValueHook, RuntimeStVar, StylableTransformer } from './stylable-transformer';\nimport { getFormatterArgs, getStringValue, stringifyFunction } from './helpers/value';\nimport { unescapeCSS } from './helpers/escape';\nimport type { ParsedValue } from './types';\nimport type { FeatureTransformContext } from './features/feature';\nimport { CSSCustomProperty, STVar } from './features';\nimport { unbox, CustomValueError } from './custom-values';\n\nexport interface EvalValueData {\n    value: string;\n    node?: postcss.Node;\n    meta: StylableMeta;\n    stVarOverride?: Record<string, string> | null;\n    cssVarsMapping?: Record<string, string>;\n    args?: string[];\n    rootArgument?: string;\n    initialNode?: postcss.Node;\n}\n\nexport interface EvalValueResult {\n    topLevelType: any;\n    runtimeValue: RuntimeStVar;\n    outputValue: string;\n    typeError?: Error;\n}\n\nexport class StylableEvaluator {\n    public stVarOverride: Record<string, string> | null | undefined;\n    public getResolvedSymbols: (meta: StylableMeta) => MetaResolvedSymbols;\n    public valueHook?: replaceValueHook;\n    constructor(options: {\n        stVarOverride?: Record<string, string> | null;\n        valueHook?: replaceValueHook;\n        getResolvedSymbols: (meta: StylableMeta) => MetaResolvedSymbols;\n    }) {\n        this.valueHook = options.valueHook;\n        this.stVarOverride = options.stVarOverride;\n        this.getResolvedSymbols = options.getResolvedSymbols;\n    }\n    evaluateValue(\n        context: Omit<FeatureTransformContext, 'getResolvedSymbols'>,\n        data: Omit<EvalValueData, 'passedThrough' | 'valueHook'>\n    ) {\n        return processDeclarationValue(\n            context.resolver,\n            this.getResolvedSymbols,\n            data.value,\n            data.meta,\n            data.node,\n            data.stVarOverride || this.stVarOverride,\n            this.valueHook,\n            context.diagnostics,\n            context.passedThrough,\n            data.cssVarsMapping,\n            data.args,\n            data.rootArgument,\n            data.initialNode\n        );\n    }\n}\n\n// old API\n\nexport const functionDiagnostics = {\n    FAIL_TO_EXECUTE_FORMATTER: createDiagnosticReporter(\n        '15001',\n        'error',\n        (resolvedValue: string, message: string) =>\n            `failed to execute formatter \"${resolvedValue}\" with error: \"${message}\"`\n    ),\n    UNKNOWN_FORMATTER: createDiagnosticReporter(\n        '15002',\n        'error',\n        (name: string) => `cannot find native function or custom formatter called ${name}`\n    ),\n};\n\nexport function resolveArgumentsValue(\n    options: Record<string, string>,\n    transformer: StylableTransformer,\n    meta: StylableMeta,\n    diagnostics: Diagnostics,\n    node: postcss.Node,\n    variableOverride?: Record<string, string>,\n    path?: string[],\n    cssVarsMapping?: Record<string, string>\n) {\n    const resolvedArgs = {} as Record<string, string>;\n    for (const k in options) {\n        resolvedArgs[k] = evalDeclarationValue(\n            transformer.resolver,\n            unescapeCSS(options[k]),\n            meta,\n            node,\n            variableOverride,\n            transformer.replaceValueHook,\n            diagnostics,\n            path,\n            cssVarsMapping,\n            undefined\n        );\n    }\n    return resolvedArgs;\n}\n\nexport function processDeclarationValue(\n    resolver: StylableResolver,\n    getResolvedSymbols: (meta: StylableMeta) => MetaResolvedSymbols,\n    value: string,\n    meta: StylableMeta,\n    node?: postcss.Node,\n    variableOverride?: Record<string, string> | null,\n    valueHook?: replaceValueHook,\n    diagnostics: Diagnostics = new Diagnostics(),\n    passedThrough: string[] = [],\n    cssVarsMapping: Record<string, string> = {},\n    args: string[] = [],\n    rootArgument?: string,\n    initialNode?: postcss.Node\n): EvalValueResult {\n    const evaluator = new StylableEvaluator({\n        stVarOverride: variableOverride,\n        valueHook,\n        getResolvedSymbols,\n    });\n    const resolvedSymbols = getResolvedSymbols(meta);\n    const parsedValue: any = postcssValueParser(value);\n    parsedValue.walk((parsedNode: ParsedValue) => {\n        const { type, value } = parsedNode;\n        if (type === `function`) {\n            if (value === 'value') {\n                STVar.hooks.transformValue({\n                    context: {\n                        meta,\n                        diagnostics,\n                        resolver,\n                        evaluator,\n                        getResolvedSymbols,\n                        passedThrough,\n                    },\n                    data: {\n                        value,\n                        node,\n                        meta,\n                        stVarOverride: variableOverride,\n                        cssVarsMapping,\n                        args,\n                        rootArgument,\n                        initialNode,\n                    },\n                    node: parsedNode,\n                });\n            } else if (value === '') {\n                parsedNode.resolvedValue = stringifyFunction(value, parsedNode);\n            } else if (resolvedSymbols.customValues[value]) {\n                // no op resolved at the bottom\n            } else if (value === 'url') {\n                // postcss-value-parser treats url differently:\n                // https://github.com/TrySound/postcss-value-parser/issues/34\n                const url = parsedNode.nodes[0];\n                if ((url.type === 'word' || url.type === 'string') && url.value.startsWith('~')) {\n                    const sourceDir = dirname(meta.source);\n                    url.value = assureRelativeUrlPrefix(\n                        relative(\n                            sourceDir,\n                            resolver.resolvePath(sourceDir, url.value.slice(1))\n                        ).replace(/\\\\/gm, '/')\n                    );\n                }\n            } else if (value === 'format') {\n                // preserve native format function arg quotation\n                parsedNode.resolvedValue = stringifyFunction(value, parsedNode, true);\n            } else if (resolvedSymbols.js[value]) {\n                const formatter = resolvedSymbols.js[value];\n                const formatterArgs = getFormatterArgs(parsedNode);\n                try {\n                    parsedNode.resolvedValue = formatter.symbol.apply(null, formatterArgs);\n                    if (evaluator.valueHook && typeof parsedNode.resolvedValue === 'string') {\n                        parsedNode.resolvedValue = evaluator.valueHook(\n                            parsedNode.resolvedValue,\n                            { name: parsedNode.value, args: formatterArgs },\n                            true,\n                            passedThrough\n                        );\n                    }\n                } catch (error) {\n                    parsedNode.resolvedValue = stringifyFunction(value, parsedNode);\n                    if (diagnostics && node) {\n                        diagnostics.report(\n                            functionDiagnostics.FAIL_TO_EXECUTE_FORMATTER(\n                                parsedNode.resolvedValue,\n                                (error as Error)?.message\n                            ),\n                            {\n                                node,\n                                word: (node as postcss.Declaration).value,\n                            }\n                        );\n                    }\n                }\n            } else if (value === 'var') {\n                CSSCustomProperty.hooks.transformValue({\n                    context: {\n                        meta,\n                        diagnostics,\n                        resolver,\n                        evaluator,\n                        getResolvedSymbols,\n                        passedThrough,\n                    },\n                    data: {\n                        value,\n                        node,\n                        meta,\n                        stVarOverride: variableOverride,\n                        cssVarsMapping,\n                        args,\n                        rootArgument,\n                        initialNode,\n                    },\n                    node: parsedNode,\n                });\n            } else if (nativeFunctionsDic[value]) {\n                const { preserveQuotes } = nativeFunctionsDic[value];\n                parsedNode.resolvedValue = stringifyFunction(value, parsedNode, preserveQuotes);\n            } else if (node) {\n                parsedNode.resolvedValue = stringifyFunction(value, parsedNode);\n                diagnostics.report(functionDiagnostics.UNKNOWN_FORMATTER(value), {\n                    node,\n                    word: value,\n                });\n            }\n        }\n    }, true);\n\n    let outputValue = '';\n    let topLevelType = null;\n    let runtimeValue = null;\n    let typeError: Error | undefined = undefined;\n    for (const n of parsedValue.nodes) {\n        if (n.type === 'function') {\n            const matchingType = resolvedSymbols.customValues[n.value];\n\n            if (matchingType) {\n                try {\n                    topLevelType = matchingType.evalVarAst(n, resolvedSymbols.customValues, true);\n                    runtimeValue = unbox(topLevelType, true, resolvedSymbols.customValues, n);\n                    try {\n                        outputValue += matchingType.getValue(\n                            args,\n                            topLevelType,\n                            n,\n                            resolvedSymbols.customValues\n                        );\n                    } catch (error) {\n                        if (error instanceof CustomValueError) {\n                            outputValue += error.fallbackValue;\n                        } else {\n                            throw error;\n                        }\n                    }\n                } catch (e) {\n                    typeError = e as Error;\n\n                    const invalidNode = initialNode || node;\n\n                    if (invalidNode) {\n                        diagnostics.report(\n                            STVar.diagnostics.COULD_NOT_RESOLVE_VALUE(\n                                [...(rootArgument ? [rootArgument] : []), ...args].join(', ')\n                            ),\n                            {\n                                node: invalidNode,\n                                word: value,\n                            }\n                        );\n                    } else {\n                        // TODO: catch broken variable resolutions without a node\n                    }\n                }\n            } else {\n                outputValue += getStringValue([n]);\n            }\n        } else {\n            outputValue += getStringValue([n]);\n        }\n    }\n    return { outputValue, topLevelType, typeError, runtimeValue };\n}\n\nexport function evalDeclarationValue(\n    resolver: StylableResolver,\n    value: string,\n    meta: StylableMeta,\n    node?: postcss.Node,\n    variableOverride?: Record<string, string> | null,\n    valueHook?: replaceValueHook,\n    diagnostics?: Diagnostics,\n    passedThrough: string[] = [],\n    cssVarsMapping?: Record<string, string>,\n    args: string[] = [],\n    getResolvedSymbols: (meta: StylableMeta) => MetaResolvedSymbols = createSymbolResolverWithCache(\n        resolver,\n        diagnostics || new Diagnostics()\n    )\n): string {\n    return processDeclarationValue(\n        resolver,\n        getResolvedSymbols,\n        value,\n        meta,\n        node,\n        variableOverride,\n        valueHook,\n        diagnostics,\n        passedThrough,\n        cssVarsMapping,\n        args\n    ).outputValue;\n}\n", "import path from 'path';\nimport type * as postcss from 'postcss';\nimport { processDeclarationFunctions } from './process-declaration-functions';\n\nfunction isExternal(url: string) {\n    return url === '' || url.startsWith('data:') || isUrl(url);\n}\n\nfunction isUrl(maybeUrl: string) {\n    maybeUrl = maybeUrl.trim();\n    if (maybeUrl.includes(' ')) {\n        return false;\n    }\n    try {\n        new URL(maybeUrl);\n        return true;\n    } catch {\n        return false;\n    }\n}\n\nexport function isAsset(url: string) {\n    return !isExternal(url);\n}\n\nexport function isRelativeNativeCss(fullPath: string) {\n    return (\n        fullPath.endsWith('.css') &&\n        !fullPath.endsWith('.st.css') &&\n        !fullPath.includes(path.sep + 'node_modules' + path.sep) &&\n        !isUrl(fullPath)\n    );\n}\n\nexport function makeAbsolute(\n    host: {\n        join: (...paths: string[]) => string;\n        isAbsolute: (path: string) => boolean;\n    },\n    resourcePath: string,\n    rootContext: string,\n    moduleContext: string\n) {\n    const isAbs = host.isAbsolute(resourcePath);\n    let abs: string;\n    if (isExternal(resourcePath) || resourcePath.startsWith('~')) {\n        abs = resourcePath;\n    } else if (isAbs && resourcePath.startsWith('/')) {\n        abs = host.join(rootContext, resourcePath);\n    } else if (isAbs) {\n        abs = resourcePath;\n    } else {\n        abs = host.join(moduleContext, resourcePath);\n    }\n    return abs;\n}\n\nexport function fixRelativeUrls(ast: postcss.Root, originPath: string, targetPath: string) {\n    ast.walkDecls((decl) => {\n        processDeclarationFunctions(\n            decl,\n            (node) => {\n                if (node.type === 'url') {\n                    if (!node.url || !isAsset(node.url) || !node.url.startsWith('.')) {\n                        return;\n                    }\n                    const url = path\n                        .join(\n                            path.relative(path.dirname(targetPath), path.dirname(originPath)),\n                            node.url\n                        )\n                        .replace(/\\\\/gm, '/');\n                    node.url = assureRelativeUrlPrefix(url);\n                }\n            },\n            true\n        );\n    });\n}\n\nexport function assureRelativeUrlPrefix(url: string) {\n    return !url.startsWith('./') && !url.startsWith('../') ? './' + url : url;\n}\n", "import type { Declaration } from 'postcss';\nimport { AnyValueNode, parseValues, stringifyValues } from 'css-selector-tokenizer';\n\nexport type OnFunction = (node: AnyValueNode, level: number) => void;\n\nexport function processDeclarationFunctions(\n    decl: Declaration,\n    onFunction: OnFunction,\n    transform = false\n) {\n    const ast = parseValues(decl.value);\n\n    ast.nodes.forEach((node) => findFunction(node, onFunction, 1));\n\n    if (transform) {\n        decl.value = stringifyValues(ast);\n    }\n}\n\nfunction findFunction(node: AnyValueNode, onFunctionNode: OnFunction, level: number) {\n    switch (node.type) {\n        case 'value':\n        case 'values':\n            onFunctionNode(node, level);\n            node.nodes.forEach((child) => findFunction(child, onFunctionNode, level));\n            break;\n        case 'url':\n        case 'item':\n            onFunctionNode(node, level);\n            break;\n        case 'nested-item':\n            onFunctionNode(node, level);\n            node.nodes.forEach((child) => findFunction(child, onFunctionNode, level + 1));\n            break;\n    }\n}\n", "import cssesc from 'cssesc';\n\nexport function unescapeCSS(text: string) {\n    return text.replace(/\\\\(.)/g, `$1`);\n}\n\nexport function namespaceEscape(name: string, namespace: string) {\n    return namespace ? cssesc(namespace, { isIdentifier: true }) + `__` + name : name;\n}\n", "import { plugableRecord } from '../helpers/plugable-record';\nimport { createFeature } from './feature';\nimport {\n    transformInlineCustomSelectorMap,\n    transformInlineCustomSelectors,\n    CustomSelectorMap,\n} from '../helpers/custom-selector';\nimport { parseSelectorWithCache } from '../helpers/selector';\nimport * as postcss from 'postcss';\nimport { SelectorList, stringifySelectorAst } from '@tokey/css-selector-parser';\nimport type { StylableMeta } from '../stylable-meta';\nimport { createDiagnosticReporter, Diagnostics } from '../diagnostics';\n\nexport const diagnostics = {\n    UNKNOWN_CUSTOM_SELECTOR: createDiagnosticReporter(\n        '18001',\n        'error',\n        (selector: string) => `The selector '${selector}' is undefined`\n    ),\n};\n\ninterface AnalyzedCustomSelector {\n    selector: string;\n    ast: SelectorList;\n    isScoped: boolean;\n    def: postcss.AtRule;\n}\n\nconst dataKey = plugableRecord.key<Record<string, AnalyzedCustomSelector>>('st-custom-selector');\n\nexport const CUSTOM_SELECTOR_RE = /:--[\\w-]+/g;\n\n// HOOKS\n\nexport const hooks = createFeature({\n    metaInit({ meta }) {\n        plugableRecord.set(meta.data, dataKey, {});\n    },\n    analyzeAtRule({ context, atRule, analyzeRule }) {\n        const params = atRule.params.split(/\\s/);\n        const customSelector = params.shift();\n        if (customSelector && customSelector.match(CUSTOM_SELECTOR_RE)) {\n            const selector = atRule.params.replace(customSelector, '').trim();\n            const ast = parseSelectorWithCache(selector, { clone: true });\n            const isScoped = analyzeRule(postcss.rule({ selector, source: atRule.source }), {\n                isScoped: false,\n                originalNode: atRule,\n            });\n            const analyzed = plugableRecord.getUnsafe(context.meta.data, dataKey);\n            const name = customSelector.slice(3);\n            analyzed[name] = { selector, ast, isScoped, def: atRule };\n        } else {\n            // TODO: add warn there are two types one is not valid name and the other is empty name.\n        }\n    },\n    analyzeDone(context) {\n        const analyzed = plugableRecord.getUnsafe(context.meta.data, dataKey);\n        const customSelectors: CustomSelectorMap = {};\n        for (const [name, data] of Object.entries(analyzed)) {\n            customSelectors[name] = data.ast;\n        }\n        const inlined = transformInlineCustomSelectorMap(customSelectors, (report) => {\n            if (report.type === 'unknown' && analyzed[report.origin]) {\n                const unknownSelector = `:--${report.unknown}`;\n                context.diagnostics.report(diagnostics.UNKNOWN_CUSTOM_SELECTOR(unknownSelector), {\n                    node: analyzed[report.origin].def,\n                    word: unknownSelector,\n                });\n            } else if (report.type === 'circular') {\n                // ToDo: report error\n            }\n        });\n        // cache inlined selector\n        for (const [name, ast] of Object.entries(inlined)) {\n            analyzed[name].ast = ast;\n            analyzed[name].selector = stringifySelectorAst(ast);\n        }\n    },\n    prepareAST({ context, node, toRemove }) {\n        // called without experimentalSelectorInference\n        // split selectors & remove definitions\n        if (node.type === 'rule' && node.selector.match(CUSTOM_SELECTOR_RE)) {\n            node.selector = transformCustomSelectorInline(context.meta, node.selector, {\n                diagnostics: context.diagnostics,\n                node,\n            });\n        } else if (node.type === 'atrule' && node.name === 'custom-selector') {\n            toRemove.push(node);\n        }\n    },\n    transformSelectorNode({ context, selectorContext, node }) {\n        const customSelector =\n            node.value.startsWith('--') &&\n            getCustomSelectorExpended(context.meta, node.value.slice(2));\n        if (customSelector) {\n            const mappedSelectorAst = parseSelectorWithCache(customSelector, { clone: true });\n            const mappedContext = selectorContext.createNestedContext(mappedSelectorAst);\n            selectorContext.scopeSelectorAst(mappedContext);\n            const inferredSelector = selectorContext.experimentalSelectorInference\n                ? mappedContext.inferredMultipleSelectors\n                : mappedContext.inferredSelector;\n            selectorContext.setNextSelectorScope(inferredSelector, node); // doesn't add to the resolved elements\n            if (selectorContext.transform) {\n                selectorContext.transformIntoMultiSelector(node, mappedSelectorAst);\n            }\n        }\n        return !!customSelector;\n    },\n    transformAtRuleNode({ atRule }) {\n        if (atRule.name === 'custom-selector') {\n            atRule.remove();\n        }\n    },\n});\n\n// API\n\nexport function isScoped(meta: StylableMeta, name: string) {\n    const analyzed = plugableRecord.getUnsafe(meta.data, dataKey);\n    return analyzed[name]?.isScoped;\n}\n\nexport function getCustomSelector(meta: StylableMeta, name: string): SelectorList | undefined {\n    return plugableRecord.getUnsafe(meta.data, dataKey)[name]?.ast;\n}\nexport function getCustomSelectors(meta: StylableMeta) {\n    const analyzed = plugableRecord.getUnsafe(meta.data, dataKey);\n    return Object.entries(analyzed).reduce((acc, [name, { ast }]) => {\n        acc[name] = ast;\n        return acc;\n    }, {} as Record<string, AnalyzedCustomSelector['ast']>);\n}\n\nexport function getCustomSelectorExpended(meta: StylableMeta, name: string): string | undefined {\n    const analyzed = plugableRecord.getUnsafe(meta.data, dataKey);\n    return analyzed[name]?.selector;\n}\n\nexport function getCustomSelectorNames(meta: StylableMeta): string[] {\n    const analyzed = plugableRecord.getUnsafe(meta.data, dataKey);\n    return Object.keys(analyzed).map((name) => `:--${name}`);\n}\n\nexport function transformCustomSelectorInline(\n    meta: StylableMeta,\n    selector: string,\n    options: { diagnostics?: Diagnostics; node?: postcss.Node } = {}\n) {\n    const ast = parseSelectorWithCache(selector, { clone: true });\n    const analyzed = plugableRecord.getUnsafe(meta.data, dataKey);\n    const inlined = transformInlineCustomSelectors(\n        ast,\n        (name) => analyzed[name]?.ast,\n        (report) => {\n            if (options.diagnostics && options.node) {\n                const unknownSelector = `:--${report.unknown}`;\n                options.diagnostics.report(diagnostics.UNKNOWN_CUSTOM_SELECTOR(unknownSelector), {\n                    node: options.node,\n                    word: unknownSelector,\n                });\n            }\n        }\n    );\n    return stringifySelectorAst(inlined);\n}\n", "import { createFeature } from './feature';\nimport {\n    stateDiagnostics,\n    parsePseudoStates,\n    parseStateValue,\n    transformPseudoClassToCustomState,\n    booleanStateDelimiter,\n    stateMiddleDelimiter,\n    stateWithParamDelimiter,\n    createBooleanStateClassName,\n    createStateWithParamClassName,\n    systemValidators,\n    validationErrors as sysValidationErrors,\n    resolveStateParam,\n    isTemplateState,\n    MappedStates,\n} from '../helpers/custom-state';\n\nexport interface HasStates {\n    '-st-states': MappedStates;\n}\n\nexport const diagnostics = {\n    ...stateDiagnostics,\n};\n\n// HOOKS\n\nexport const hooks = createFeature({});\n\nconst delimiters = {\n    booleanStateDelimiter,\n    stateMiddleDelimiter,\n    stateWithParamDelimiter,\n};\nexport {\n    parsePseudoStates,\n    parseStateValue,\n    transformPseudoClassToCustomState,\n    delimiters,\n    createBooleanStateClassName,\n    createStateWithParamClassName,\n    systemValidators,\n    sysValidationErrors,\n    resolveStateParam,\n    isTemplateState,\n    MappedStates,\n};\n", "import type * as postcss from 'postcss';\nimport postcssValueParser, {\n    type Node as ValueNode,\n    type FunctionNode,\n} from 'postcss-value-parser';\nimport cssesc from 'cssesc';\nimport type { PseudoClass, SelectorNode } from '@tokey/css-selector-parser';\nimport { createDiagnosticReporter, Diagnostics } from '../diagnostics';\nimport {\n    parseSelectorWithCache,\n    stringifySelector,\n    convertToClass,\n    convertToInvalid,\n    convertToSelector,\n} from './selector';\nimport { groupValues, listOptions } from './value';\nimport { stripQuotation } from './string';\nimport { evalDeclarationValue } from '../functions';\nimport type { StylableMeta } from '../stylable-meta';\nimport type { StylableResolver } from '../stylable-resolver';\nimport type { ParsedValue } from '../types';\nimport { CSSClass } from '../features';\nimport { reservedFunctionalPseudoClasses } from '../native-reserved-lists';\nimport { BaseAstNode, stringifyCSSValue } from '@tokey/css-value-parser';\nimport { findCustomIdent, findNextCallNode } from './css-value-seeker';\n\nexport interface MappedStates {\n    [s: string]: StateParsedValue | string | TemplateStateParsedValue | null;\n}\nexport interface TemplateStateParsedValue {\n    type: 'template';\n    template: string;\n    params: [StateParsedValue];\n}\nexport interface StateParsedValue {\n    type: string;\n    defaultValue?: string;\n    arguments: StateArguments;\n}\nexport interface StateTypeValidator {\n    name: string;\n    args: string[];\n}\n\ntype StateArguments = Array<StateTypeValidator | string>;\n\nexport const stateMiddleDelimiter = '-';\nexport const booleanStateDelimiter = '--';\nexport const stateWithParamDelimiter = booleanStateDelimiter + stateMiddleDelimiter;\n\nexport const stateDiagnostics = {\n    MISSING_TYPE_OR_TEMPLATE: createDiagnosticReporter(\n        '08000',\n        'error',\n        (name: string) => `pseudo-state \"${name}\" missing type or template`\n    ),\n    UNKNOWN_STATE_TYPE: createDiagnosticReporter(\n        '08002',\n        'error',\n        (name: string, type: string) =>\n            `pseudo-state \"${name}\" defined with unknown type: \"${type}\"`\n    ),\n    TOO_MANY_STATE_TYPES: createDiagnosticReporter(\n        '08003',\n        'error',\n        (name: string, types: string[]) =>\n            `pseudo-state \"${name}(${types.join(', ')})\" definition must be of a single type`\n    ),\n    NO_STATE_TYPE_GIVEN: createDiagnosticReporter(\n        '08005',\n        'warning',\n        (name: string) =>\n            `pseudo-state \"${name}\" expected a definition of a single type, but received none`\n    ),\n    TOO_MANY_ARGS_IN_VALIDATOR: createDiagnosticReporter(\n        '08006',\n        'error',\n        (name: string, validator: string, args: string[]) =>\n            `pseudo-state \"${name}\" expected \"${validator}\" validator to receive a single argument, but it received \"${args.join(\n                ', '\n            )}\"`\n    ),\n    STATE_STARTS_WITH_HYPHEN: createDiagnosticReporter(\n        '08007',\n        'error',\n        (name: string) =>\n            `state \"${name}\" declaration cannot begin with a \"${stateMiddleDelimiter}\" character`\n    ),\n    RESERVED_NATIVE_STATE: createDiagnosticReporter(\n        '08008',\n        'warning',\n        (name: string) => `state \"${name}\" is reserved for native pseudo-class`\n    ),\n    DEFAULT_PARAM_FAILS_VALIDATION: createDiagnosticReporter(\n        '08010',\n        'error',\n        (stateName: string, defaultValue: string, errors: string[]) =>\n            `pseudo-state \"${stateName}\" default value \"${defaultValue}\" failed validation:\\n${errors.join(\n                '\\n'\n            )}`\n    ),\n    NO_STATE_ARGUMENT_GIVEN: createDiagnosticReporter(\n        '08004',\n        'error',\n        (name: string, type: string) =>\n            `pseudo-state \"${name}\" expected argument of type \"${type}\" but got none`\n    ),\n    FAILED_STATE_VALIDATION: createDiagnosticReporter(\n        '08009',\n        'error',\n        (name: string, actualParam: string, errors: string[]) =>\n            [\n                `pseudo-state \"${name}\" with parameter \"${actualParam}\" failed validation:`,\n                ...errors,\n            ].join('\\n')\n    ),\n    TEMPLATE_MISSING_PLACEHOLDER: createDiagnosticReporter(\n        '08011',\n        'warning',\n        (state: string, template: string) =>\n            `pseudo-state \"${state}\" template \"${template}\" is missing a placeholder, use \"$0\" to set the parameter insertion place`\n    ),\n    TEMPLATE_MULTI_PARAMETERS: createDiagnosticReporter(\n        '08012',\n        'error',\n        (state: string) => `pseudo-state \"${state}\" template only supports a single parameter`\n    ),\n    TEMPLATE_MISSING_PARAMETER: createDiagnosticReporter(\n        '08013',\n        'error',\n        (state: string) => `pseudo-state \"${state}\" template expected a parameter definition`\n    ),\n    UNSUPPORTED_MULTI_SELECTOR: createDiagnosticReporter(\n        '08014',\n        'error',\n        (state: string, finalSelector: string) =>\n            `pseudo-state \"${state}\" resulted in an unsupported multi selector \"${finalSelector}\"`\n    ),\n    UNSUPPORTED_COMPLEX_SELECTOR: createDiagnosticReporter(\n        '08015',\n        'error',\n        (state: string, finalSelector: string) =>\n            `pseudo-state \"${state}\" resulted in an unsupported complex selector \"${finalSelector}\"`\n    ),\n    INVALID_SELECTOR: createDiagnosticReporter(\n        '08016',\n        'error',\n        (state: string, finalSelector: string) =>\n            `pseudo-state \"${state}\" resulted in an invalid selector \"${finalSelector}\"`\n    ),\n    UNSUPPORTED_INITIAL_SELECTOR: createDiagnosticReporter(\n        '08017',\n        'error',\n        (state: string, finalSelector: string) =>\n            `pseudo-state \"${state}\" result cannot start with a type or universal selector \"${finalSelector}\"`\n    ),\n    NO_PARAM_REQUIRED: createDiagnosticReporter(\n        '08018',\n        'error',\n        (name: string, param: string) =>\n            `pseudo-state \"${name}\" accepts no parameter, but received \"${param}\"`\n    ),\n};\n\n// parse\n\nexport function parsePseudoStates(\n    value: string,\n    decl: postcss.Declaration,\n    diagnostics: Diagnostics\n) {\n    const mappedStates: MappedStates = {};\n    const ast = postcssValueParser(value);\n    const statesSplitByComma = groupValues(ast.nodes);\n\n    statesSplitByComma.forEach((workingState: ParsedValue[]) => {\n        const [stateDefinition, ...stateDefault] = workingState;\n        const stateName = stateDefinition.value;\n        if (!validateStateName(stateName, diagnostics, decl)) {\n            return;\n        }\n\n        if (stateDefinition.type === 'function') {\n            resolveStateType(\n                stateDefinition as FunctionNode,\n                mappedStates,\n                stateDefault,\n                diagnostics,\n                decl\n            );\n        } else if (stateDefinition.type === 'word') {\n            resolveBooleanState(mappedStates, stateDefinition);\n        } else {\n            // TODO: Invalid state, edge case needs warning\n        }\n    });\n\n    return mappedStates;\n}\nfunction validateStateName(name: string, diagnostics: Diagnostics, node: postcss.Node) {\n    if (name.startsWith('-')) {\n        diagnostics.report(stateDiagnostics.STATE_STARTS_WITH_HYPHEN(name), {\n            node: node,\n            word: name,\n        });\n    } else if (reservedFunctionalPseudoClasses.includes(name)) {\n        diagnostics.report(stateDiagnostics.RESERVED_NATIVE_STATE(name), {\n            node: node,\n            word: name,\n        });\n        return false;\n    }\n    return true;\n}\nexport function parseStateValue(\n    value: BaseAstNode[],\n    node: postcss.Node,\n    diagnostics: Diagnostics\n): [amountTaken: number, stateDef: MappedStates[string] | undefined] {\n    let stateName = '';\n    let stateDef: MappedStates[string] = null; /*boolean*/\n    let amountTaken = 0;\n    const customIdentResult = findCustomIdent(value, 0);\n    const [amountToName, nameNode] = customIdentResult[0]\n        ? customIdentResult\n        : findNextCallNode(value, 0);\n    if (nameNode && validateStateName(nameNode.value, diagnostics, node)) {\n        amountTaken += amountToName;\n        stateName = nameNode.value;\n        // state with parameter\n        if (nameNode.type === 'call') {\n            // take all of the definition since default value takes the rest\n            amountTaken = value.length;\n            // ToDo: translate resolveStateType to tokey and remove the double parsing\n            const postcssStateValue = postcssValueParser(\n                stringifyCSSValue(value.slice(amountToName - 1))\n            );\n            // get state definition\n            const [stateDefinition, ...stateDefault] = postcssStateValue.nodes;\n            const stateMap: MappedStates = {};\n            resolveStateType(\n                stateDefinition as FunctionNode,\n                stateMap,\n                stateDefault,\n                diagnostics,\n                node as postcss.Declaration // ToDo: change to accept any postcss node\n            );\n            if (stateMap[stateName]) {\n                stateDef = stateMap[stateName];\n            }\n        }\n    }\n    if (stateName) {\n        return [amountTaken, stateDef];\n    }\n    return [0, undefined];\n}\nfunction resolveBooleanState(mappedStates: MappedStates, stateDefinition: ParsedValue) {\n    const currentState = mappedStates[stateDefinition.value];\n    if (!currentState) {\n        mappedStates[stateDefinition.value] = null; // add boolean state\n    } else {\n        // TODO: warn with such name already exists\n    }\n}\nfunction resolveStateType(\n    stateDefinition: FunctionNode,\n    mappedStates: MappedStates,\n    stateDefault: ParsedValue[],\n    diagnostics: Diagnostics,\n    decl: postcss.Declaration\n) {\n    const stateName = stateDefinition.value;\n    if (stateDefinition.nodes.length === 0) {\n        resolveBooleanState(mappedStates, stateDefinition);\n\n        diagnostics.report(stateDiagnostics.NO_STATE_TYPE_GIVEN(stateName), {\n            node: decl,\n            word: decl.value,\n        });\n\n        return;\n    }\n    const { paramType, argsFirstNode, argsFullValue } = collectStateArgsDef(stateDefinition.nodes);\n\n    if (!paramType) {\n        diagnostics.report(stateDiagnostics.MISSING_TYPE_OR_TEMPLATE(stateName), {\n            node: decl,\n        });\n        return;\n    }\n\n    if (paramType?.type === 'string') {\n        defineTemplateState(\n            stateName,\n            paramType,\n            argsFirstNode,\n            argsFullValue,\n            mappedStates,\n            diagnostics,\n            decl\n        );\n    } else {\n        if (argsFullValue.length > 1) {\n            diagnostics.report(\n                stateDiagnostics.TOO_MANY_STATE_TYPES(\n                    stateName,\n                    argsFirstNode.map((argNode) =>\n                        argNode ? postcssValueParser.stringify(argNode) : ''\n                    )\n                ),\n                {\n                    node: decl,\n                    word: decl.value,\n                }\n            );\n        }\n        defineParamState(\n            stateName,\n            paramType,\n            stateDefault,\n            mappedStates,\n            diagnostics,\n            stateDefinition,\n            decl\n        );\n    }\n}\nfunction defineTemplateState(\n    stateName: string,\n    templateDef: postcssValueParser.StringNode,\n    argsFirstNode: (postcssValueParser.Node | undefined)[],\n    argsFullValue: postcssValueParser.Node[][],\n    mappedStates: MappedStates,\n    diagnostics: Diagnostics,\n    decl: postcss.Declaration\n) {\n    const template = stripQuotation(postcssValueParser.stringify(templateDef));\n    if (argsFullValue.length === 1) {\n        // simple template with no params\n        mappedStates[stateName] = template.trim().replace(/\\\\[\"']/g, '\"');\n    } else if (argsFullValue.length === 2) {\n        // single parameter template\n        if (!template.includes('$0')) {\n            diagnostics.report(stateDiagnostics.TEMPLATE_MISSING_PLACEHOLDER(stateName, template), {\n                node: decl,\n                word: template,\n            });\n        }\n\n        const paramFullDef = argsFullValue[1];\n        const paramTypeDef = argsFirstNode[1];\n        if (!paramTypeDef) {\n            diagnostics.report(stateDiagnostics.TEMPLATE_MISSING_PARAMETER(stateName), {\n                node: decl,\n            });\n            return;\n        }\n        const param = createStateParamDef(\n            stateName + ' parameter',\n            paramTypeDef,\n            paramFullDef.splice(paramFullDef.indexOf(paramTypeDef) + 1),\n            diagnostics,\n            decl\n        );\n        if (!param) {\n            // UNKNOWN_STATE_TYPE reported in createStateParamDef\n            return;\n        }\n\n        const templateStateType: TemplateStateParsedValue = {\n            type: 'template',\n            template,\n            params: [param],\n        };\n\n        mappedStates[stateName] = templateStateType;\n    } else {\n        // unsupported multiple params\n        diagnostics.report(stateDiagnostics.TEMPLATE_MULTI_PARAMETERS(stateName), {\n            node: decl,\n        });\n    }\n}\nfunction defineParamState(\n    stateName: string,\n    paramType: postcssValueParser.Node,\n    stateDefault: ParsedValue[],\n    mappedStates: MappedStates,\n    diagnostics: Diagnostics,\n    stateDefinition: FunctionNode,\n    decl: postcss.Declaration\n) {\n    if (paramType.value === 'boolean') {\n        // explicit boolean // ToDo: remove support\n        resolveBooleanState(mappedStates, stateDefinition);\n    } else {\n        const stateParamDef = createStateParamDef(\n            stateName,\n            paramType,\n            stateDefault,\n            diagnostics,\n            decl\n        );\n        if (stateParamDef) {\n            mappedStates[stateName] = stateParamDef;\n        }\n    }\n}\nfunction createStateParamDef(\n    stateName: string,\n    typeDef: postcssValueParser.Node,\n    stateDefault: ParsedValue[],\n    diagnostics: Diagnostics,\n    decl: postcss.Declaration\n): StateParsedValue | undefined {\n    const type = typeDef.value;\n    if (type in systemValidators && (typeDef.type === 'function' || typeDef.type === 'word')) {\n        const stateType: StateParsedValue = {\n            type,\n            arguments: [],\n            defaultValue: postcssValueParser\n                .stringify(stateDefault as postcssValueParser.Node[])\n                .trim(),\n        };\n        if (typeDef.type === 'function' && typeDef.nodes.length > 0) {\n            resolveArguments(typeDef, stateType, stateName, diagnostics, decl);\n        }\n        return stateType;\n    } else {\n        const srcValue = postcssValueParser.stringify(typeDef);\n        diagnostics.report(stateDiagnostics.UNKNOWN_STATE_TYPE(stateName, srcValue), {\n            node: decl,\n            word: srcValue,\n        });\n        return;\n    }\n}\nfunction collectStateArgsDef(nodes: ValueNode[]) {\n    const argsFullValue: ValueNode[][] = [];\n    const argsFirstNode: Array<ValueNode | undefined> = [];\n    let collectedArg: ValueNode[] = [];\n    let firstActualValue: ValueNode | undefined = undefined;\n\n    for (const node of nodes) {\n        if (node.type === 'div') {\n            argsFullValue.push(collectedArg);\n            argsFirstNode.push(firstActualValue);\n            collectedArg = [];\n            firstActualValue = undefined;\n        } else {\n            collectedArg.push(node);\n            if (!firstActualValue && node.type !== 'space' && node.type !== 'comment') {\n                firstActualValue = node;\n            }\n        }\n    }\n\n    if (collectedArg.length) {\n        argsFullValue.push(collectedArg);\n        argsFirstNode.push(firstActualValue);\n    }\n\n    const paramType = argsFirstNode[0];\n\n    return { paramType, argsFullValue, argsFirstNode };\n}\nfunction resolveArguments(\n    paramType: ParsedValue,\n    stateType: StateParsedValue,\n    name: string,\n    diagnostics: Diagnostics,\n    decl: postcss.Declaration\n) {\n    const separatedByComma = groupValues(paramType.nodes);\n\n    separatedByComma.forEach((group) => {\n        const validator = group[0];\n        if (validator.type === 'function') {\n            const args = listOptions(validator);\n            if (args.length > 1) {\n                diagnostics.report(\n                    stateDiagnostics.TOO_MANY_ARGS_IN_VALIDATOR(name, validator.value, args),\n                    {\n                        node: decl,\n                        word: decl.value,\n                    }\n                );\n            } else {\n                stateType.arguments.push({\n                    name: validator.value,\n                    args,\n                });\n            }\n        } else if (validator.type === 'string' || validator.type === 'word') {\n            stateType.arguments.push(validator.value);\n        }\n    });\n}\n\n// validation\n\nexport interface StateResult {\n    res: string;\n    errors: string[] | null;\n}\n\nexport const validationErrors = {\n    string: {\n        STRING_TYPE_VALIDATION_FAILED: (actualParam: string) =>\n            `\"${actualParam}\" should be of type string`,\n        REGEX_VALIDATION_FAILED: (regex: string, actualParam: string) =>\n            `expected \"${actualParam}\" to match regex \"${regex}\"`,\n        CONTAINS_VALIDATION_FAILED: (shouldContain: string, actualParam: string) =>\n            `expected \"${actualParam}\" to contain string \"${shouldContain}\"`,\n        MIN_LENGTH_VALIDATION_FAILED: (length: string, actualParam: string) =>\n            `expected \"${actualParam}\" to be of length longer than or equal to ${length}`,\n        MAX_LENGTH_VALIDATION_FAILED: (length: string, actualParam: string) =>\n            `expected \"${actualParam}\" to be of length shorter than or equal to ${length}`,\n        UKNOWN_VALIDATOR: (name: string) => `encountered unknown string validator \"${name}\"`,\n    },\n    number: {\n        NUMBER_TYPE_VALIDATION_FAILED: (actualParam: string) =>\n            `expected \"${actualParam}\" to be of type number`,\n        MIN_VALIDATION_FAILED: (actualParam: string, min: string) =>\n            `expected \"${actualParam}\" to be larger than or equal to ${min}`,\n        MAX_VALIDATION_FAILED: (actualParam: string, max: string) =>\n            `expected \"${actualParam}\" to be lesser then or equal to ${max}`,\n        MULTIPLE_OF_VALIDATION_FAILED: (actualParam: string, multipleOf: string) =>\n            `expected \"${actualParam}\" to be a multiple of ${multipleOf}`,\n        UKNOWN_VALIDATOR: (name: string) => `encountered unknown number validator \"${name}\"`,\n    },\n    enum: {\n        ENUM_TYPE_VALIDATION_FAILED: (actualParam: string, options: string[]) =>\n            `expected \"${actualParam}\" to be one of the options: \"${options.join(', ')}\"`,\n        NO_OPTIONS_DEFINED: () => `expected enum to be defined with one option or more`,\n    },\n};\n\nexport type SubValidator = (value: string, ...rest: string[]) => StateResult;\n\nexport interface StateParamType {\n    subValidators?: Record<string, SubValidator>;\n    validate(\n        value: any,\n        args: StateArguments,\n        resolveParam: any,\n        validateDefinition: boolean,\n        validateValue: boolean\n    ): StateResult;\n}\n\nexport const systemValidators: Record<string, StateParamType> = {\n    string: {\n        validate(\n            value: any,\n            validators: StateArguments,\n            resolveParam: (s: string) => string,\n            validateDefinition,\n            validateValue\n        ) {\n            const res = value;\n            const errors: string[] = [];\n\n            if (validateValue && typeof value !== 'string') {\n                errors.push(validationErrors.string.STRING_TYPE_VALIDATION_FAILED(value));\n            }\n\n            if (validators.length > 0) {\n                validators.forEach((validatorMeta) => {\n                    if (typeof validatorMeta === 'object') {\n                        if (this.subValidators && this.subValidators[validatorMeta.name]) {\n                            const subValidator = this.subValidators[validatorMeta.name];\n\n                            const validationRes = subValidator(\n                                value,\n                                resolveParam(validatorMeta.args[0])\n                            );\n\n                            if (validateValue && validationRes.errors) {\n                                errors.push(...validationRes.errors);\n                            }\n                        } else if (validateDefinition) {\n                            errors.push(\n                                validationErrors.string.UKNOWN_VALIDATOR(validatorMeta.name)\n                            );\n                        }\n                    }\n                });\n            }\n\n            return { res, errors: errors.length ? errors : null };\n        },\n        subValidators: {\n            regex: (value: string, regex: string) => {\n                const r = new RegExp(regex);\n                const valid = r.test(value);\n\n                return {\n                    res: value,\n                    errors: valid\n                        ? null\n                        : [validationErrors.string.REGEX_VALIDATION_FAILED(regex, value)],\n                };\n            },\n            contains: (value: string, checkedValue: string) => {\n                const valid = !!~value.indexOf(checkedValue);\n\n                return {\n                    res: value,\n                    errors: valid\n                        ? null\n                        : [validationErrors.string.CONTAINS_VALIDATION_FAILED(checkedValue, value)],\n                };\n            },\n            minLength: (value: string, length: string) => {\n                const valid = value.length >= Number(length);\n\n                return {\n                    res: value,\n                    errors: valid\n                        ? null\n                        : [validationErrors.string.MIN_LENGTH_VALIDATION_FAILED(length, value)],\n                };\n            },\n            maxLength: (value: string, length: string) => {\n                const valid = value.length <= Number(length);\n\n                return {\n                    res: value,\n                    errors: valid\n                        ? null\n                        : [validationErrors.string.MAX_LENGTH_VALIDATION_FAILED(length, value)],\n                };\n            },\n        },\n    },\n    number: {\n        validate(\n            value: any,\n            validators: StateArguments,\n            resolveParam: (s: string) => string,\n            validateDefinition,\n            validateValue\n        ) {\n            const res = value;\n            const errors: string[] = [];\n\n            if (isNaN(value)) {\n                if (validateValue) {\n                    errors.push(validationErrors.number.NUMBER_TYPE_VALIDATION_FAILED(value));\n                }\n            } else if (validators.length > 0) {\n                validators.forEach((validatorMeta) => {\n                    if (typeof validatorMeta === 'object') {\n                        if (this.subValidators && this.subValidators[validatorMeta.name]) {\n                            const subValidator = this.subValidators[validatorMeta.name];\n\n                            const validationRes = subValidator(\n                                value,\n                                resolveParam(validatorMeta.args[0])\n                            );\n\n                            if (validateValue && validationRes.errors) {\n                                errors.push(...validationRes.errors);\n                            }\n                        } else if (validateDefinition) {\n                            errors.push(\n                                validationErrors.number.UKNOWN_VALIDATOR(validatorMeta.name)\n                            );\n                        }\n                    }\n                });\n            }\n\n            return { res, errors: errors.length ? errors : null };\n        },\n        subValidators: {\n            min: (value: string, minValue: string) => {\n                const valid = Number(value) >= Number(minValue);\n\n                return {\n                    res: value,\n                    errors: valid\n                        ? null\n                        : [validationErrors.number.MIN_VALIDATION_FAILED(value, minValue)],\n                };\n            },\n            max: (value: string, maxValue: string) => {\n                const valid = Number(value) <= Number(maxValue);\n\n                return {\n                    res: value,\n                    errors: valid\n                        ? null\n                        : [validationErrors.number.MAX_VALIDATION_FAILED(value, maxValue)],\n                };\n            },\n            multipleOf: (value: string, multipleOf: string) => {\n                const valid = Number(value) % Number(multipleOf) === 0;\n\n                return {\n                    res: value,\n                    errors: valid\n                        ? null\n                        : [\n                              validationErrors.number.MULTIPLE_OF_VALIDATION_FAILED(\n                                  value,\n                                  multipleOf\n                              ),\n                          ],\n                };\n            },\n        },\n    },\n    enum: {\n        validate(\n            value: any,\n            options: StateArguments,\n            resolveParam: (s: string) => string,\n            validateDefinition,\n            validateValue\n        ) {\n            const res = value;\n            const errors: string[] = [];\n\n            const stringOptions: string[] = [];\n\n            if (options.length) {\n                const isOneOf = options.some((option) => {\n                    if (typeof option === 'string') {\n                        stringOptions.push(option);\n                        return resolveParam(option) === value;\n                    }\n                    return true;\n                });\n                if (validateValue && !isOneOf) {\n                    errors.push(\n                        validationErrors.enum.ENUM_TYPE_VALIDATION_FAILED(value, stringOptions)\n                    );\n                }\n            } else if (validateDefinition) {\n                errors.push(validationErrors.enum.NO_OPTIONS_DEFINED());\n            }\n\n            return { res, errors: errors.length ? errors : null };\n        },\n    },\n};\n\nexport function validateRuleStateDefinition(\n    selector: string,\n    selectorNode: postcss.Rule | postcss.AtRule,\n    meta: StylableMeta,\n    resolver: StylableResolver,\n    diagnostics: Diagnostics\n) {\n    const selectorAst = parseSelectorWithCache(selector);\n    if (selectorAst.length && selectorAst.length === 1) {\n        const singleSelectorAst = selectorAst[0];\n        const selectorChunk = singleSelectorAst.nodes;\n        if (selectorChunk.length === 1 && selectorChunk[0].type === 'class') {\n            const className = selectorChunk[0].value;\n            const classMeta = CSSClass.get(meta, className);\n            const states = classMeta?.[`-st-states`];\n\n            if (states && classMeta._kind === 'class') {\n                for (const stateName in states) {\n                    // TODO: Sort out types\n                    const state = states[stateName];\n                    if (state && typeof state === 'object') {\n                        const stateParam = isTemplateState(state) ? state.params[0] : state;\n                        const { errors } = validateStateArgument(\n                            stateParam,\n                            meta,\n                            stateParam.defaultValue || '',\n                            resolver,\n                            diagnostics,\n                            selectorNode,\n                            true,\n                            !!stateParam.defaultValue\n                        );\n                        if (errors) {\n                            for (const node of selectorNode.nodes) {\n                                if (node.type === 'decl' && node.prop === `-st-states`) {\n                                    diagnostics.report(\n                                        stateDiagnostics.DEFAULT_PARAM_FAILS_VALIDATION(\n                                            stateName,\n                                            stateParam.defaultValue || '',\n                                            errors\n                                        ),\n                                        {\n                                            node: node,\n                                            word: node.value,\n                                        }\n                                    );\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                }\n            } else {\n                // TODO: error state on non-class\n            }\n        }\n    }\n}\n\nexport function validateStateArgument(\n    stateAst: StateParsedValue,\n    meta: StylableMeta,\n    value: string,\n    resolver: StylableResolver,\n    diagnostics: Diagnostics,\n    selectorNode?: postcss.Node,\n    validateDefinition?: boolean,\n    validateValue = true\n) {\n    const resolvedValidations: StateResult = {\n        res: resolveParam(\n            meta,\n            resolver,\n            diagnostics,\n            selectorNode,\n            value || stateAst.defaultValue\n        ),\n        errors: null,\n    };\n\n    const { type: paramType } = stateAst;\n    const validator = systemValidators[paramType];\n\n    try {\n        if (resolvedValidations.res || validateDefinition) {\n            const { errors } = validator.validate(\n                resolvedValidations.res,\n                stateAst.arguments,\n                resolveParam.bind(null, meta, resolver, diagnostics, selectorNode),\n                !!validateDefinition,\n                validateValue\n            );\n            resolvedValidations.errors = errors;\n        }\n    } catch (error) {\n        // TODO: warn about validation throwing exception\n    }\n\n    return resolvedValidations;\n}\n\n// transform\n\nexport function transformPseudoClassToCustomState(\n    stateDef: MappedStates[string],\n    meta: StylableMeta,\n    name: string,\n    stateNode: PseudoClass,\n    namespace: string,\n    resolver: StylableResolver,\n    diagnostics: Diagnostics,\n    selectorNode?: postcss.Node\n) {\n    if (stateDef === null || typeof stateDef === 'string') {\n        if (stateNode.nodes && selectorNode) {\n            diagnostics.report(\n                stateDiagnostics.NO_PARAM_REQUIRED(name, stringifySelector(stateNode.nodes)),\n                {\n                    node: selectorNode,\n                    word: stringifySelector(stateNode),\n                }\n            );\n        }\n        if (stateDef === null) {\n            // boolean\n            convertToClass(stateNode).value = createBooleanStateClassName(name, namespace);\n        } else {\n            // static template selector\n            // simply concat global mapped selector - ToDo: maybe change to 'selector'\n            convertToInvalid(stateNode).value = stateDef;\n        }\n        delete stateNode.nodes;\n    } else if (typeof stateDef === 'object') {\n        if (isTemplateState(stateDef)) {\n            convertTemplateState(\n                meta,\n                resolver,\n                diagnostics,\n                selectorNode,\n                stateNode,\n                stateDef,\n                name\n            );\n        } else {\n            resolveStateValue(\n                meta,\n                resolver,\n                diagnostics,\n                selectorNode,\n                stateNode,\n                stateDef,\n                name,\n                namespace\n            );\n        }\n    }\n}\nexport function isTemplateState(state: MappedStates[string]): state is TemplateStateParsedValue {\n    return !!state && typeof state === 'object' && state.type === 'template';\n}\n\nexport function createBooleanStateClassName(stateName: string, namespace: string) {\n    const escapedNamespace = cssesc(namespace, { isIdentifier: true });\n    return `${escapedNamespace}${booleanStateDelimiter}${stateName}`;\n}\n\nexport function createStateWithParamClassName(stateName: string, namespace: string, param: string) {\n    const escapedNamespace = cssesc(namespace, { isIdentifier: true });\n    return `${escapedNamespace}${stateWithParamDelimiter}${stateName}${resolveStateParam(\n        param,\n        true\n    )}`;\n}\n\nexport function resolveStateParam(param: string, escape = false) {\n    const result = `${stateMiddleDelimiter}${param.length}${stateMiddleDelimiter}${param.replace(\n        /\\s/gm,\n        '_'\n    )}`;\n    // adding/removing initial `s` to indicate that it's not the first param of the identifier\n    return escape ? cssesc(`s` + result, { isIdentifier: true }).slice(1) : result;\n}\nfunction convertTemplateState(\n    meta: StylableMeta,\n    resolver: StylableResolver,\n    diagnostics: Diagnostics,\n    selectorNode: postcss.Node | undefined,\n    stateNode: PseudoClass,\n    stateParamDef: TemplateStateParsedValue,\n    name: string\n) {\n    const paramStateDef = stateParamDef.params[0];\n    const resolvedParam = getParamInput(\n        meta,\n        resolver,\n        diagnostics,\n        selectorNode,\n        stateNode,\n        paramStateDef,\n        name\n    );\n\n    validateParam(meta, resolver, diagnostics, selectorNode, paramStateDef, resolvedParam, name);\n\n    const strippedParam = stripQuotation(resolvedParam);\n    transformMappedStateWithParam({\n        stateName: name,\n        template: stateParamDef.template,\n        param: strippedParam,\n        node: stateNode,\n        selectorNode: selectorNode,\n        diagnostics,\n    });\n}\nfunction getParamInput(\n    meta: StylableMeta,\n    resolver: StylableResolver,\n    diagnostics: Diagnostics,\n    selectorNode: postcss.Node | undefined,\n    stateNode: PseudoClass,\n    stateParamDef: StateParsedValue,\n    name: string\n) {\n    const inputValue =\n        stateNode.nodes && stateNode.nodes.length ? stringifySelector(stateNode.nodes) : ``;\n    const resolvedParam = resolveParam(\n        meta,\n        resolver,\n        diagnostics,\n        selectorNode,\n        inputValue ? inputValue : stateParamDef.defaultValue\n    );\n\n    if (selectorNode && !inputValue && !stateParamDef.defaultValue) {\n        diagnostics.report(stateDiagnostics.NO_STATE_ARGUMENT_GIVEN(name, stateParamDef.type), {\n            node: selectorNode,\n            word: name,\n        });\n    }\n    return resolvedParam;\n}\nfunction validateParam(\n    meta: StylableMeta,\n    resolver: StylableResolver,\n    diagnostics: Diagnostics,\n    selectorNode: postcss.Node | undefined,\n    stateParamDef: StateParsedValue,\n    resolvedParam: string,\n    name: string\n) {\n    const validator = systemValidators[stateParamDef.type];\n\n    let stateParamOutput: StateResult | undefined;\n    try {\n        stateParamOutput = validator.validate(\n            resolvedParam,\n            stateParamDef.arguments,\n            resolveParam.bind(null, meta, resolver, diagnostics, selectorNode),\n            false,\n            true\n        );\n    } catch (e) {\n        // TODO: warn about validation throwing exception\n    }\n\n    if (stateParamOutput !== undefined) {\n        if (stateParamOutput.res !== resolvedParam) {\n            resolvedParam = stateParamOutput.res;\n        }\n\n        if (selectorNode && stateParamOutput.errors) {\n            diagnostics.report(\n                stateDiagnostics.FAILED_STATE_VALIDATION(\n                    name,\n                    resolvedParam,\n                    stateParamOutput.errors\n                ),\n                {\n                    node: selectorNode,\n                    word: resolvedParam,\n                }\n            );\n        }\n    }\n}\nfunction resolveStateValue(\n    meta: StylableMeta,\n    resolver: StylableResolver,\n    diagnostics: Diagnostics,\n    selectorNode: postcss.Node | undefined,\n    stateNode: PseudoClass,\n    stateParamDef: StateParsedValue,\n    name: string,\n    namespace: string\n) {\n    const resolvedParam = getParamInput(\n        meta,\n        resolver,\n        diagnostics,\n        selectorNode,\n        stateNode,\n        stateParamDef,\n        name\n    );\n\n    validateParam(meta, resolver, diagnostics, selectorNode, stateParamDef, resolvedParam, name);\n\n    const strippedParam = stripQuotation(resolvedParam);\n    convertToClass(stateNode).value = createStateWithParamClassName(name, namespace, strippedParam);\n    delete stateNode.nodes;\n}\n\nfunction transformMappedStateWithParam({\n    stateName,\n    template,\n    param,\n    node,\n    selectorNode,\n    diagnostics,\n}: {\n    stateName: string;\n    template: string;\n    param: string;\n    node: PseudoClass;\n    selectorNode?: postcss.Node;\n    diagnostics: Diagnostics;\n}) {\n    const targetSelectorStr = template.replace(/\\$0/g, param);\n    const selectorAst = parseSelectorWithCache(targetSelectorStr, { clone: true });\n    if (selectorAst.length > 1) {\n        if (selectorNode) {\n            diagnostics.report(\n                stateDiagnostics.UNSUPPORTED_MULTI_SELECTOR(stateName, targetSelectorStr),\n                {\n                    node: selectorNode,\n                }\n            );\n        }\n        return;\n    } else {\n        const firstSelector = selectorAst[0].nodes.find(({ type }) => type !== 'comment');\n        if (firstSelector?.type === 'type' || firstSelector?.type === 'universal') {\n            if (selectorNode) {\n                diagnostics.report(\n                    stateDiagnostics.UNSUPPORTED_INITIAL_SELECTOR(stateName, targetSelectorStr),\n                    {\n                        node: selectorNode,\n                    }\n                );\n            }\n            return;\n        }\n        let unexpectedSelector: undefined | SelectorNode = undefined;\n        for (const node of selectorAst[0].nodes) {\n            if (node.type === 'combinator' || node.type === 'invalid') {\n                unexpectedSelector = node;\n                break;\n            }\n        }\n        if (unexpectedSelector) {\n            if (selectorNode) {\n                switch (unexpectedSelector.type) {\n                    case 'combinator':\n                        diagnostics.report(\n                            stateDiagnostics.UNSUPPORTED_COMPLEX_SELECTOR(\n                                stateName,\n                                targetSelectorStr\n                            ),\n                            {\n                                node: selectorNode,\n                            }\n                        );\n                        break;\n                    case 'invalid':\n                        diagnostics.report(\n                            stateDiagnostics.INVALID_SELECTOR(stateName, targetSelectorStr),\n                            {\n                                node: selectorNode,\n                            }\n                        );\n                        break;\n                }\n            }\n            return;\n        }\n    }\n    convertToSelector(node).nodes = selectorAst[0].nodes;\n}\n\nfunction resolveParam(\n    meta: StylableMeta,\n    resolver: StylableResolver,\n    diagnostics: Diagnostics,\n    node?: postcss.Node,\n    nodeContent?: string\n) {\n    const defaultStringValue = '';\n    const param = nodeContent || defaultStringValue;\n    return evalDeclarationValue(resolver, param, meta, node, undefined, undefined, diagnostics);\n}\n", "import type { BaseAstNode, Call, CustomIdent, Literal } from '@tokey/css-value-parser';\n\nexport interface FindAstOptions {\n    stopOnFail: boolean;\n    ignoreWhitespace: boolean;\n    ignoreComments: boolean;\n    stopOnMatch?: (node: BaseAstNode, index: number, nodes: BaseAstNode[]) => boolean;\n    name?: string;\n}\n\ntype FindAstResult<T extends BaseAstNode> = [\n    takenNodeAmount: number,\n    matchedNode: T | undefined,\n    inspectedAmount: number\n];\n\nexport function findAnything(\n    value: BaseAstNode[],\n    startIndex: number,\n    options?: Partial<FindAstOptions>\n) {\n    return findValueAstNode(value, startIndex, () => true, options);\n}\n\nexport function findFatArrow(\n    value: BaseAstNode[],\n    startIndex: number,\n    options?: Partial<FindAstOptions>\n): FindAstResult<Literal & { value: '>' }> {\n    const [amountToEql, _eqlNode, eqlNodeInspectAmount] = findLiteral(value, startIndex, {\n        ...options,\n        name: '=',\n    });\n    if (amountToEql) {\n        const nextNode = value[startIndex + amountToEql];\n        if (isExactLiteral(nextNode, '>')) {\n            return [amountToEql + 1, nextNode, amountToEql + 1];\n        }\n    }\n    return [0, undefined, eqlNodeInspectAmount];\n}\nexport function isExactLiteral<T extends string>(\n    token: BaseAstNode,\n    name: T\n): token is Literal & { value: '>' } {\n    return token && token.type === 'literal' && token.value === name;\n}\nexport function findNextClassNode(\n    value: BaseAstNode[],\n    startIndex: number,\n    options?: Partial<FindAstOptions>\n): FindAstResult<CustomIdent> {\n    const name = options?.name || '';\n    let index = startIndex;\n    while (index < value.length) {\n        const [amountToDot, _dotNode] = findLiteral(value, index, { ...options, name: '.' });\n        if (amountToDot) {\n            index += amountToDot;\n            const [amountToName, nameNode] = findCustomIdent(value, index, {\n                name,\n                stopOnFail: true,\n            });\n            if (amountToName) {\n                return [amountToDot + amountToName, nameNode, index - startIndex + 1];\n            }\n        }\n        if (options?.stopOnFail) {\n            break;\n        }\n        index++;\n    }\n    return [0, undefined, value.length - startIndex];\n}\nexport function findNextPseudoClassNode(\n    value: BaseAstNode[],\n    startIndex: number,\n    options?: Partial<FindAstOptions>\n): FindAstResult<CustomIdent | Call> {\n    const name = options?.name || '';\n    let index = startIndex;\n    while (index < value.length) {\n        const [amountToColon] = findLiteral(value, index, { ...options, name: ':' });\n        if (amountToColon) {\n            index += amountToColon;\n            const nameOptions: FindAstOptions = {\n                name,\n                stopOnFail: true,\n                ignoreComments: true,\n                ignoreWhitespace: false,\n            };\n            const [amountToName, nameNode] = findCustomIdent(value, index, nameOptions);\n\n            if (amountToName) {\n                return [amountToColon + amountToName, nameNode, index - startIndex + 1];\n            } else {\n                const [amountToCall, callNode] = findNextCallNode(value, index, nameOptions);\n                if (amountToCall) {\n                    return [amountToColon + amountToCall, callNode, index - startIndex + 1];\n                } else {\n                    break;\n                }\n            }\n        } else if (options?.stopOnFail) {\n            break;\n        } else {\n            index++;\n        }\n    }\n    return [0, undefined, value.length - startIndex];\n}\n\nexport function findPseudoElementNode(\n    value: BaseAstNode[],\n    startIndex: number,\n    options?: Partial<FindAstOptions>\n): FindAstResult<CustomIdent | Call> {\n    let index = startIndex;\n    while (index < value.length) {\n        // first colon\n        const [amountToColon] = findLiteral(value, index, { ...options, name: ':' }); // second colon\n        if (amountToColon) {\n            index += amountToColon; // name\n            const [amountToSecondColon] = findLiteral(value, index, {\n                ...options,\n                name: ':',\n                stopOnFail: true,\n                ignoreWhitespace: false,\n            });\n            if (amountToSecondColon) {\n                index += amountToSecondColon;\n                const [amountToName, nameNode] = findCustomIdent(value, index, {\n                    ...options,\n                    stopOnFail: true,\n                });\n                if (nameNode) {\n                    return [\n                        index - startIndex + amountToName,\n                        nameNode,\n                        index - startIndex + amountToName,\n                    ];\n                }\n            }\n        }\n        if (options?.stopOnFail) {\n            break;\n        }\n        index++;\n    }\n    return [0, undefined, index - startIndex];\n}\n\nexport function findLiteral(\n    value: BaseAstNode[],\n    startIndex: number,\n    options?: Partial<FindAstOptions>\n): FindAstResult<Literal> {\n    const name = options?.name || '';\n    return findValueAstNode<Literal>(\n        value,\n        startIndex,\n        (node) => node.type === 'literal' && (!name || node.value === name),\n        options\n    );\n}\nexport function findCustomIdent(\n    value: BaseAstNode[],\n    startIndex: number,\n    options?: Partial<FindAstOptions>\n): FindAstResult<CustomIdent> {\n    const name = options?.name || '';\n    return findValueAstNode<CustomIdent>(\n        value,\n        startIndex,\n        (node) => node.type === '<custom-ident>' && (!name || node.value === name),\n        options\n    );\n}\nexport function findNextCallNode(\n    value: BaseAstNode[],\n    startIndex: number,\n    options?: Partial<FindAstOptions>\n): FindAstResult<Call> {\n    const name = options?.name || '';\n    return findValueAstNode(\n        value,\n        startIndex,\n        (node) => node.type === 'call' && (!name || node.value === name),\n        options\n    );\n}\n\nexport function findValueAstNode<T extends BaseAstNode>(\n    valueAst: BaseAstNode[],\n    startIndex: number,\n    check: (node: BaseAstNode) => boolean,\n    {\n        stopOnFail = true,\n        ignoreWhitespace = true,\n        ignoreComments = true,\n        stopOnMatch,\n    }: Partial<FindAstOptions> = {}\n): FindAstResult<T> {\n    let index = startIndex;\n    while (index < valueAst.length) {\n        const node = valueAst[index];\n        if (ignoreComments && node.type === 'comment') {\n            // continue;\n        } else if (ignoreWhitespace && node.type === 'space') {\n            // continue;\n        } else if (check(node)) {\n            return [index - startIndex + 1, node as T, index - startIndex + 1];\n        } else if (stopOnFail || stopOnMatch?.(node, index, valueAst)) {\n            break;\n        }\n        index++;\n    }\n    return [0, undefined, index - startIndex];\n}\n", "import { createFeature, FeatureTransformContext } from './feature';\nimport * as STSymbol from './st-symbol';\nimport type { ImportSymbol } from './st-import';\nimport * as STCustomSelector from './st-custom-selector';\nimport * as STVar from './st-var';\nimport type { ElementSymbol } from './css-type';\nimport type { ClassSymbol } from './css-class';\nimport { createSubsetAst, isStMixinMarker } from '../helpers/rule';\nimport { scopeNestedSelector } from '../helpers/selector';\nimport { mixinHelperDiagnostics, parseStMixin, parseStPartialMixin } from '../helpers/mixin';\nimport { resolveArgumentsValue } from '../functions';\nimport { cssObjectToAst } from '../parser';\nimport * as postcss from 'postcss';\nimport postcssValueParser, { FunctionNode, WordNode } from 'postcss-value-parser';\nimport { fixRelativeUrls } from '../stylable-assets';\nimport { isValidDeclaration, mergeRules, utilDiagnostics } from '../stylable-utils';\nimport type { StylableMeta } from '../stylable-meta';\nimport type { CSSResolve, MetaResolvedSymbols } from '../stylable-resolver';\nimport type { StylableTransformer } from '../stylable-transformer';\nimport { dirname } from 'path';\nimport { createDiagnosticReporter, Diagnostics } from '../diagnostics';\nimport type { Stylable } from '../stylable';\nimport { parseCssSelector } from '@tokey/css-selector-parser';\n\nexport interface MixinValue {\n    type: string;\n    options: Array<{ value: string }> | Record<string, string>;\n    partial?: boolean;\n    valueNode?: FunctionNode | WordNode;\n    originDecl: postcss.Declaration;\n}\n\nexport type ValidMixinSymbols = ImportSymbol | ClassSymbol | ElementSymbol;\n\nexport type AnalyzedMixin =\n    | {\n          valid: true;\n          data: MixinValue;\n          symbol: ValidMixinSymbols;\n      }\n    | {\n          valid: false;\n          data: MixinValue;\n          symbol: Exclude<STSymbol.StylableSymbol, ValidMixinSymbols> | undefined;\n      };\n\nexport type MixinReflection =\n    | {\n          name: string;\n          kind: 'css-fragment';\n          args: Record<string, string>[];\n          optionalArgs: Map<string, { name: string }>;\n      }\n    | { name: string; kind: 'js-func'; args: string[]; func: (...args: any[]) => any }\n    | { name: string; kind: 'invalid'; args: string };\n\nexport const MixinType = {\n    ALL: `-st-mixin` as const,\n    PARTIAL: `-st-partial-mixin` as const,\n};\n\nexport const diagnostics = {\n    VALUE_CANNOT_BE_STRING: mixinHelperDiagnostics.VALUE_CANNOT_BE_STRING,\n    INVALID_NAMED_PARAMS: mixinHelperDiagnostics.INVALID_NAMED_PARAMS,\n    INVALID_MERGE_OF: utilDiagnostics.INVALID_MERGE_OF,\n    INVALID_RECURSIVE_MIXIN: utilDiagnostics.INVALID_RECURSIVE_MIXIN,\n    PARTIAL_MIXIN_MISSING_ARGUMENTS: createDiagnosticReporter(\n        '10001',\n        'error',\n        (type: string) =>\n            `\"${MixinType.PARTIAL}\" can only be used with override arguments provided, missing overrides on \"${type}\"`\n    ),\n    UNKNOWN_MIXIN: createDiagnosticReporter(\n        '10002',\n        'error',\n        (name: string) => `unknown mixin: \"${name}\"`\n    ),\n    OVERRIDE_MIXIN: createDiagnosticReporter(\n        '10003',\n        'warning',\n        (mixinType: string) => `override ${mixinType} on same rule`\n    ),\n    FAILED_TO_APPLY_MIXIN: createDiagnosticReporter(\n        '10004',\n        'error',\n        (error: string) => `could not apply mixin: ${error}`\n    ),\n    JS_MIXIN_NOT_A_FUNC: createDiagnosticReporter(\n        '10005',\n        'error',\n        () => `js mixin must be a function`\n    ),\n    UNSUPPORTED_MIXIN_SYMBOL: createDiagnosticReporter(\n        '10007',\n        'error',\n        (name: string, symbolType: STSymbol.StylableSymbol['_kind']) =>\n            `cannot mix unsupported symbol \"${name}\" of type \"${STSymbol.readableTypeMap[symbolType]}\"`\n    ),\n    CIRCULAR_MIXIN: createDiagnosticReporter(\n        '10006',\n        'error',\n        (circularPaths: string[]) => `circular mixin found: ${circularPaths.join(' --> ')}`\n    ),\n    UNKNOWN_ARG: createDiagnosticReporter(\n        '10009',\n        'warning',\n        (argName) => `unknown mixin argument \"${argName}\"`\n    ),\n};\n\n// HOOKS\n\nexport const hooks = createFeature({\n    transformSelectorNode({ selectorContext, node }) {\n        const isMarker = isStMixinMarker(node);\n        if (isMarker) {\n            selectorContext.setNextSelectorScope(\n                selectorContext.inferredSelectorMixin,\n                node,\n                node.value\n            );\n        }\n        return isMarker;\n    },\n    transformLastPass({ context, ast, transformer, cssVarsMapping, path }) {\n        ast.walkRules((rule) => appendMixins(context, transformer, rule, cssVarsMapping, path));\n    },\n});\n\n// API\nexport class StylablePublicApi {\n    constructor(private stylable: Stylable) {}\n    public resolveExpr(\n        meta: StylableMeta,\n        expr: string,\n        {\n            diagnostics = new Diagnostics(),\n            resolveOptionalArgs = false,\n        }: { diagnostics?: Diagnostics; resolveOptionalArgs?: boolean } = {}\n    ) {\n        const resolvedSymbols = this.stylable.resolver.resolveSymbols(meta, diagnostics);\n        const { mainNamespace } = resolvedSymbols;\n        const analyzedMixins = collectDeclMixins(\n            { meta, diagnostics },\n            resolvedSymbols,\n            postcss.decl({ prop: '-st-mixin', value: expr }),\n            (mixinSymbolName) => (mainNamespace[mixinSymbolName] === 'js' ? 'args' : 'named')\n        );\n        const result: MixinReflection[] = [];\n        for (const { data } of analyzedMixins) {\n            const name = data.type;\n            const symbolKind = mainNamespace[name];\n            if (symbolKind === 'class' || symbolKind === 'element') {\n                const mixRef: MixinReflection = {\n                    name,\n                    kind: 'css-fragment',\n                    args: [],\n                    optionalArgs: new Map(),\n                };\n                for (const [argName, argValue] of Object.entries(data.options)) {\n                    mixRef.args.push({ [argName]: argValue });\n                }\n                if (resolveOptionalArgs) {\n                    const varMap = new Map<string, { name: string }>();\n                    const resolveChain = resolvedSymbols[symbolKind][name];\n                    getCSSMixinRoots(meta, resolveChain, ({ mixinRoot }) => {\n                        const names = new Set<string>();\n                        collectOptionalArgs(\n                            { meta, resolver: this.stylable.resolver },\n                            mixinRoot,\n                            names\n                        );\n                        names.forEach((name) => varMap.set(name, { name }));\n                    });\n                    mixRef.optionalArgs = varMap;\n                }\n                result.push(mixRef);\n            } else if (\n                symbolKind === 'js' &&\n                typeof resolvedSymbols.js[name].symbol === 'function'\n            ) {\n                const mixRef: MixinReflection = {\n                    name,\n                    kind: 'js-func',\n                    args: [],\n                    func: resolvedSymbols.js[name].symbol,\n                };\n                for (const arg of Object.values(data.options)) {\n                    mixRef.args.push(arg.value);\n                }\n                result.push(mixRef);\n            } else {\n                result.push({\n                    name,\n                    kind: 'invalid',\n                    args:\n                        data.valueNode?.type === 'function'\n                            ? postcssValueParser.stringify(data.valueNode.nodes)\n                            : '',\n                });\n            }\n        }\n        return result;\n    }\n    public scopeNestedSelector(scopeSelector: string, nestSelector: string): string {\n        return scopeNestedSelector(parseCssSelector(scopeSelector), parseCssSelector(nestSelector))\n            .selector;\n    }\n}\n\nfunction appendMixins(\n    context: FeatureTransformContext,\n    transformer: StylableTransformer,\n    rule: postcss.Rule,\n    cssPropertyMapping: Record<string, string>,\n    path: string[] = []\n) {\n    const [decls, mixins] = collectRuleMixins(context, rule);\n    if (!mixins || mixins.length === 0) {\n        return;\n    }\n    for (const mixin of mixins) {\n        if (mixin.valid) {\n            appendMixin(context, { transformer, mixDef: mixin, rule, path, cssPropertyMapping });\n        }\n    }\n    for (const mixinDecl of decls) {\n        mixinDecl.remove();\n    }\n}\n\nfunction collectRuleMixins(\n    context: FeatureTransformContext,\n    rule: postcss.Rule\n): [decls: postcss.Declaration[], mixins: AnalyzedMixin[]] {\n    let mixins: AnalyzedMixin[] = [];\n    const resolvedSymbols = context.getResolvedSymbols(context.meta);\n    const { mainNamespace } = resolvedSymbols;\n    const decls: postcss.Declaration[] = [];\n    for (const node of rule.nodes) {\n        if (\n            node.type === 'decl' &&\n            (node.prop === `-st-mixin` || node.prop === `-st-partial-mixin`)\n        ) {\n            decls.push(node);\n            mixins = collectDeclMixins(\n                context,\n                resolvedSymbols,\n                node,\n                (mixinSymbolName) => {\n                    return mainNamespace[mixinSymbolName] === 'js' ? 'args' : 'named';\n                },\n                mixins\n            );\n        }\n    }\n    return [decls, mixins];\n}\n\nfunction collectDeclMixins(\n    context: Pick<FeatureTransformContext, 'meta' | 'diagnostics'>,\n    resolvedSymbols: MetaResolvedSymbols,\n    decl: postcss.Declaration,\n    paramSignature: (mixinSymbolName: string) => 'named' | 'args',\n    previousMixins?: AnalyzedMixin[]\n): AnalyzedMixin[] {\n    const { meta } = context;\n    let mixins: AnalyzedMixin[] = [];\n    const parser =\n        decl.prop === MixinType.ALL\n            ? parseStMixin\n            : decl.prop === MixinType.PARTIAL\n            ? parseStPartialMixin\n            : null;\n    if (!parser) {\n        return previousMixins || mixins;\n    }\n\n    parser(decl, paramSignature, context.diagnostics, /*emitStrategyDiagnostics*/ true).forEach(\n        (mixin) => {\n            const mixinRefSymbol = STSymbol.get(meta, mixin.type);\n            const symbolName = mixin.type;\n            const resolvedType = resolvedSymbols.mainNamespace[symbolName];\n            if (\n                resolvedType &&\n                ((resolvedType === 'js' &&\n                    typeof resolvedSymbols.js[symbolName].symbol === 'function') ||\n                    resolvedType === 'class' ||\n                    resolvedType === 'element')\n            ) {\n                mixins.push({\n                    valid: true,\n                    data: mixin,\n                    symbol: mixinRefSymbol as ValidMixinSymbols,\n                });\n                if (mixin.partial && Object.keys(mixin.options).length === 0) {\n                    context.diagnostics.report(\n                        diagnostics.PARTIAL_MIXIN_MISSING_ARGUMENTS(mixin.type),\n                        {\n                            node: decl,\n                            word: mixin.type,\n                        }\n                    );\n                }\n            } else {\n                mixins.push({\n                    valid: false,\n                    data: mixin,\n                    symbol: mixinRefSymbol as\n                        | Exclude<STSymbol.StylableSymbol, ValidMixinSymbols>\n                        | undefined,\n                });\n                if (resolvedType === 'js') {\n                    context.diagnostics.report(diagnostics.JS_MIXIN_NOT_A_FUNC(), {\n                        node: decl,\n                        word: mixin.type,\n                    });\n                } else if (resolvedType) {\n                    context.diagnostics.report(\n                        diagnostics.UNSUPPORTED_MIXIN_SYMBOL(mixin.type, resolvedType),\n                        {\n                            node: decl,\n                            word: mixin.type,\n                        }\n                    );\n                } else {\n                    context.diagnostics.report(diagnostics.UNKNOWN_MIXIN(mixin.type), {\n                        node: decl,\n                        word: mixin.type,\n                    });\n                }\n            }\n        }\n    );\n\n    if (previousMixins) {\n        const partials = previousMixins.filter((r) => r.data.partial);\n        const nonPartials = previousMixins.filter((r) => !r.data.partial);\n        const isInPartial = decl.prop === MixinType.PARTIAL;\n        if (\n            (partials.length && decl.prop === MixinType.PARTIAL) ||\n            (nonPartials.length && decl.prop === MixinType.ALL)\n        ) {\n            context.diagnostics.report(diagnostics.OVERRIDE_MIXIN(decl.prop), { node: decl });\n        }\n        if (partials.length && nonPartials.length) {\n            mixins = isInPartial ? nonPartials.concat(mixins) : partials.concat(mixins);\n        } else if (partials.length) {\n            mixins = isInPartial ? mixins : partials.concat(mixins);\n        } else if (nonPartials.length) {\n            mixins = isInPartial ? nonPartials.concat(mixins) : mixins;\n        }\n    }\n    return mixins;\n}\n\ninterface ApplyMixinContext {\n    transformer: StylableTransformer;\n    mixDef: AnalyzedMixin & { valid: true };\n    rule: postcss.Rule;\n    path: string[];\n    cssPropertyMapping: Record<string, string>;\n}\n\nfunction appendMixin(context: FeatureTransformContext, config: ApplyMixinContext) {\n    if (checkRecursive(context, config)) {\n        return;\n    }\n    const resolvedSymbols = context.getResolvedSymbols(context.meta);\n    const symbolName = config.mixDef.data.type;\n    const resolvedType = resolvedSymbols.mainNamespace[symbolName];\n    if (resolvedType === `class` || resolvedType === `element`) {\n        const resolveChain = resolvedSymbols[resolvedType][symbolName];\n        handleCSSMixin(context, config, resolveChain);\n        return;\n    } else if (resolvedType === `js`) {\n        const resolvedMixin = resolvedSymbols.js[symbolName];\n        if (typeof resolvedMixin.symbol === 'function') {\n            try {\n                handleJSMixin(context, config, resolvedMixin.symbol);\n            } catch (e) {\n                context.diagnostics.report(diagnostics.FAILED_TO_APPLY_MIXIN(String(e)), {\n                    node: config.rule,\n                    word: config.mixDef.data.type,\n                });\n                return;\n            }\n        }\n        return;\n    }\n}\n\nfunction checkRecursive(\n    { meta, diagnostics: report }: FeatureTransformContext,\n    { mixDef, path, rule }: ApplyMixinContext\n) {\n    const symbolName =\n        mixDef.symbol.name === meta.root\n            ? mixDef.symbol._kind === 'class'\n                ? meta.root\n                : 'default'\n            : mixDef.data.type;\n    const isRecursive = path.includes(symbolName + ' from ' + meta.source);\n    if (isRecursive) {\n        // Todo: add test verifying word\n        report.report(diagnostics.CIRCULAR_MIXIN(path), {\n            node: rule,\n            word: symbolName,\n        });\n        return true;\n    }\n    return false;\n}\n\nfunction handleJSMixin(\n    context: FeatureTransformContext,\n    config: ApplyMixinContext,\n    mixinFunction: (...args: any[]) => any\n) {\n    const stVarOverride = context.evaluator.stVarOverride || {};\n    const meta = context.meta;\n    const mixDef = config.mixDef;\n    const res = mixinFunction((mixDef.data.options as any[]).map((v) => v.value));\n    const mixinRoot = cssObjectToAst(res);\n\n    mixinRoot.walkDecls((decl) => {\n        if (!isValidDeclaration(decl)) {\n            decl.value = String(decl);\n        }\n    });\n\n    config.transformer.transformAst(mixinRoot, meta, undefined, stVarOverride, [], true);\n    const mixinPath = (mixDef.symbol as ImportSymbol).import.request;\n    fixRelativeUrls(\n        mixinRoot,\n        context.resolver.resolvePath(dirname(meta.source), mixinPath),\n        meta.source\n    );\n\n    mergeRules(mixinRoot, config.rule, mixDef.data.originDecl, context.diagnostics, true);\n}\n\nfunction handleCSSMixin(\n    context: FeatureTransformContext,\n    config: ApplyMixinContext,\n    resolveChain: CSSResolve<ClassSymbol | ElementSymbol>[]\n) {\n    const mixDef = config.mixDef;\n    const isPartial = mixDef.data.partial;\n    const namedArgs = mixDef.data.options as Record<string, string>;\n    const overrideKeys = Object.keys(namedArgs);\n\n    if (isPartial && overrideKeys.length === 0) {\n        return;\n    }\n\n    const optionalArgs = new Set<string>();\n    const roots = getCSSMixinRoots(\n        context.meta,\n        resolveChain,\n        ({ mixinRoot, resolved, isRootMixin }) => {\n            const stVarOverride = context.evaluator.stVarOverride || {};\n            const mixDef = config.mixDef;\n            const namedArgs = mixDef.data.options as Record<string, string>;\n\n            if (mixDef.data.partial) {\n                filterPartialMixinDecl(context.meta, mixinRoot, Object.keys(namedArgs));\n            }\n\n            // resolve override args\n            const resolvedArgs = resolveArgumentsValue(\n                namedArgs,\n                config.transformer,\n                context.meta,\n                context.diagnostics,\n                mixDef.data.originDecl,\n                stVarOverride,\n                config.path,\n                config.cssPropertyMapping\n            );\n            collectOptionalArgs(\n                { meta: resolved.meta, resolver: context.resolver },\n                mixinRoot,\n                optionalArgs\n            );\n            // transform mixin\n            const mixinMeta: StylableMeta = resolved.meta;\n            const symbolName =\n                isRootMixin && resolved.meta !== context.meta ? 'default' : mixDef.data.type;\n            config.transformer.transformAst(\n                mixinRoot,\n                mixinMeta,\n                undefined,\n                resolvedArgs,\n                config.path.concat(symbolName + ' from ' + context.meta.source),\n                true,\n                config.transformer.createInferredSelector(mixinMeta, {\n                    name: resolved.symbol.name,\n                    type: resolved.symbol._kind,\n                })\n            );\n            fixRelativeUrls(mixinRoot, resolved.meta.source, context.meta.source);\n        }\n    );\n\n    for (const overrideArg of overrideKeys) {\n        if (!optionalArgs.has(overrideArg)) {\n            context.diagnostics.report(diagnostics.UNKNOWN_ARG(overrideArg), {\n                node: mixDef.data.originDecl,\n                word: overrideArg,\n            });\n        }\n    }\n\n    if (roots.length === 1) {\n        mergeRules(\n            roots[0],\n            config.rule,\n            mixDef.data.originDecl,\n            config.transformer.diagnostics,\n            false\n        );\n    } else if (roots.length > 1) {\n        const mixinRoot = postcss.root();\n        roots.forEach((root) => mixinRoot.prepend(...root.nodes));\n        mergeRules(\n            mixinRoot,\n            config.rule,\n            mixDef.data.originDecl,\n            config.transformer.diagnostics,\n            false\n        );\n    }\n}\n\nfunction collectOptionalArgs(\n    context: Pick<FeatureTransformContext, 'meta' | 'resolver'>,\n    mixinRoot: postcss.Root,\n    optionalArgs: Set<string> = new Set()\n) {\n    mixinRoot.walk((node) => {\n        const value = node.type === 'decl' ? node.value : node.type === 'atrule' ? node.params : '';\n        const varNames = STVar.parseVarsFromExpr(value);\n        for (const name of varNames) {\n            for (const refName of STVar.resolveReferencedVarNames(context, name)) {\n                optionalArgs.add(refName);\n            }\n        }\n    });\n}\n\nfunction getCSSMixinRoots(\n    contextMeta: StylableMeta,\n    resolveChain: CSSResolve<ClassSymbol | ElementSymbol>[],\n    processMixinRoot: (data: {\n        mixinRoot: postcss.Root;\n        resolved: CSSResolve<ClassSymbol | ElementSymbol>;\n        isRootMixin: boolean;\n    }) => void\n) {\n    const roots = [];\n    for (const resolved of resolveChain) {\n        const isRootMixin = resolved.symbol.name === resolved.meta.root;\n        const mixinRoot = createSubsetAst<postcss.Root>(\n            resolved.meta.sourceAst,\n            (resolved.symbol._kind === 'class' ? '.' : '') + resolved.symbol.name,\n            undefined,\n            isRootMixin,\n            (name) => STCustomSelector.getCustomSelector(contextMeta, name)\n        );\n        processMixinRoot({ mixinRoot, resolved, isRootMixin });\n        roots.push(mixinRoot);\n        if (resolved.symbol[`-st-extends`]) {\n            break;\n        }\n    }\n    return roots;\n}\n\n/** we assume that mixinRoot is freshly created nodes from the ast */\nfunction filterPartialMixinDecl(\n    meta: StylableMeta,\n    mixinRoot: postcss.Root,\n    overrideKeys: string[]\n) {\n    let regexp: RegExp;\n    const overrideSet = new Set(overrideKeys);\n    let size;\n    do {\n        size = overrideSet.size;\n        regexp = new RegExp(`value\\\\((\\\\s*${Array.from(overrideSet).join('\\\\s*)|(\\\\s*')}\\\\s*)\\\\)`);\n        for (const { text, name } of Object.values(meta.getAllStVars())) {\n            if (!overrideSet.has(name) && text.match(regexp)) {\n                overrideSet.add(name);\n            }\n        }\n    } while (overrideSet.size !== size);\n\n    mixinRoot.walkDecls((decl) => {\n        if (!decl.value.match(regexp)) {\n            const parent = decl.parent;\n            decl.remove();\n            if (parent?.nodes?.length === 0) {\n                parent.remove();\n            }\n        }\n    });\n}\n", "import { createDiagnosticReporter, DiagnosticBase, Diagnostics } from '../diagnostics';\nimport { strategies, valueDiagnostics } from './value';\nimport type { MixinValue } from '../features';\nimport type * as postcss from 'postcss';\nimport postcssValueParser from 'postcss-value-parser';\n\nexport const mixinHelperDiagnostics = {\n    INVALID_NAMED_PARAMS: valueDiagnostics.INVALID_NAMED_PARAMS,\n    VALUE_CANNOT_BE_STRING: createDiagnosticReporter(\n        '10008',\n        'error',\n        () => 'value can not be a string (remove quotes?)'\n    ),\n};\n\nexport function parseStMixin(\n    mixinNode: postcss.Declaration,\n    strategy: (type: string) => 'named' | 'args',\n    diagnostics?: Diagnostics,\n    emitStrategyDiagnostics = true\n) {\n    const ast = postcssValueParser(mixinNode.value);\n    const mixins: Array<MixinValue> = [];\n\n    function reportWarning(diagnostic: DiagnosticBase, options?: { word: string }) {\n        if (emitStrategyDiagnostics) {\n            diagnostics?.report(diagnostic, { ...options, node: mixinNode });\n        }\n    }\n\n    ast.nodes.forEach((node) => {\n        if (node.type === 'function') {\n            mixins.push({\n                type: node.value,\n                options: strategies[strategy(node.value)](node, reportWarning),\n                valueNode: node,\n                originDecl: mixinNode,\n            });\n        } else if (node.type === 'word') {\n            mixins.push({\n                type: node.value,\n                options: strategy(node.value) === 'named' ? {} : [],\n                valueNode: node,\n                originDecl: mixinNode,\n            });\n        } else if (node.type === 'string') {\n            diagnostics?.report(mixinHelperDiagnostics.VALUE_CANNOT_BE_STRING(), {\n                node: mixinNode,\n                word: mixinNode.value,\n            });\n        }\n    });\n\n    return mixins;\n}\nexport function parseStPartialMixin(\n    mixinNode: postcss.Declaration,\n    strategy: (type: string) => 'named' | 'args',\n    report?: Diagnostics,\n    emitStrategyDiagnostics?: boolean\n) {\n    return parseStMixin(mixinNode, strategy, report, emitStrategyDiagnostics).map((mixin) => {\n        mixin.partial = true;\n        return mixin;\n    });\n}\n", "import { createFeature, FeatureContext, FeatureTransformContext } from './feature';\nimport { generalDiagnostics } from './diagnostics';\nimport * as STSymbol from './st-symbol';\nimport type { StylableSymbol } from './st-symbol';\nimport type { ImportSymbol } from './st-import';\nimport type { ElementSymbol } from './css-type';\nimport type * as STStructure from './st-structure';\nimport * as STCustomState from './st-custom-state';\nimport { getOriginDefinition } from '../helpers/resolve';\nimport { namespace } from '../helpers/namespace';\nimport { namespaceEscape, unescapeCSS } from '../helpers/escape';\nimport { getNamedArgs } from '../helpers/value';\nimport {\n    convertToClass,\n    stringifySelector,\n    isSimpleSelector,\n    parseSelectorWithCache,\n    convertToPseudoClass,\n    convertToSelector,\n} from '../helpers/selector';\nimport { getAlias } from '../stylable-utils';\nimport type { StylableMeta } from '../stylable-meta';\nimport { validateRuleStateDefinition } from '../helpers/custom-state';\nimport type { Stylable } from '../stylable';\nimport {\n    ImmutableClass,\n    Class,\n    SelectorNode,\n    ImmutableSelectorNode,\n    stringifySelectorAst,\n    SelectorNodes,\n} from '@tokey/css-selector-parser';\nimport * as postcss from 'postcss';\nimport { basename } from 'path';\nimport { createDiagnosticReporter } from '../diagnostics';\nimport postcssValueParser from 'postcss-value-parser';\nimport { plugableRecord } from '../helpers/plugable-record';\n\nexport interface StPartDirectives extends STStructure.HasParts, Partial<STCustomState.HasStates> {\n    '-st-root'?: boolean;\n    '-st-extends'?: ImportSymbol | ClassSymbol | ElementSymbol;\n    '-st-global'?: SelectorNode[];\n}\n\nconst stPartDirectives = {\n    '-st-root': true,\n    '-st-states': true,\n    '-st-extends': true,\n    '-st-global': true,\n} as const;\n\nexport interface ClassSymbol extends StPartDirectives {\n    _kind: 'class';\n    name: string;\n    alias?: ImportSymbol;\n    scoped?: string; // ToDo: check if in use\n}\n\nexport const diagnostics = {\n    INVALID_FUNCTIONAL_SELECTOR: generalDiagnostics.INVALID_FUNCTIONAL_SELECTOR,\n    UNSCOPED_CLASS: createDiagnosticReporter(\n        '00002',\n        'warning',\n        (name: string) =>\n            `unscoped class \"${name}\" will affect all elements of the same type in the document`\n    ),\n    STATE_DEFINITION_IN_ELEMENT: createDiagnosticReporter(\n        '11002',\n        'error',\n        () => 'cannot define pseudo states inside a type selector'\n    ),\n    STATE_DEFINITION_IN_COMPLEX: createDiagnosticReporter(\n        '11003',\n        'error',\n        () => 'cannot define pseudo states inside complex selectors'\n    ),\n    OVERRIDE_TYPED_RULE: createDiagnosticReporter(\n        '11006',\n        'warning',\n        (key: string, name: string) => `override \"${key}\" on typed rule \"${name}\"`\n    ),\n    CANNOT_RESOLVE_EXTEND: createDiagnosticReporter(\n        '11004',\n        'error',\n        (name: string) => `cannot resolve '-st-extends' type for '${name}'`\n    ),\n    CANNOT_EXTEND_IN_COMPLEX: createDiagnosticReporter(\n        '11005',\n        'error',\n        () => `cannot define \"-st-extends\" inside a complex selector`\n    ),\n    EMPTY_ST_GLOBAL: createDiagnosticReporter(\n        '00003',\n        'error',\n        () => `-st-global must contain a valid selector`\n    ),\n    UNSUPPORTED_MULTI_SELECTORS_ST_GLOBAL: createDiagnosticReporter(\n        '00004',\n        'error',\n        () => `unsupported multi selector in -st-global`\n    ),\n    IMPORT_ISNT_EXTENDABLE: createDiagnosticReporter(\n        '00005',\n        'error',\n        () => 'import is not extendable'\n    ),\n    CANNOT_EXTEND_UNKNOWN_SYMBOL: createDiagnosticReporter(\n        '00006',\n        'error',\n        (name: string) => `cannot extend unknown symbol \"${name}\"`\n    ),\n    CANNOT_EXTEND_JS: createDiagnosticReporter(\n        '00007',\n        'error',\n        () => 'JS import is not extendable'\n    ),\n    UNKNOWN_IMPORT_ALIAS: createDiagnosticReporter(\n        '00008',\n        'error',\n        (name: string) => `cannot use alias for unknown import \"${name}\"`\n    ),\n    DISABLED_DIRECTIVE: createDiagnosticReporter(\n        '00009',\n        'error',\n        (className: string, directive: keyof typeof stPartDirectives) => {\n            const alternative =\n                directive === '-st-extends'\n                    ? ` use \"@st .${className} :is(.base)\" instead`\n                    : directive === '-st-global'\n                    ? `use \"@st .${className} => :global(<selector>)\" instead`\n                    : directive === '-st-states'\n                    ? `use \"@st .${className} { @st .state; }\" instead`\n                    : '';\n            return `cannot use ${directive} on .${className} since class is defined with \"@st\" - ${alternative}`;\n        }\n    ),\n};\n\nconst dataKey = plugableRecord.key<{\n    classesDefinedWithAtSt: Set<string>;\n}>('st-structure');\n\n// HOOKS\n\nexport const hooks = createFeature<{\n    SELECTOR: Class;\n    IMMUTABLE_SELECTOR: ImmutableClass;\n    RESOLVED: Record<string, string>;\n}>({\n    metaInit({ meta }) {\n        plugableRecord.set(meta.data, dataKey, {\n            classesDefinedWithAtSt: new Set<string>(),\n        });\n    },\n    analyzeSelectorNode({ context, node, rule }): void {\n        if (node.nodes) {\n            // error on functional class\n            context.diagnostics.report(\n                diagnostics.INVALID_FUNCTIONAL_SELECTOR(`.` + node.value, `class`),\n                {\n                    node: rule,\n                    word: stringifySelector(node),\n                }\n            );\n        }\n        addClass(context, node.value, rule);\n    },\n    analyzeDeclaration({ context, decl }) {\n        if (context.meta.type === 'stylable' && isDirectiveDeclaration(decl)) {\n            handleDirectives(context, decl);\n        }\n    },\n    transformResolve({ context }) {\n        const resolvedSymbols = context.getResolvedSymbols(context.meta);\n        const locals: Record<string, string> = {};\n        for (const [localName, resolved] of Object.entries(resolvedSymbols.class)) {\n            const exportedClasses = [];\n            let first = true;\n            // collect list of css classes for exports\n            for (const { meta, symbol } of resolved) {\n                if (!first && symbol[`-st-root`]) {\n                    // extended stylesheet root: stop collection as root is expected to\n                    // be placed by inner component, for example in <Button class={classes.primaryBtn} />\n                    // `primaryBtn` shouldn't contain `button__root` as it is placed by the Button component\n                    break;\n                }\n                first = false;\n                if (symbol[`-st-global`]) {\n                    // collect global override just in case of\n                    // compound set of CSS classes\n                    let isOnlyClasses = true;\n                    const globalClasses = symbol[`-st-global`].reduce<string[]>(\n                        (globalClasses, node) => {\n                            if (node.type === `class`) {\n                                globalClasses.push(node.value);\n                                context.meta.globals[node.value] = true;\n                            } else {\n                                isOnlyClasses = false;\n                            }\n                            return globalClasses;\n                        },\n                        []\n                    );\n                    if (isOnlyClasses) {\n                        exportedClasses.push(...globalClasses);\n                    }\n                    continue;\n                }\n                if (symbol.alias && !symbol[`-st-extends`]) {\n                    continue;\n                }\n                exportedClasses.push(namespace(symbol.name, meta.namespace));\n            }\n            const classNames = unescapeCSS(exportedClasses.join(' '));\n            if (classNames) {\n                locals[localName] = classNames;\n            }\n        }\n        return locals;\n    },\n    transformSelectorNode({ context, selectorContext, node }) {\n        const { originMeta, resolver } = selectorContext;\n        const resolvedSymbols = context.getResolvedSymbols(context.meta);\n        const resolved = resolvedSymbols.class[node.value] || [\n            // used to namespace classes from js mixins since js mixins\n            // are scoped in the context of the mixed-in stylesheet\n            // which might not have a definition for the mixed-in class\n            { _kind: 'css', meta: originMeta, symbol: createSymbol({ name: node.value }) },\n        ];\n        selectorContext.setNextSelectorScope(resolved, node, node.value);\n        const { symbol, meta } = getOriginDefinition(resolved);\n        if (selectorContext.originMeta === meta && symbol[`-st-states`]) {\n            // ToDo: refactor out to transformer validation phase\n            validateRuleStateDefinition(\n                selectorContext.selectorStr,\n                selectorContext.ruleOrAtRule,\n                context.meta,\n                resolver,\n                context.diagnostics\n            );\n        }\n        if (selectorContext.transform) {\n            namespaceClass(meta, symbol, node);\n        }\n    },\n    transformJSExports({ exports, resolved }) {\n        Object.assign(exports.classes, resolved);\n    },\n});\n\n// API\n\nexport class StylablePublicApi {\n    constructor(private stylable: Stylable) {}\n    public transformIntoSelector(meta: StylableMeta, name: string): string | undefined {\n        const localSymbol = STSymbol.get(meta, name);\n        const resolved =\n            localSymbol?._kind === 'import'\n                ? this.stylable.resolver.deepResolve(localSymbol)\n                : { _kind: 'css', meta, symbol: localSymbol };\n\n        if (resolved?._kind !== 'css' || resolved.symbol?._kind !== 'class') {\n            return undefined;\n        }\n\n        const node: Class = {\n            type: 'class',\n            value: '',\n            start: 0,\n            end: 0,\n            dotComments: [],\n        };\n        namespaceClass(resolved.meta, resolved.symbol, node, false);\n        return stringifySelectorAst(node);\n    }\n}\n\nexport function get(meta: StylableMeta, name: string): ClassSymbol | undefined {\n    return STSymbol.get(meta, name, `class`);\n}\n\nexport function getAll(meta: StylableMeta): Record<string, ClassSymbol> {\n    return STSymbol.getAllByType(meta, `class`);\n}\n\nexport function createSymbol(input: Partial<ClassSymbol> & { name: string }): ClassSymbol {\n    const parts = input['-st-parts'] || {};\n    return { ...input, _kind: 'class', '-st-parts': parts };\n}\n\nexport function addClass(context: FeatureContext, name: string, rule?: postcss.Node): ClassSymbol {\n    let symbol = STSymbol.get(context.meta, name, `class`);\n    if (!symbol) {\n        let alias = STSymbol.get(context.meta, name);\n        if (alias && alias._kind !== 'import') {\n            alias = undefined;\n        }\n        symbol = STSymbol.addSymbol({\n            context,\n            symbol: createSymbol({ name, alias }),\n            node: rule,\n            safeRedeclare: !!alias,\n        }) as ClassSymbol;\n    }\n    // mark native css as global\n    if (context.meta.type === 'css' && !symbol['-st-global']) {\n        symbol['-st-global'] = [\n            {\n                type: 'class',\n                value: name,\n                dotComments: [],\n                start: 0,\n                end: 0,\n            },\n        ];\n    }\n    return symbol;\n}\n\nexport function namespaceClass(\n    meta: StylableMeta,\n    symbol: StylableSymbol,\n    node: SelectorNode, // ToDo: check this is the correct type, should this be inline selector?\n    wrapInGlobal = true\n) {\n    if (`-st-global` in symbol && symbol[`-st-global`]) {\n        // change node to `-st-global` value\n        if (wrapInGlobal) {\n            const globalMappedNodes = symbol[`-st-global`]!;\n            convertToPseudoClass(node, 'global', [\n                {\n                    type: 'selector',\n                    nodes: globalMappedNodes,\n                    after: '',\n                    before: '',\n                    end: 0,\n                    start: 0,\n                },\n            ]);\n        } else {\n            const flatNode = convertToSelector(node);\n            const globalMappedNodes = symbol[`-st-global`]!;\n            flatNode.nodes = globalMappedNodes;\n        }\n    } else {\n        node = convertToClass(node);\n        node.value = namespaceEscape(symbol.name, meta.namespace);\n    }\n}\nfunction getNamespacedClass(meta: StylableMeta, symbol: StylableSymbol) {\n    if (`-st-global` in symbol && symbol[`-st-global`]) {\n        const selector = symbol[`-st-global`];\n        return stringifySelectorAst(selector as any);\n    } else {\n        return '.' + namespaceEscape(symbol.name, meta.namespace);\n    }\n}\n\nexport function addDevRules({ getResolvedSymbols, meta }: FeatureTransformContext) {\n    const resolvedSymbols = getResolvedSymbols(meta);\n    for (const resolved of Object.values(resolvedSymbols.class)) {\n        const a = resolved[0];\n        if (resolved.length > 1 && a.symbol['-st-extends']) {\n            const b = resolved[resolved.length - 1];\n            meta.targetAst!.append(\n                createWarningRule(\n                    '.' + b.symbol.name,\n                    getNamespacedClass(b.meta, b.symbol),\n                    basename(b.meta.source),\n                    '.' + a.symbol.name,\n                    getNamespacedClass(a.meta, a.symbol),\n                    basename(a.meta.source)\n                )\n            );\n        }\n    }\n}\n\nexport function createWarningRule(\n    extendedNode: string,\n    scopedExtendedNode: string,\n    extendedFile: string,\n    extendingNode: string,\n    scopedExtendingNode: string,\n    extendingFile: string\n) {\n    const message = `\"class extending component '${extendingNode} => ${scopedExtendingNode}' in stylesheet '${extendingFile}' was set on a node that does not extend '${extendedNode} => ${scopedExtendedNode}' from stylesheet '${extendedFile}'\" !important`;\n    return postcss.rule({\n        raws: { between: ' ' },\n        selector: `${scopedExtendingNode}:not(${scopedExtendedNode})::before`,\n        nodes: [\n            postcss.decl({\n                prop: 'content',\n                value: message,\n            }),\n            postcss.decl({\n                prop: 'display',\n                value: `block !important`,\n            }),\n            postcss.decl({\n                prop: 'font-family',\n                value: `monospace !important`,\n            }),\n            postcss.decl({\n                prop: 'background-color',\n                value: `red !important`,\n            }),\n            postcss.decl({\n                prop: 'color',\n                value: `white !important`,\n            }),\n        ],\n    });\n}\n\nexport function validateClassScoping({\n    context,\n    classSymbol,\n    locallyScoped,\n    reportUnscoped,\n    node,\n    nodes,\n    index,\n    rule,\n}: {\n    context: FeatureContext;\n    classSymbol: ClassSymbol;\n    locallyScoped: boolean;\n    reportUnscoped: boolean;\n    node: ImmutableClass;\n    nodes: ImmutableSelectorNode[];\n    index: number;\n    rule: postcss.Rule;\n}): boolean {\n    if (context.meta.type !== 'stylable') {\n        // ignore in native CSS\n        return true;\n    }\n    if (!classSymbol.alias) {\n        return true;\n    } else if (locallyScoped === false) {\n        if (checkForScopedNodeAfter(context, rule, nodes, index) === false) {\n            if (reportUnscoped) {\n                context.diagnostics.report(diagnostics.UNSCOPED_CLASS(node.value), {\n                    node: rule,\n                    word: node.value,\n                });\n            }\n            return false;\n        } else {\n            return true;\n        }\n    }\n    return locallyScoped;\n}\n\n// ToDo: support more complex cases (e.g. `:is`)\nexport function checkForScopedNodeAfter(\n    context: FeatureContext,\n    rule: postcss.Rule,\n    nodes: ImmutableSelectorNode[],\n    index: number\n) {\n    for (let i = index + 1; i < nodes.length; i++) {\n        const node = nodes[i];\n        if (!node) {\n            // ToDo: can this get here???\n            break;\n        }\n        if (node.type === 'combinator') {\n            break;\n        }\n        if (node.type === 'class') {\n            const name = node.value;\n            const classSymbol = addClass(context, name, rule);\n            if (classSymbol && !classSymbol.alias) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\nfunction isDirectiveDeclaration(\n    decl: postcss.Declaration\n): decl is postcss.Declaration & { prop: keyof typeof stPartDirectives } {\n    return decl.prop in stPartDirectives;\n}\nexport function disableDirectivesForClass(context: FeatureContext, className: string) {\n    // ToDo: move directive analyze to @st-structure\n    // called when class is defined with @st\n    const { classesDefinedWithAtSt } = plugableRecord.getUnsafe(context.meta.data, dataKey);\n    classesDefinedWithAtSt.add(className);\n}\n\nfunction handleDirectives(\n    context: FeatureContext,\n    decl: postcss.Declaration & { prop: keyof typeof stPartDirectives }\n) {\n    const rule = decl.parent as postcss.Rule;\n    if (rule?.type !== 'rule') {\n        return;\n    }\n    const isSimplePerSelector = isSimpleSelector(rule.selector);\n    const type = isSimplePerSelector.reduce((accType, { type }) => {\n        return !accType ? type : accType !== type ? `complex` : type;\n    }, `` as (typeof isSimplePerSelector)[number]['type']);\n    const isSimple = type !== `complex`;\n\n    const { classesDefinedWithAtSt } = plugableRecord.getUnsafe(context.meta.data, dataKey);\n    if (type === 'class' && classesDefinedWithAtSt.has(rule.selector.replace('.', ''))) {\n        context.diagnostics.report(\n            diagnostics.DISABLED_DIRECTIVE(rule.selector.replace('.', ''), decl.prop),\n            {\n                node: decl,\n            }\n        );\n        return;\n    } else if (decl.prop === `-st-states`) {\n        if (isSimple && type !== 'type') {\n            extendTypedRule(\n                context,\n                decl,\n                rule.selector,\n                `-st-states`,\n                STCustomState.parsePseudoStates(decl.value, decl, context.diagnostics)\n            );\n        } else {\n            if (type === 'type') {\n                context.diagnostics.report(diagnostics.STATE_DEFINITION_IN_ELEMENT(), {\n                    node: decl,\n                });\n            } else {\n                context.diagnostics.report(diagnostics.STATE_DEFINITION_IN_COMPLEX(), {\n                    node: decl,\n                });\n            }\n        }\n    } else if (decl.prop === `-st-extends`) {\n        if (isSimple) {\n            const parsed = parseStExtends(decl.value);\n            const symbolName = parsed.types[0] && parsed.types[0].symbolName;\n\n            const extendsRefSymbol = STSymbol.get(context.meta, symbolName)!;\n            if (\n                (extendsRefSymbol &&\n                    (extendsRefSymbol._kind === 'import' ||\n                        extendsRefSymbol._kind === 'class' ||\n                        extendsRefSymbol._kind === 'element')) ||\n                decl.value === context.meta.root\n            ) {\n                extendTypedRule(\n                    context,\n                    decl,\n                    rule.selector,\n                    `-st-extends`,\n                    getAlias(extendsRefSymbol) || extendsRefSymbol\n                );\n            } else {\n                context.diagnostics.report(diagnostics.CANNOT_RESOLVE_EXTEND(decl.value), {\n                    node: decl,\n                    word: decl.value,\n                });\n            }\n        } else {\n            context.diagnostics.report(diagnostics.CANNOT_EXTEND_IN_COMPLEX(), {\n                node: decl,\n            });\n        }\n    } else if (decl.prop === `-st-global`) {\n        if (isSimple && type !== 'type') {\n            // set class global mapping\n            const name = rule.selector.replace('.', '');\n            const classSymbol = get(context.meta, name);\n            if (classSymbol) {\n                const globalSelectorAst = parseStGlobal(context, decl);\n                if (globalSelectorAst) {\n                    classSymbol[`-st-global`] = globalSelectorAst;\n                }\n            }\n        } else {\n            // TODO: diagnostics - scoped on none class\n        }\n    }\n}\n\nexport function extendTypedRule(\n    context: FeatureContext,\n    node: postcss.Node,\n    selector: string,\n    key: keyof StPartDirectives,\n    value: any\n) {\n    const name = selector.replace('.', '');\n    const typedRule = STSymbol.get(context.meta, name) as ClassSymbol | ElementSymbol;\n    if (typedRule && typedRule[key]) {\n        context.diagnostics.report(diagnostics.OVERRIDE_TYPED_RULE(key, name), {\n            node,\n            word: name,\n        });\n    }\n    if (typedRule) {\n        typedRule[key] = value;\n    }\n}\n\nexport interface ArgValue {\n    type: string;\n    value: string;\n}\nexport interface ExtendsValue {\n    symbolName: string;\n    args: ArgValue[][] | null;\n}\n\nexport function parseStExtends(value: string) {\n    const ast = postcssValueParser(value);\n    const types: ExtendsValue[] = [];\n\n    ast.walk((node) => {\n        if (node.type === 'function') {\n            const args = getNamedArgs(node);\n\n            types.push({\n                symbolName: node.value,\n                args,\n            });\n\n            return false;\n        } else if (node.type === 'word') {\n            types.push({\n                symbolName: node.value,\n                args: null,\n            });\n        }\n        return undefined;\n    }, false);\n\n    return {\n        ast,\n        types,\n    };\n}\nfunction parseStGlobal(\n    context: FeatureContext,\n    decl: postcss.Declaration\n): SelectorNodes | undefined {\n    const selector = parseSelectorWithCache(decl.value.replace(/^['\"]/, '').replace(/['\"]$/, ''), {\n        clone: true,\n    });\n    if (!selector[0]) {\n        context.diagnostics.report(diagnostics.EMPTY_ST_GLOBAL(), {\n            node: decl,\n        });\n        return;\n    } else if (selector.length > 1) {\n        context.diagnostics.report(diagnostics.UNSUPPORTED_MULTI_SELECTORS_ST_GLOBAL(), {\n            node: decl,\n        });\n    }\n    return selector[0].nodes;\n}\n", "import type { ClassSymbol, ElementSymbol, STStructure } from '../features';\nimport type { CSSResolve } from '../stylable-resolver';\n\nexport function getOriginDefinition<T extends ClassSymbol | ElementSymbol | STStructure.PartSymbol>(\n    resolved: CSSResolve<T>[]\n) {\n    for (const r of resolved) {\n        const { symbol } = r;\n        if (symbol._kind === 'class' || symbol._kind === 'element') {\n            if (symbol.alias && !symbol[`-st-extends`]) {\n                continue;\n            } else {\n                return r;\n            }\n        }\n    }\n    return resolved[0];\n}\n", "import { murmurhash3_32_gc } from '../murmurhash';\n\nexport const namespaceDelimiter = '__';\nexport function namespace(name: string, namespace: string) {\n    return namespace ? namespace + namespaceDelimiter + name : name;\n}\n\nexport interface PackageInfo {\n    name: string;\n    version: string;\n    dirPath: string;\n}\n\nexport interface NamespaceBuilderParams {\n    hashSalt: string;\n    prefix: string;\n    namespace: string;\n    paths: {\n        file: string;\n        origin: string;\n    };\n    packageInfo: PackageInfo;\n}\n\nexport interface NamespaceBuilder {\n    (options: NamespaceBuilderParams):\n        | {\n              namespace: string;\n              hashPart: string;\n          }\n        | undefined\n        | null;\n}\n\nexport interface CreateNamespaceOptions {\n    prefix?: string;\n    hashSalt?: string;\n    hashFragment?: 'full' | 'minimal' | number;\n    buildNamespace?: NamespaceBuilder;\n    getPackageInfo?: (filePath: string) => PackageInfo;\n    handleNoMatch?: (\n        strict: boolean,\n        namespace: string,\n        filePath: string,\n        usedBy?: string\n    ) => string;\n    hashSeparator?: string;\n    strict?: boolean;\n    hashFn?: (i: string) => string | number;\n    normalizePath: (dirPath: string, filePath: string) => string;\n}\n\nfunction defaultGetPackageInfo() {\n    return {\n        name: '',\n        version: '0.0.0',\n        dirPath: '',\n    };\n}\n\nexport function defaultNamespaceBuilder({\n    prefix,\n    namespace,\n    hashSalt,\n    paths,\n    packageInfo,\n}: NamespaceBuilderParams) {\n    return {\n        namespace: prefix + namespace,\n        hashPart: hashSalt + packageInfo.name + '@' + packageInfo.version + '/' + paths.origin,\n    };\n}\n\nexport function defaultNoMatchHandler(\n    strict: boolean,\n    ns: string,\n    stylesheetPath: string,\n    usedBy?: string\n): string {\n    throw new Error(\n        `Could not create namespace for:\\n${stylesheetPath}\\nthe last valid namespace tried was ${JSON.stringify(\n            ns\n        )}${usedBy ? ` that was used by:\\n${usedBy}\\n` : strict ? ' ' : ''}${\n            strict ? 'running on strict mode' : ''\n        }`\n    );\n}\n\nexport function createNamespaceStrategy(options: CreateNamespaceOptions) {\n    const {\n        prefix = '',\n        hashSalt = '',\n        hashFragment = 'minimal',\n        buildNamespace = defaultNamespaceBuilder,\n        getPackageInfo = defaultGetPackageInfo,\n        handleNoMatch = defaultNoMatchHandler,\n        hashSeparator = '-',\n        strict = false,\n        hashFn = murmurhash3_32_gc,\n        normalizePath,\n    } = options;\n\n    const usedNamespaces = new Map<string, string>();\n\n    return (\n        namespace: string,\n        stylesheetOriginPath: string,\n        stylesheetPath: string = stylesheetOriginPath\n    ) => {\n        const packageInfo = getPackageInfo(stylesheetPath);\n        const buildNamespaceParams = {\n            prefix,\n            hashSalt,\n            namespace,\n            paths: {\n                file: packageInfo.dirPath\n                    ? normalizePath(packageInfo.dirPath, stylesheetPath)\n                    : stylesheetPath,\n                origin: packageInfo.dirPath\n                    ? normalizePath(packageInfo.dirPath, stylesheetOriginPath)\n                    : stylesheetOriginPath,\n            },\n            packageInfo,\n        };\n        const { namespace: resultNs, hashPart } =\n            buildNamespace(buildNamespaceParams) ?? defaultNamespaceBuilder(buildNamespaceParams);\n\n        const hashStr = hashFn(hashPart).toString();\n\n        let i =\n            typeof hashFragment === 'number'\n                ? hashFragment\n                : hashFragment === 'full'\n                ? hashStr.length\n                : 0;\n\n        let finalNamespace = '';\n        while (i <= hashStr.length) {\n            const hashSlice = hashStr.slice(0, i);\n            finalNamespace = resultNs + (hashSlice ? hashSeparator + hashSlice : '');\n            const usedBy = usedNamespaces.get(finalNamespace);\n            if (!usedBy) {\n                usedNamespaces.set(finalNamespace, stylesheetPath);\n                return finalNamespace;\n            }\n            if (usedBy === stylesheetPath) {\n                return finalNamespace;\n            } else if (strict) {\n                return handleNoMatch(strict, finalNamespace, stylesheetPath, usedBy);\n            }\n            i++;\n        }\n\n        return handleNoMatch(\n            strict,\n            finalNamespace,\n            stylesheetPath,\n            usedNamespaces.get(finalNamespace)\n        );\n    };\n}\n", "import { createFeature, FeatureContext } from './feature';\nimport { generalDiagnostics } from './diagnostics';\nimport * as STSymbol from './st-symbol';\nimport type { ImportSymbol } from './st-import';\nimport * as CSSClass from './css-class';\nimport type { StylableMeta } from '../stylable-meta';\nimport { isCompRoot, stringifySelector } from '../helpers/selector';\nimport { getOriginDefinition } from '../helpers/resolve';\nimport type { Type, ImmutableType, ImmutableSelectorNode } from '@tokey/css-selector-parser';\nimport type * as postcss from 'postcss';\nimport { createDiagnosticReporter } from '../diagnostics';\n\n// ToDo: should probably consider removing StylableDirectives from this symbol\nexport interface ElementSymbol extends CSSClass.StPartDirectives {\n    _kind: 'element';\n    name: string;\n    alias?: ImportSymbol;\n}\n\nexport const diagnostics = {\n    INVALID_FUNCTIONAL_SELECTOR: generalDiagnostics.INVALID_FUNCTIONAL_SELECTOR,\n    UNSCOPED_TYPE_SELECTOR: createDiagnosticReporter(\n        `03001`,\n        'warning',\n        (name: string) =>\n            `unscoped type selector \"${name}\" will affect all elements of the same type in the document`\n    ),\n};\n\n// HOOKS\n\nexport const hooks = createFeature<{\n    SELECTOR: Type;\n    IMMUTABLE_SELECTOR: ImmutableType;\n}>({\n    analyzeSelectorNode({ context, node, rule, walkContext: [_index, _nodes] }): void {\n        if (node.nodes) {\n            // error on functional type\n            context.diagnostics.report(\n                diagnostics.INVALID_FUNCTIONAL_SELECTOR(node.value, `type`),\n                {\n                    node: rule,\n                    word: stringifySelector(node),\n                }\n            );\n        }\n        addType(context, node.value, rule);\n    },\n    transformSelectorNode({ context, node, selectorContext }): void {\n        const resolvedSymbols = context.getResolvedSymbols(context.meta);\n        let resolved = resolvedSymbols.element[node.value];\n        if (!resolved) {\n            const resolvedClass = resolvedSymbols.class[node.value];\n            if (resolvedClass?.length > 1 && resolvedClass[0].symbol.alias) {\n                // fallback to imported class alias for case that no actual\n                // type selector was found in the source rules, but transform is\n                // called with such selector externally (this happens for invalid selectors\n                // during language service completions)\n                resolved = resolvedSymbols.class[node.value];\n            } else {\n                // provides resolution for native elements\n                // that are not collected by parts\n                // or elements that are added by js mixin\n                resolved = [\n                    {\n                        _kind: 'css',\n                        meta: context.meta,\n                        symbol: createSymbol({ name: '*' }),\n                    },\n                ];\n            }\n        }\n        selectorContext.setNextSelectorScope(resolved, node, node.value);\n        // native node does not resolve e.g. div\n        if (selectorContext.transform && resolved && resolved.length > 1) {\n            const { symbol, meta } = getOriginDefinition(resolved);\n            if (symbol._kind === 'class') {\n                CSSClass.namespaceClass(meta, symbol, node);\n            } else {\n                node.value = symbol.name;\n            }\n        }\n    },\n});\n\n// API\n\nexport function get(meta: StylableMeta, name: string): ElementSymbol | undefined {\n    return STSymbol.get(meta, name, `element`);\n}\n\nexport function getAll(meta: StylableMeta): Record<string, ElementSymbol> {\n    return STSymbol.getAllByType(meta, `element`);\n}\n\nexport function createSymbol(input: Partial<ElementSymbol> & { name: string }): ElementSymbol {\n    const parts = input['-st-parts'] || {};\n    return { ...input, _kind: 'element', '-st-parts': parts };\n}\n\nexport function addType(context: FeatureContext, name: string, rule?: postcss.Rule): ElementSymbol {\n    const typeSymbol = STSymbol.get(context.meta, name, `element`);\n    if (!typeSymbol && isCompRoot(name)) {\n        let alias = STSymbol.get(context.meta, name);\n        if (alias && alias._kind !== 'import') {\n            alias = undefined;\n        }\n        STSymbol.addSymbol({\n            context,\n            symbol: createSymbol({ name, alias }),\n            node: rule,\n            safeRedeclare: !!alias,\n        });\n    }\n    return STSymbol.get(context.meta, name, `element`)!;\n}\n\nexport function validateTypeScoping({\n    context,\n    locallyScoped,\n    reportUnscoped,\n    node,\n    nodes,\n    index,\n    rule,\n}: {\n    context: FeatureContext;\n    locallyScoped: boolean;\n    reportUnscoped: boolean;\n    node: ImmutableType;\n    nodes: ImmutableSelectorNode[];\n    index: number;\n    rule: postcss.Rule;\n}): boolean {\n    if (context.meta.type !== 'stylable') {\n        // ignore in native CSS\n        return true;\n    }\n    if (locallyScoped === false) {\n        if (CSSClass.checkForScopedNodeAfter(context, rule, nodes, index) === false) {\n            if (reportUnscoped) {\n                context.diagnostics.report(diagnostics.UNSCOPED_TYPE_SELECTOR(node.value), {\n                    node: rule,\n                    word: node.value,\n                });\n            }\n            return false;\n        } else {\n            locallyScoped = true;\n        }\n    }\n    return locallyScoped;\n}\n", "import { createFeature } from './feature';\nimport { nativePseudoClasses } from '../native-reserved-lists';\nimport * as STCustomState from './st-custom-state';\nimport * as CSSType from './css-type';\nimport { createDiagnosticReporter } from '../diagnostics';\nimport type { Selector } from '@tokey/css-selector-parser';\nimport isVendorPrefixed from 'is-vendor-prefixed';\n\nexport const diagnostics = {\n    UNKNOWN_STATE_USAGE: createDiagnosticReporter(\n        '08001',\n        'error',\n        (name: string) => `unknown pseudo-class \"${name}\"`\n    ),\n};\n\n// HOOKS\n\nexport const hooks = createFeature({\n    transformSelectorNode({ context, selectorContext }) {\n        const { inferredSelector, node, ruleOrAtRule, scopeSelectorAst } = selectorContext;\n        if (node.type !== 'pseudo_class') {\n            return;\n        }\n        // find matching custom state\n        const name = node.value;\n        const inferredState = inferredSelector.getPseudoClasses({ name })[name];\n        const foundCustomState = !!inferredState;\n        if (inferredState) {\n            if (selectorContext.transform) {\n                STCustomState.transformPseudoClassToCustomState(\n                    inferredState.state,\n                    inferredState.meta,\n                    node.value,\n                    node,\n                    inferredState.meta.namespace,\n                    context.resolver,\n                    context.diagnostics,\n                    ruleOrAtRule\n                );\n            }\n        }\n\n        // handle nested pseudo classes\n        if (node.nodes && !foundCustomState) {\n            if (node.value === 'global') {\n                // ignore `:st-global` since it is handled after the mixin transformation\n                if (selectorContext.experimentalSelectorInference) {\n                    selectorContext.setNextSelectorScope(\n                        [\n                            {\n                                _kind: 'css',\n                                meta: context.meta,\n                                symbol: CSSType.createSymbol({ name: '*' }),\n                            },\n                        ],\n                        node\n                    );\n                }\n                return;\n            } else {\n                const hasSubSelectors = node.value.match(\n                    /not|any|-\\w+?-any|matches|is|where|has|local|nth-child|nth-last-child/\n                );\n                // pickup all nested selectors except nth initial selector\n                const innerSelectors = (\n                    node.nodes[0] && node.nodes[0].type === `nth` ? node.nodes.slice(1) : node.nodes\n                ) as Selector[];\n                const nestedContext = selectorContext.createNestedContext(\n                    innerSelectors,\n                    selectorContext.inferredSelector\n                );\n                scopeSelectorAst(nestedContext);\n                // change selector inference\n                if (hasSubSelectors && innerSelectors.length) {\n                    if (\n                        selectorContext.experimentalSelectorInference &&\n                        !node.value.match(/not|has/)\n                    ) {\n                        // set inferred to subject of nested selectors + prev compound\n                        const prevNode = selectorContext.lastInferredSelectorNode;\n                        if (prevNode && prevNode.type !== 'combinator') {\n                            nestedContext.inferredMultipleSelectors.add(\n                                selectorContext.inferredSelector\n                            );\n                        }\n                        selectorContext.setNextSelectorScope(\n                            nestedContext.inferredMultipleSelectors,\n                            node\n                        );\n                    }\n                    // legacy: delegate elements of first selector\n                    selectorContext.elements[selectorContext.selectorIndex].push(\n                        ...nestedContext.elements[0]\n                    );\n                }\n            }\n        }\n        // warn unknown state\n        if (\n            !foundCustomState &&\n            !nativePseudoClasses.includes(node.value) &&\n            !isVendorPrefixed(node.value) &&\n            !selectorContext.isDuplicateStScopeDiagnostic()\n        ) {\n            context.diagnostics.report(diagnostics.UNKNOWN_STATE_USAGE(node.value), {\n                node: ruleOrAtRule,\n                word: node.value,\n            });\n        }\n    },\n});\n", "import { createFeature, FeatureContext } from './feature';\nimport * as STSymbol from './st-symbol';\nimport type { ImportSymbol } from './st-import';\nimport {\n    validateAtProperty,\n    validateCustomPropertyName,\n    generateScopedCSSVar,\n    atPropertyValidationWarnings,\n} from '../helpers/css-custom-property';\nimport { validateAllowedNodesUntil, stringifyFunction } from '../helpers/value';\nimport { globalValue, GLOBAL_FUNC } from '../helpers/global';\nimport { plugableRecord } from '../helpers/plugable-record';\nimport { createDiagnosticReporter } from '../diagnostics';\nimport type { StylableMeta } from '../stylable-meta';\nimport type { StylableResolver, CSSResolve } from '../stylable-resolver';\nimport type * as postcss from 'postcss';\n// ToDo: refactor out - parse once and pass to hooks\nimport postcssValueParser from 'postcss-value-parser';\nexport interface CSSVarSymbol {\n    _kind: 'cssVar';\n    name: string;\n    global: boolean;\n    alias: ImportSymbol | undefined;\n}\n\nexport const diagnostics = {\n    ...atPropertyValidationWarnings,\n    ILLEGAL_CSS_VAR_USE: createDiagnosticReporter(\n        '01005',\n        'error',\n        (name: string) =>\n            `a custom css property must begin with \"--\" (double-dash), but received \"${name}\"`\n    ),\n    ILLEGAL_CSS_VAR_ARGS: createDiagnosticReporter(\n        '01006',\n        'error',\n        (name: string) =>\n            `custom property \"${name}\" usage (var()) must receive comma separated values`\n    ),\n    DEPRECATED_ST_GLOBAL_CUSTOM_PROPERTY: createDiagnosticReporter(\n        '01007',\n        'info',\n        () =>\n            `\"st-global-custom-property\" is deprecated and will be removed in the next version. Use \"@property\" with ${GLOBAL_FUNC}`\n    ),\n    GLOBAL_CSS_VAR_MISSING_COMMA: createDiagnosticReporter(\n        '01008',\n        'error',\n        (name: string) =>\n            `\"@st-global-custom-property\" received the value \"${name}\", but its values must be comma separated`\n    ),\n    ILLEGAL_GLOBAL_CSS_VAR: createDiagnosticReporter(\n        '01009',\n        'error',\n        (name: string) =>\n            `\"@st-global-custom-property\" received the value \"${name}\", but it must begin with \"--\" (double-dash)`\n    ),\n    MISSING_PROP_NAME: createDiagnosticReporter(\n        '01010',\n        'error',\n        () => `missing custom property name for \"var(--[PROP NAME])\"`\n    ),\n    UNDEFINED_CSS_CUSTOM_PROP: createDiagnosticReporter(\n        '01011',\n        'error',\n        (name) =>\n            `Undefined \"${name}\" custom property. Please define the property using '@property' or import it with '@st-import' when 'strictCustomProperty' is enabled.`\n    ),\n};\n\nconst dataKey = plugableRecord.key<{\n    stCustomGlobalProperty: Record<string, CSSVarSymbol>;\n    typedDefinitions: Record<string, postcss.AtRule[]>;\n}>('custom-property');\n\n// HOOKS\n\nexport const hooks = createFeature<{\n    RESOLVED: Record<string, string>;\n}>({\n    metaInit({ meta }) {\n        plugableRecord.set(meta.data, dataKey, {\n            stCustomGlobalProperty: {},\n            typedDefinitions: {},\n        });\n    },\n    analyzeInit(context) {\n        // ToDo: move to `STImport.ImportTypeHook`\n        for (const [symbolName, symbol] of Object.entries(\n            STSymbol.getAllByType(context.meta, `import`)\n        )) {\n            if (validateCustomPropertyName(symbolName)) {\n                const importSymbol = STSymbol.get(context.meta, symbolName, `import`);\n                if (!importSymbol) {\n                    console.warn(\n                        `imported symbol \"${symbolName}\" not found on \"${context.meta.source}\"`\n                    );\n                    continue;\n                }\n                addCSSProperty({\n                    context,\n                    node: symbol.import.rule,\n                    name: symbolName,\n                    global: false,\n                    final: true,\n                    alias: importSymbol,\n                });\n            }\n        }\n    },\n    analyzeAtRule({ context, atRule }) {\n        const isStylable = context.meta.type === 'stylable';\n        if (atRule.name === `property`) {\n            let name = atRule.params;\n            let global = !isStylable;\n            // check global\n            const globalVarName = isStylable ? globalValue(name) : undefined;\n            if (globalVarName !== undefined) {\n                name = globalVarName.trim();\n                global = true;\n            }\n            const { stCustomGlobalProperty, typedDefinitions } = plugableRecord.getUnsafe(\n                context.meta.data,\n                dataKey\n            );\n            // handle conflict with deprecated `@st-global-custom-property`\n            if (stCustomGlobalProperty[name]) {\n                global = true;\n            }\n            addCSSProperty({\n                context,\n                node: atRule,\n                name,\n                global,\n                final: true,\n            });\n            validateAtProperty(atRule, context.diagnostics);\n            // save reference to runtime definitions\n            if (atRule.nodes) {\n                typedDefinitions[name] ??= [];\n                typedDefinitions[name].push(atRule);\n            }\n        } else if (atRule.name === `st-global-custom-property` && isStylable) {\n            analyzeDeprecatedStGlobalCustomProperty(context, atRule);\n        }\n    },\n    analyzeDeclaration({ context, decl }) {\n        // register prop\n        if (validateCustomPropertyName(decl.prop)) {\n            addCSSProperty({\n                context,\n                node: decl,\n                name: decl.prop,\n                global: context.meta.type === 'css',\n                final: false,\n            });\n        }\n        // register value\n        if (decl.value.includes('var(')) {\n            analyzeDeclValueVarCalls(context, decl);\n        }\n    },\n    prepareAST({ context, node, toRemove }) {\n        if (\n            node.type === `atrule` &&\n            node.name === 'st-global-custom-property' &&\n            context.meta.type === 'stylable'\n        ) {\n            toRemove.push(node);\n        }\n    },\n    transformResolve({ context: { meta, getResolvedSymbols } }) {\n        const customPropsMapping: Record<string, string> = {};\n        const resolvedSymbols = getResolvedSymbols(meta);\n        for (const [localVarName, localSymbol] of Object.entries(\n            STSymbol.getAllByType(meta, `cssVar`)\n        )) {\n            const resolve = resolvedSymbols.cssVar[localVarName] || {\n                // fallback to local namespace\n                _kind: `css`,\n                symbol: localSymbol,\n                meta,\n            };\n            customPropsMapping[localVarName] = getTransformedName(resolve);\n        }\n\n        return customPropsMapping;\n    },\n    transformAtRuleNode({ context, atRule, resolved }) {\n        if (atRule.name !== `property`) {\n            return;\n        }\n\n        if (atRule.nodes?.length) {\n            const propName = globalValue(atRule.params) || atRule.params;\n            if (resolved[propName]) {\n                atRule.params = resolved[propName] || atRule.params;\n            }\n        } else if (context.meta.type === 'stylable') {\n            // remove `@property` with no body\n            atRule.remove();\n        }\n    },\n    transformDeclaration({ decl, resolved }) {\n        decl.prop = resolved[decl.prop] || decl.prop;\n    },\n    transformValue({ node, data: { cssVarsMapping } }) {\n        const { value } = node;\n        const varWithPrefix = node.nodes[0]?.value || ``;\n        if (validateCustomPropertyName(varWithPrefix)) {\n            if (cssVarsMapping && cssVarsMapping[varWithPrefix]) {\n                node.nodes[0].value = cssVarsMapping[varWithPrefix];\n            }\n        }\n        // handle default values - ToDo: check if required\n        if (node.nodes.length > 2) {\n            node.resolvedValue = stringifyFunction(value, node);\n        }\n    },\n    transformJSExports({ exports, resolved }) {\n        for (const varName of Object.keys(resolved)) {\n            exports.vars[varName.slice(2)] = resolved[varName];\n        }\n    },\n});\n\n// API\n\nexport function get(meta: StylableMeta, name: string): CSSVarSymbol | undefined {\n    return STSymbol.get(meta, name, `cssVar`);\n}\n\nfunction addCSSProperty({\n    context,\n    node,\n    name,\n    global,\n    final,\n    alias,\n}: {\n    context: FeatureContext;\n    node: postcss.Declaration | postcss.AtRule | postcss.Rule;\n    name: string;\n    global: boolean;\n    final: boolean;\n    alias?: ImportSymbol;\n}) {\n    // validate indent\n    if (!validateCustomPropertyName(name)) {\n        context.diagnostics.report(diagnostics.ILLEGAL_CSS_VAR_USE(name), {\n            node,\n            word: name,\n        });\n        return;\n    }\n    // usages bailout: addition of weak definition reference `--x: var(--x)`\n    if (!final) {\n        const existing = STSymbol.get(context.meta, name, `cssVar`);\n        if (existing) {\n            // already defined\n            return;\n            // eslint-disable-next-line no-constant-condition\n        } else if (context.meta.type === 'stylable' && context.meta.flags.strictCustomProperty) {\n            // strict mode\n            context.diagnostics.report(diagnostics.UNDEFINED_CSS_CUSTOM_PROP(name), {\n                node,\n                word: name,\n            });\n        }\n    }\n\n    // define symbol\n    STSymbol.addSymbol({\n        context,\n        symbol: {\n            _kind: 'cssVar',\n            name: name,\n            global,\n            alias,\n        },\n        safeRedeclare: !final || !!alias,\n        node,\n    });\n}\n\nfunction analyzeDeclValueVarCalls(context: FeatureContext, decl: postcss.Declaration) {\n    const parsed = postcssValueParser(decl.value);\n    parsed.walk((node) => {\n        if (node.type === 'function' && node.value === 'var' && node.nodes) {\n            const varName = node.nodes[0];\n            if (!varName) {\n                context.diagnostics.report(diagnostics.MISSING_PROP_NAME(), {\n                    node: decl,\n                });\n                return;\n            }\n\n            if (!validateAllowedNodesUntil(node, 1)) {\n                const args = postcssValueParser.stringify(node.nodes);\n                context.diagnostics.report(diagnostics.ILLEGAL_CSS_VAR_ARGS(args), {\n                    node: decl,\n                    word: args,\n                });\n            }\n\n            addCSSProperty({\n                context,\n                name: postcssValueParser.stringify(varName)?.trim() || ``,\n                node: decl,\n                global: context.meta.type === 'css',\n                final: false,\n            });\n        }\n    });\n}\n\nfunction analyzeDeprecatedStGlobalCustomProperty(context: FeatureContext, atRule: postcss.AtRule) {\n    // report deprecation\n    context.diagnostics.report(diagnostics.DEPRECATED_ST_GLOBAL_CUSTOM_PROPERTY(), {\n        node: atRule,\n    });\n    //\n    const cssVarsByComma = atRule.params.split(',');\n    const cssVarsBySpacing = atRule.params\n        .trim()\n        .split(/\\s+/g)\n        .filter((s) => s !== ',');\n\n    if (cssVarsBySpacing.length > cssVarsByComma.length) {\n        context.diagnostics.report(diagnostics.GLOBAL_CSS_VAR_MISSING_COMMA(atRule.params), {\n            node: atRule,\n            word: atRule.params,\n        });\n        return;\n    }\n\n    for (const entry of cssVarsByComma) {\n        const name = entry.trim();\n        if (validateCustomPropertyName(name)) {\n            // ToDo: change to modify global instead of override\n            addCSSProperty({\n                context,\n                node: atRule,\n                name,\n                global: true,\n                final: true,\n            });\n            // keep track of defined props through `@st-custom-global-property` in order\n            // to not override the default with following `@property` definitions\n            const { stCustomGlobalProperty } = plugableRecord.getUnsafe(context.meta.data, dataKey);\n            stCustomGlobalProperty[name] = STSymbol.get(context.meta, name, `cssVar`)!;\n        } else {\n            context.diagnostics.report(diagnostics.ILLEGAL_GLOBAL_CSS_VAR(name), {\n                node: atRule,\n                word: name,\n            });\n        }\n    }\n}\n\nexport function getRuntimeTypedDefinitionNames(meta: StylableMeta) {\n    const { typedDefinitions } = plugableRecord.getUnsafe(meta.data, dataKey);\n    return Object.keys(typedDefinitions);\n}\nexport function getTransformedName({ symbol, meta }: CSSResolve<CSSVarSymbol>) {\n    return symbol.global ? symbol.name : generateScopedCSSVar(meta.namespace, symbol.name.slice(2));\n}\n\nexport function scopeCSSVar(resolver: StylableResolver, meta: StylableMeta, symbolName: string) {\n    const importedVar = resolver.deepResolve(STSymbol.get(meta, symbolName));\n    if (\n        importedVar &&\n        importedVar._kind === 'css' &&\n        importedVar.symbol &&\n        importedVar.symbol._kind === 'cssVar'\n    ) {\n        importedVar;\n        return getTransformedName(importedVar as CSSResolve<CSSVarSymbol>);\n    }\n    const cssVar = STSymbol.get(meta, symbolName, `cssVar`);\n    return cssVar?.global ? symbolName : generateScopedCSSVar(meta.namespace, symbolName.slice(2));\n}\n", "import type { FunctionNode } from 'postcss-value-parser';\n\nexport const PROPERTY = `-st-global` as const;\nexport const GLOBAL_FUNC = 'st-global' as const;\n\nconst globalValueRegExp = new RegExp(`^${GLOBAL_FUNC}\\\\((.*?)\\\\)$`);\n\nexport function globalValue(str: string) {\n    const match = str.match(globalValueRegExp);\n    return match?.[1];\n}\n\nexport function globalValueFromFunctionNode(funcNode: FunctionNode) {\n    if (funcNode.value !== GLOBAL_FUNC) {\n        return;\n    }\n    let globalValue = '';\n    let unknownInput = false;\n    for (const { type, value } of funcNode.nodes) {\n        if (type === 'word') {\n            globalValue = value;\n        } else if (type === 'comment' || type === 'space') {\n            // allow comments & spaced: do nothing\n        } else {\n            unknownInput = true;\n        }\n    }\n    return unknownInput ? undefined : globalValue;\n}\n", "import { createFeature, FeatureContext } from './feature';\nimport * as STSymbol from './st-symbol';\nimport * as STImport from './st-import';\nimport type { Imported } from './st-import';\nimport type { StylableMeta } from '../stylable-meta';\nimport { plugableRecord } from '../helpers/plugable-record';\nimport { isInConditionalGroup } from '../helpers/rule';\nimport { namespace } from '../helpers/namespace';\nimport { globalValue, GLOBAL_FUNC } from '../helpers/global';\nimport type * as postcss from 'postcss';\nimport postcssValueParser from 'postcss-value-parser';\nimport { createDiagnosticReporter } from '../diagnostics';\n\nexport interface KeyframesSymbol {\n    _kind: 'keyframes';\n    alias: string;\n    name: string;\n    import?: Imported;\n    global?: boolean;\n}\n\nexport interface KeyframesResolve {\n    meta: StylableMeta;\n    symbol: KeyframesSymbol;\n}\n\nexport const reservedKeyFrames = [\n    'none',\n    'inherited',\n    'initial',\n    'unset',\n    /* single-timing-function */\n    'linear',\n    'ease',\n    'ease-in',\n    'ease-in-out',\n    'ease-out',\n    'step-start',\n    'step-end',\n    'start',\n    'end',\n    /* single-animation-iteration-count */\n    'infinite',\n    /* single-animation-direction */\n    'normal',\n    'reverse',\n    'alternate',\n    'alternate-reverse',\n    /* single-animation-fill-mode */\n    'forwards',\n    'backwards',\n    'both',\n    /* single-animation-play-state */\n    'running',\n    'paused',\n];\n\nexport const diagnostics = {\n    ILLEGAL_KEYFRAMES_NESTING: createDiagnosticReporter(\n        '02001',\n        'error',\n        () => `illegal nested \"@keyframes\"`\n    ),\n    MISSING_KEYFRAMES_NAME: createDiagnosticReporter(\n        '02002',\n        'error',\n        () => '\"@keyframes\" missing parameter'\n    ),\n    MISSING_KEYFRAMES_NAME_INSIDE_GLOBAL: createDiagnosticReporter(\n        '02003',\n        'error',\n        () => `\"@keyframes\" missing parameter inside \"${GLOBAL_FUNC}()\"`\n    ),\n    KEYFRAME_NAME_RESERVED: createDiagnosticReporter(\n        '02004',\n        'error',\n        (name: string) => `keyframes \"${name}\" is reserved`\n    ),\n    UNKNOWN_IMPORTED_KEYFRAMES: createDiagnosticReporter(\n        '02005',\n        'error',\n        (name: string, path: string) =>\n            `cannot resolve imported keyframes \"${name}\" from stylesheet \"${path}\"`\n    ),\n};\n\nconst dataKey = plugableRecord.key<{\n    statements: postcss.AtRule[];\n    paths: Record<string, string[]>;\n    imports: string[];\n}>('keyframes');\n\n// HOOKS\n\nSTImport.ImportTypeHook.set(`keyframes`, (context, localName, importName, importDef) => {\n    addKeyframes({\n        context,\n        name: localName,\n        importName,\n        ast: importDef.rule,\n        importDef,\n    });\n});\n\nexport const hooks = createFeature<{\n    RESOLVED: Record<string, KeyframesResolve>;\n}>({\n    metaInit({ meta }) {\n        plugableRecord.set(meta.data, dataKey, { statements: [], paths: {}, imports: [] });\n    },\n    analyzeAtRule({ context, atRule }) {\n        let { params: name } = atRule;\n        // check nesting validity\n        if (!isInConditionalGroup(atRule, true)) {\n            context.diagnostics.report(diagnostics.ILLEGAL_KEYFRAMES_NESTING(), { node: atRule });\n            return;\n        }\n        // save keyframes declarations\n        const { statements: keyframesAsts } = plugableRecord.getUnsafe(context.meta.data, dataKey);\n        keyframesAsts.push(atRule);\n        // validate name\n        if (!name) {\n            context.diagnostics.report(diagnostics.MISSING_KEYFRAMES_NAME(), { node: atRule });\n            return;\n        }\n        //\n        const isStylable = context.meta.type === 'stylable';\n        let global: boolean | undefined;\n        const globalName = isStylable ? globalValue(name) : undefined;\n        if (globalName !== undefined) {\n            name = globalName;\n            global = true;\n        }\n        if (name === '') {\n            context.diagnostics.report(diagnostics.MISSING_KEYFRAMES_NAME_INSIDE_GLOBAL(), {\n                node: atRule,\n            });\n            return;\n        }\n        if (reservedKeyFrames.includes(name)) {\n            context.diagnostics.report(diagnostics.KEYFRAME_NAME_RESERVED(name), {\n                node: atRule,\n                word: name,\n            });\n        }\n        addKeyframes({\n            context,\n            name,\n            importName: name,\n            ast: atRule,\n            global: isStylable ? global : true,\n        });\n    },\n    transformResolve({ context }) {\n        const symbols = STSymbol.getAllByType(context.meta, `keyframes`);\n        const resolved: Record<string, KeyframesResolve> = {};\n        const resolvedSymbols = context.getResolvedSymbols(context.meta);\n        for (const [name, symbol] of Object.entries(symbols)) {\n            const res = resolvedSymbols.keyframes[name];\n            if (res) {\n                resolved[name] = res;\n            } else if (symbol.import) {\n                context.diagnostics.report(\n                    diagnostics.UNKNOWN_IMPORTED_KEYFRAMES(symbol.name, symbol.import.request),\n                    {\n                        node: symbol.import.rule,\n                        word: symbol.name,\n                    }\n                );\n            }\n        }\n        return resolved;\n    },\n    transformAtRuleNode({ context, atRule, resolved }) {\n        const globalName =\n            context.meta.type === 'stylable' ? globalValue(atRule.params) : undefined;\n        const name = globalName ?? atRule.params;\n        if (!name) {\n            return;\n        }\n        const resolve = resolved[name];\n        /* js keyframes mixins won't have resolved keyframes */\n        atRule.params = resolve\n            ? getTransformedName(resolve)\n            : globalName ?? namespace(name, context.meta.namespace);\n    },\n    transformDeclaration({ decl, resolved }) {\n        const parsed = postcssValueParser(decl.value);\n        // ToDo: improve by correctly parse & identify `animation-name`\n        // ToDo: handle symbols from js mixin\n        parsed.nodes.forEach((node) => {\n            const resolve = resolved[node.value];\n            const scoped = resolve && getTransformedName(resolve);\n            if (scoped) {\n                node.value = scoped;\n            }\n        });\n        decl.value = parsed.toString();\n    },\n    transformJSExports({ exports, resolved }) {\n        for (const [name, resolve] of Object.entries(resolved)) {\n            exports.keyframes[name] = getTransformedName(resolve);\n        }\n    },\n});\n\n// API\n\nexport function getKeyframesStatements({ data }: StylableMeta): ReadonlyArray<postcss.AtRule> {\n    const { statements } = plugableRecord.getUnsafe(data, dataKey);\n    return statements;\n}\n\nexport function get(meta: StylableMeta, name: string): KeyframesSymbol | undefined {\n    return STSymbol.get(meta, name, `keyframes`);\n}\n\nexport function getAll(meta: StylableMeta): Record<string, KeyframesSymbol> {\n    return STSymbol.getAllByType(meta, `keyframes`);\n}\n\nfunction addKeyframes({\n    context,\n    name,\n    importName,\n    ast,\n    global,\n    importDef,\n}: {\n    context: FeatureContext;\n    name: string;\n    importName: string;\n    ast: postcss.AtRule | postcss.Rule;\n    global?: boolean;\n    importDef?: Imported;\n}) {\n    /**\n     * keyframes are safe to redeclare in case they are unique within their context (applied\n     * in different times/cases), for example 2 keyframes statements can override each other\n     * if 1 is applied on the root (always) and the other in @media (on some condition).\n     *\n     * > in case keyframes are imported, then no local keyframes\n     * > are allowed to override them (will report a warning).\n     */\n    const isFirstInPath = addKeyframesDeclaration(context.meta, name, ast, !!importDef);\n    // first must not be `safeRedeclare`\n    const safeRedeclare = isFirstInPath && !!STSymbol.get(context.meta, name, `keyframes`);\n    // fields are confusing in this symbol:\n    // name: the import name if imported OR the local name\n    // alias: the local name\n    STSymbol.addSymbol({\n        context,\n        node: ast,\n        localName: name,\n        symbol: {\n            _kind: 'keyframes',\n            alias: name,\n            name: importName,\n            global,\n            import: importDef,\n        },\n        safeRedeclare,\n    });\n}\n\nfunction addKeyframesDeclaration(\n    meta: StylableMeta,\n    name: string,\n    origin: postcss.AtRule | postcss.Rule,\n    isImported: boolean\n) {\n    let path = ``;\n    let current = origin.parent;\n    while (current) {\n        if (current.type === `rule`) {\n            path += ` -> ` + (current as postcss.Rule).selector;\n        } else if (current.type === `atrule`) {\n            path +=\n                ` -> ` +\n                (current as postcss.AtRule).name +\n                ` ` +\n                (current as postcss.AtRule).params;\n        }\n        current = current.parent as any;\n    }\n    const { paths, imports } = plugableRecord.getUnsafe(meta.data, dataKey);\n    if (!paths[path]) {\n        paths[path] = [];\n    }\n    const isFirstInPath = !paths[path].includes(name);\n    const isImportedBefore = imports.includes(name);\n    paths[path].push(name);\n    if (isImported) {\n        imports.push(name);\n    }\n    return isFirstInPath && !isImportedBefore;\n}\n\nfunction getTransformedName({ symbol, meta }: KeyframesResolve) {\n    return symbol.global ? symbol.alias : namespace(symbol.alias, meta.namespace);\n}\n", "import { createFeature, FeatureContext } from './feature';\nimport * as STSymbol from './st-symbol';\nimport * as STImport from './st-import';\nimport type { StylableMeta } from '../stylable-meta';\nimport { plugableRecord } from '../helpers/plugable-record';\nimport { namespace } from '../helpers/namespace';\nimport { globalValueFromFunctionNode, GLOBAL_FUNC } from '../helpers/global';\nimport { CSSWideKeywords } from '../native-reserved-lists';\nimport valueParser from 'postcss-value-parser';\nimport type * as postcss from 'postcss';\nimport { createDiagnosticReporter, Diagnostics } from '../diagnostics';\n\nexport interface LayerSymbol {\n    _kind: 'layer';\n    name: string;\n    alias: string;\n    global?: boolean;\n    import?: STImport.Imported;\n}\nexport interface ResolvedLayer {\n    meta: StylableMeta;\n    symbol: LayerSymbol;\n}\n\nexport const diagnostics = {\n    MISSING_LAYER_NAME_INSIDE_GLOBAL: createDiagnosticReporter(\n        '19001',\n        'warning',\n        () => `\"@layer\" missing parameter inside \"${GLOBAL_FUNC}()\"`\n    ),\n    LAYER_SORT_STATEMENT_WITH_STYLE: createDiagnosticReporter(\n        '19002',\n        'error',\n        () => `\"@layer\" ordering statement cannot have a style block`\n    ),\n    RESERVED_KEYWORD: createDiagnosticReporter(\n        '19003',\n        'error',\n        (name: string) => `\"@layer\" name cannot be reserved word \"${name}\"`\n    ),\n    NOT_IDENT: createDiagnosticReporter(\n        '19004',\n        'error',\n        (name: string) => `\"@layer\" expected ident, but got \"${name}\"`\n    ),\n    RECONFIGURE_IMPORTED: createDiagnosticReporter(\n        '19005',\n        'error',\n        (name: string) => `cannot reconfigure imported layer \"${name}\"`\n    ),\n    UNKNOWN_IMPORTED_LAYER: createDiagnosticReporter(\n        '19006',\n        'error',\n        (name: string, path: string) =>\n            `cannot resolve imported layer \"${name}\" from stylesheet \"${path}\"`\n    ),\n};\n\nconst dataKey = plugableRecord.key<{\n    analyzedParams: Record<\n        string,\n        {\n            names: string[];\n            transformNames: (getTransformedName: (name: string) => string) => string;\n        }\n    >;\n    layerDefs: Record<string, postcss.AtRule | postcss.Rule>;\n}>('layer');\n\n// HOOKS\n\nSTImport.ImportTypeHook.set(`layer`, (context, localName, importName, importDef) => {\n    addLayer({\n        context,\n        name: localName,\n        importName,\n        ast: importDef.rule,\n        global: false,\n        importDef,\n    });\n});\n\nexport const hooks = createFeature<{\n    RESOLVED: Record<string, ResolvedLayer>;\n}>({\n    metaInit({ meta }) {\n        plugableRecord.set(meta.data, dataKey, { analyzedParams: {}, layerDefs: {} });\n    },\n    analyzeAtRule({ context, atRule }) {\n        if (!atRule.params) {\n            return;\n        }\n        if (atRule.name === 'import') {\n            // native css import\n            analyzeCSSImportLayer(context, atRule);\n        } else if (atRule.name === 'layer') {\n            // layer atrule\n            const analyzeMetaData = plugableRecord.getUnsafe(context.meta.data, dataKey);\n            const analyzedParams = parseLayerParams(\n                atRule.params,\n                context.diagnostics,\n                atRule,\n                context.meta.type === 'stylable'\n            );\n            if (analyzedParams.multiple && atRule.nodes) {\n                context.diagnostics.report(diagnostics.LAYER_SORT_STATEMENT_WITH_STYLE(), {\n                    node: atRule,\n                });\n            }\n            // cache params\n            analyzeMetaData.analyzedParams[atRule.params] = analyzedParams;\n            // cache symbols\n            for (const name of analyzedParams.names) {\n                addLayer({\n                    context,\n                    name,\n                    importName: name,\n                    global: !!analyzedParams.globals[name] || context.meta.type === 'css',\n                    ast: atRule,\n                });\n            }\n        }\n    },\n    transformResolve({ context }) {\n        const symbols = STSymbol.getAllByType(context.meta, `layer`);\n        const resolved: Record<string, ResolvedLayer> = {};\n        const resolvedSymbols = context.getResolvedSymbols(context.meta);\n        for (const [name, symbol] of Object.entries(symbols)) {\n            const res = resolvedSymbols.layer[name];\n            if (res) {\n                resolved[name] = res;\n            } else if (symbol.import) {\n                context.diagnostics.report(\n                    diagnostics.UNKNOWN_IMPORTED_LAYER(symbol.name, symbol.import.request),\n                    {\n                        node: symbol.import.rule,\n                        word: symbol.name,\n                    }\n                );\n            }\n        }\n        return resolved;\n    },\n    transformAtRuleNode({ context, atRule, resolved }) {\n        if (!atRule.params) {\n            return;\n        }\n        if (atRule.name === 'import') {\n            // native css import\n            transformCSSImportLayer(context, atRule, resolved);\n        } else if (atRule.name === 'layer') {\n            // layer atrule\n            const { analyzedParams } = plugableRecord.getUnsafe(context.meta.data, dataKey);\n            const analyzed = analyzedParams[atRule.params];\n            if (analyzed) {\n                atRule.params = analyzed.transformNames((name) => {\n                    const resolve = resolved[name];\n                    return resolve ? getTransformedName(resolved[name]) : name;\n                });\n            }\n        }\n    },\n    transformJSExports({ exports, resolved }) {\n        for (const [name, resolve] of Object.entries(resolved)) {\n            exports.layers[name] = getTransformedName(resolve);\n        }\n    },\n});\n\n// API\n\nexport function get(meta: StylableMeta, name: string): LayerSymbol | undefined {\n    return STSymbol.get(meta, name, `layer`);\n}\nexport function getAll(meta: StylableMeta): Record<string, LayerSymbol> {\n    return STSymbol.getAllByType(meta, `layer`);\n}\nexport function getDefinition(\n    meta: StylableMeta,\n    name: string\n): postcss.AtRule | postcss.Rule | undefined {\n    const analyzeMetaData = plugableRecord.getUnsafe(meta.data, dataKey);\n    return analyzeMetaData.layerDefs[name];\n}\n\nfunction parseLayerParams(\n    params: string,\n    report: Diagnostics,\n    atRule: postcss.AtRule,\n    isStylable: boolean\n) {\n    const names: string[] = [];\n    const globals: Record<string, true> = {};\n    let readyForName = true;\n    let multiple = false;\n    const ast = valueParser(params).nodes;\n    const namedNodeRefs: Record<string, valueParser.Node[]> = {};\n    for (let i = 0; i < ast.length; ++i) {\n        const node = ast[i];\n        const { type, value } = node;\n        if (type === 'word') {\n            if (readyForName) {\n                const layers: valueParser.WordNode[] = [];\n                for (const name of getDotSeparatedNames(value)) {\n                    // ToDo: handle name duplications\n                    const splittedLayer = { ...node, value: name };\n                    if (layers.length) {\n                        layers.push({ ...node, value: '.' });\n                    }\n                    layers.push(splittedLayer);\n                    namedNodeRefs[name] ??= [];\n                    namedNodeRefs[name].push(splittedLayer);\n                    names.push(name);\n                }\n                readyForName = false;\n                ast.splice(i, 1, ...layers);\n            }\n        } else if (type === 'function' && value === GLOBAL_FUNC && readyForName && isStylable) {\n            const globalName = globalValueFromFunctionNode(node);\n            if (globalName) {\n                namedNodeRefs[globalName] ??= [];\n                namedNodeRefs[globalName].push(node);\n                names.push(globalName);\n                globals[globalName] = true;\n            } else if (globalName === '') {\n                report.report(diagnostics.MISSING_LAYER_NAME_INSIDE_GLOBAL(), { node: atRule });\n            }\n            readyForName = false;\n        } else if (type === 'div' && value === ',') {\n            readyForName = true;\n            multiple = true;\n        } else if (type === 'comment') {\n            // doesn't change meaning: do nothing\n        } else {\n            readyForName = false;\n            const source = valueParser.stringify(node);\n            report.report(diagnostics.NOT_IDENT(source), { node: atRule, word: source });\n        }\n    }\n    return {\n        names,\n        globals,\n        multiple,\n        transformNames(getTransformedName: (name: string) => string) {\n            for (const [name, nodes] of Object.entries(namedNodeRefs)) {\n                const transformedName = getTransformedName(name);\n                for (const modifiedNode of nodes) {\n                    if (modifiedNode.type === 'function') {\n                        // mutate to word - this is safe since this node is not exposed\n                        (modifiedNode as any).type = 'word';\n                    }\n                    modifiedNode.value = transformedName;\n                }\n            }\n            return valueParser.stringify(ast);\n        },\n    };\n}\n\nfunction getDotSeparatedNames(value: string) {\n    if (!value.includes('.')) {\n        return [value];\n    }\n    const names = [];\n    let lastIndex = 0;\n    for (let index = 0; index < value.length; ++index) {\n        const char = value[index];\n        switch (char) {\n            case '.': {\n                if (value[index - 1] !== '\\\\') {\n                    names.push(value.substring(lastIndex, index));\n                    lastIndex = index + 1;\n                }\n                break;\n            }\n        }\n    }\n    if (lastIndex <= value.length - 1) {\n        names.push(value.substring(lastIndex, value.length));\n    }\n    return names;\n}\n\nfunction analyzeCSSImportLayer(context: FeatureContext, importAtRule: postcss.AtRule) {\n    const ast = valueParser(importAtRule.params).nodes;\n    for (let i = 0; i < ast.length; ++i) {\n        const node = ast[i];\n        const { type, value } = node;\n        if (type === 'function' && value === 'layer' && node.nodes.length) {\n            for (const nestedNode of node.nodes) {\n                if (nestedNode.type === 'word') {\n                    for (const name of getDotSeparatedNames(nestedNode.value)) {\n                        addLayer({\n                            context,\n                            name,\n                            importName: name,\n                            ast: importAtRule,\n                            global: false,\n                        });\n                    }\n                }\n            }\n        }\n    }\n}\nfunction transformCSSImportLayer(\n    _context: FeatureContext,\n    importAtRule: postcss.AtRule,\n    resolved: Record<string, ResolvedLayer>\n) {\n    const ast = valueParser(importAtRule.params).nodes;\n    for (let i = 0; i < ast.length; ++i) {\n        const node = ast[i];\n        const { type, value } = node;\n        if (type === 'function' && value === 'layer' && node.nodes.length) {\n            for (const nestedNode of node.nodes) {\n                const { type, value } = nestedNode;\n                if (type === 'word') {\n                    nestedNode.value = getDotSeparatedNames(value)\n                        .map((name) => {\n                            const resolve = resolved[name];\n                            return resolve ? getTransformedName(resolved[name]) : name;\n                        })\n                        .join('.');\n                }\n            }\n        }\n    }\n    importAtRule.params = valueParser.stringify(ast);\n}\n\nfunction getTransformedName({ symbol, meta }: ResolvedLayer) {\n    return symbol.global ? symbol.alias : namespace(symbol.alias, meta.namespace);\n}\n\nfunction addLayer({\n    context,\n    name,\n    importName,\n    ast,\n    global,\n    importDef,\n}: {\n    context: FeatureContext;\n    name: string;\n    importName: string;\n    ast: postcss.AtRule | postcss.Rule;\n    global: boolean;\n    importDef?: STImport.Imported;\n}) {\n    const definedSymbol = STSymbol.get(context.meta, name, 'layer');\n    if (!definedSymbol) {\n        if (CSSWideKeywords.includes(name)) {\n            // keep\n            global = true;\n            context.diagnostics.report(diagnostics.RESERVED_KEYWORD(name), {\n                node: ast,\n                word: name,\n            });\n        }\n        const analyzeMetaData = plugableRecord.getUnsafe(context.meta.data, dataKey);\n        analyzeMetaData.layerDefs[name] = ast;\n        STSymbol.addSymbol({\n            context,\n            node: ast,\n            localName: name,\n            symbol: {\n                _kind: 'layer',\n                name: importName,\n                alias: name,\n                global,\n                import: importDef,\n            },\n            safeRedeclare: false,\n        });\n    } else if (!definedSymbol.import && global) {\n        definedSymbol.global = true;\n    } else if (definedSymbol.import && global) {\n        context.diagnostics.report(diagnostics.RECONFIGURE_IMPORTED(name), {\n            node: ast,\n            word: name,\n        });\n    }\n}\n", "import { createFeature, FeatureContext } from './feature';\nimport * as STSymbol from './st-symbol';\nimport * as STImport from './st-import';\nimport type { StylableMeta } from '../stylable-meta';\nimport { createDiagnosticReporter } from '../diagnostics';\nimport { plugableRecord } from '../helpers/plugable-record';\nimport { namespace } from '../helpers/namespace';\nimport { globalValueFromFunctionNode, GLOBAL_FUNC } from '../helpers/global';\nimport valueParser, { WordNode } from 'postcss-value-parser';\nimport type * as postcss from 'postcss';\n\nexport interface ContainerSymbol {\n    _kind: 'container';\n    name: string;\n    alias: string;\n    global?: boolean;\n    import?: STImport.Imported;\n}\n\nexport interface ResolvedContainer {\n    meta: StylableMeta;\n    symbol: ContainerSymbol;\n}\n\nexport const diagnostics = {\n    UNEXPECTED_DECL_VALUE: createDiagnosticReporter(\n        '20001',\n        'error',\n        (value: string) => `unexpected value: ${value}`\n    ),\n    UNKNOWN_DECL_TYPE: createDiagnosticReporter(\n        '20002',\n        'error',\n        (value: string) => `unknown container type: ${value}`\n    ),\n    MISSING_DECL_TYPE: createDiagnosticReporter(\n        '20003',\n        'error',\n        () => `missing container shorthand type`\n    ),\n    INVALID_CONTAINER_NAME: createDiagnosticReporter(\n        '20004',\n        'error',\n        (value: string) => `invalid container name: ${value}`\n    ),\n    UNRESOLVED_CONTAINER_NAME: createDiagnosticReporter(\n        '20005',\n        'error',\n        (value: string) => `unresolved container name: ${value}`\n    ),\n    UNKNOWN_IMPORTED_CONTAINER: createDiagnosticReporter(\n        '20006',\n        'error',\n        (name: string, path: string) =>\n            `cannot resolve imported container name \"${name}\" from stylesheet \"${path}\"`\n    ),\n    MISSING_CONTAINER_NAME_INSIDE_GLOBAL: createDiagnosticReporter(\n        '20007',\n        'warning',\n        () => `Missing container name inside \"${GLOBAL_FUNC}()\"`\n    ),\n    UNEXPECTED_DEFINITION: createDiagnosticReporter(\n        '20008',\n        'error',\n        (def: string) => `Unexpected value in container definition: \"${def}\"\"`\n    ),\n};\n\ninterface ParsedNames {\n    containers: Array<{ name: string; global: boolean }>;\n    transformNames: (getTransformedName: (name: string) => string) => string;\n}\n\nconst dataKey = plugableRecord.key<{\n    'container-name': Record<string, ParsedNames>;\n    container: Record<string, ParsedNames>;\n    definitions: Record<string, postcss.Declaration | postcss.AtRule | postcss.Rule>;\n}>('container');\n\n// HOOKS\n\nSTImport.ImportTypeHook.set(`container`, (context, localName, importName, importDef) => {\n    addContainer({\n        context,\n        name: localName,\n        importName,\n        ast: importDef.rule,\n        global: false,\n        importDef,\n        forceDefinition: true,\n    });\n});\n\nexport const hooks = createFeature<{\n    RESOLVED: Record<string, ResolvedContainer>;\n}>({\n    metaInit({ meta }) {\n        plugableRecord.set(meta.data, dataKey, {\n            'container-name': {},\n            container: {},\n            definitions: {},\n        });\n    },\n    analyzeDeclaration({ context, decl }) {\n        const prop = decl.prop.toLowerCase();\n        if (prop !== 'container-name' && prop !== 'container') {\n            return;\n        }\n        const analyzed = plugableRecord.getUnsafe(context.meta.data, dataKey);\n        const bucket = analyzed[prop];\n        const value = decl.value;\n        if (bucket[value]) {\n            return;\n        }\n        const parsed = (bucket[value] = parseContainerDecl(decl, context));\n        for (const { name, global } of parsed.containers) {\n            addContainer({\n                context,\n                ast: decl,\n                name,\n                importName: name,\n                global,\n                forceDefinition: false,\n            });\n        }\n    },\n    analyzeAtRule({ context, atRule }) {\n        if (!atRule.nodes) {\n            // treat @container with no body as definition\n            const ast = valueParser(atRule.params).nodes;\n            let searching = true;\n            let name = '';\n            let global = false;\n            for (const node of ast) {\n                if (node.type === 'comment' || node.type === 'space') {\n                    // do nothing\n                    continue;\n                } else if (searching && node.type === 'word') {\n                    name = node.value;\n                } else if (searching && node.type === 'function' && node.value === GLOBAL_FUNC) {\n                    name = globalValueFromFunctionNode(node) || '';\n                    global = true;\n                } else {\n                    const def = valueParser.stringify(node);\n                    context.diagnostics.report(diagnostics.UNEXPECTED_DEFINITION(def), {\n                        node: atRule,\n                        word: def,\n                    });\n                    break;\n                }\n                searching = false;\n            }\n            if (name) {\n                if (invalidContainerNames[name]) {\n                    context.diagnostics.report(diagnostics.INVALID_CONTAINER_NAME(name), {\n                        node: atRule,\n                        word: name,\n                    });\n                }\n                addContainer({\n                    context,\n                    ast: atRule,\n                    name,\n                    importName: name,\n                    global,\n                    forceDefinition: true,\n                });\n            }\n        }\n    },\n    transformResolve({ context }) {\n        const symbols = STSymbol.getAllByType(context.meta, `container`);\n        const resolved: Record<string, ResolvedContainer> = {};\n        const resolvedSymbols = context.getResolvedSymbols(context.meta);\n        for (const [name, symbol] of Object.entries(symbols)) {\n            const res = resolvedSymbols.container[name];\n            if (res) {\n                resolved[name] = res;\n            } else if (symbol.import) {\n                context.diagnostics.report(\n                    diagnostics.UNKNOWN_IMPORTED_CONTAINER(symbol.name, symbol.import.request),\n                    {\n                        node: symbol.import.rule,\n                        word: symbol.name,\n                    }\n                );\n            }\n        }\n        return resolved;\n    },\n    transformDeclaration({ context, decl, resolved }) {\n        const prop = decl.prop.toLowerCase();\n        if (prop !== 'container-name' && prop !== 'container') {\n            return;\n        }\n        const analyzed = plugableRecord.getUnsafe(context.meta.data, dataKey);\n        const bucket = analyzed[prop];\n        const value = decl.value;\n        decl.value = bucket[value].transformNames((name) => {\n            const resolve = resolved[name];\n            return resolve ? getTransformedName(resolved[name]) : name;\n        });\n    },\n    transformAtRuleNode({ context, atRule, resolved }) {\n        if (!atRule.nodes) {\n            // remove definition only @container\n            atRule.remove();\n            return;\n        }\n        const ast = valueParser(atRule.params).nodes;\n        let changed = false;\n        search: for (const node of ast) {\n            if (node.type === 'comment' || node.type === 'space') {\n                // do nothing\n            } else if (node.type === 'word') {\n                const resolve = resolved[node.value];\n                if (resolve) {\n                    node.value = getTransformedName(resolve);\n                    changed = true;\n                } else {\n                    context.diagnostics.report(diagnostics.UNRESOLVED_CONTAINER_NAME(node.value), {\n                        node: atRule,\n                        word: node.value,\n                    });\n                }\n                break search;\n            } else if (node.type === 'function' && node.value === GLOBAL_FUNC) {\n                const globalName = globalValueFromFunctionNode(node) || '';\n                if (globalName) {\n                    changed = true;\n                    const wordNode: WordNode = node as any;\n                    wordNode.type = 'word';\n                    wordNode.value = globalName;\n                }\n            } else {\n                break search;\n            }\n        }\n        if (changed) {\n            atRule.params = valueParser.stringify(ast);\n        }\n        atRule.params = context.evaluator.evaluateValue(context, {\n            value: atRule.params,\n            meta: context.meta,\n            node: atRule,\n            initialNode: atRule,\n        }).outputValue;\n    },\n    transformJSExports({ exports, resolved }) {\n        for (const [name, resolve] of Object.entries(resolved)) {\n            exports.containers[name] = getTransformedName(resolve);\n        }\n    },\n});\n\nconst invalidContainerNames: Record<string, true> = {\n    and: true,\n    not: true,\n    or: true,\n};\n\nfunction parseContainerDecl(decl: postcss.Declaration, context: FeatureContext): ParsedNames {\n    const { prop, value } = decl;\n    const containers: Array<{ name: string; global: boolean }> = [];\n    const namedNodeRefs: Record<string, valueParser.Node[]> = {};\n    const ast = valueParser(value).nodes;\n    let noneFound = false;\n    const checkNextName = (node: valueParser.Node) => {\n        const { type, value } = node;\n        if (type === 'comment' || type === 'space') {\n            // do nothing\n        } else if (type === 'word' || (type === 'function' && value === GLOBAL_FUNC)) {\n            const global = type === 'function';\n            const name = global ? globalValueFromFunctionNode(node) || '' : node.value;\n            if (global && !name) {\n                context.diagnostics.report(diagnostics.MISSING_CONTAINER_NAME_INSIDE_GLOBAL(), {\n                    node: decl,\n                });\n            }\n            if (name === 'none') {\n                noneFound = true;\n                return;\n            }\n            if (!global) {\n                containers.push({ name, global });\n                namedNodeRefs[name] ??= [];\n                namedNodeRefs[name].push(node);\n            } else {\n                // mutate to word - this is safe since this node is not exposed\n                (node as any).type = 'word';\n                (node as any).value = name;\n            }\n            if (invalidContainerNames[name]) {\n                context.diagnostics.report(diagnostics.INVALID_CONTAINER_NAME(name), {\n                    node: decl,\n                    word: name,\n                });\n            }\n        } else {\n            const word = valueParser.stringify(node);\n            context.diagnostics.report(diagnostics.UNEXPECTED_DECL_VALUE(word), {\n                node: decl,\n                word,\n            });\n            return false;\n        }\n        return true;\n    };\n    if (prop.toLowerCase() === 'container-name') {\n        for (const node of ast) {\n            const continueParse = checkNextName(node);\n            if (!continueParse) {\n                break;\n            }\n        }\n    } else {\n        let nextExpected: 'name' | 'type' | '' = 'name';\n        for (const node of ast) {\n            const { type, value } = node;\n\n            if (type === 'comment' || type === 'space') {\n                // do nothing\n            } else if (nextExpected === 'name') {\n                if (type === 'div' && value === '/') {\n                    nextExpected = 'type';\n                } else {\n                    const continueParse = checkNextName(node);\n                    if (!continueParse) {\n                        break;\n                    }\n                }\n            } else if (type === 'word' && nextExpected === 'type') {\n                if (value !== 'normal' && value !== 'size' && value !== 'inline-size') {\n                    context.diagnostics.report(diagnostics.UNKNOWN_DECL_TYPE(value), {\n                        node: decl,\n                        word: value,\n                    });\n                }\n                nextExpected = '';\n            } else {\n                const word = valueParser.stringify(node);\n                context.diagnostics.report(diagnostics.UNEXPECTED_DECL_VALUE(word), {\n                    node: decl,\n                    word,\n                });\n            }\n        }\n        if (nextExpected === 'type') {\n            context.diagnostics.report(diagnostics.MISSING_DECL_TYPE(), {\n                node: decl,\n            });\n        }\n    }\n    if (containers.length > 0 && noneFound) {\n        context.diagnostics.report(diagnostics.INVALID_CONTAINER_NAME('none'), {\n            node: decl,\n            word: 'none',\n        });\n    }\n    return {\n        containers,\n        transformNames(getTransformedName: (name: string) => string) {\n            for (const [name, nodes] of Object.entries(namedNodeRefs)) {\n                const transformedName = getTransformedName(name);\n                for (const modifiedNode of nodes) {\n                    if (modifiedNode.type === 'function') {\n                        // mutate to word - this is safe since this node is not exposed\n                        (modifiedNode as any).type = 'word';\n                    }\n                    modifiedNode.value = transformedName;\n                }\n            }\n            return valueParser.stringify(ast);\n        },\n    };\n}\n\n// API\n\nexport function get(meta: StylableMeta, name: string): ContainerSymbol | undefined {\n    return STSymbol.get(meta, name, `container`);\n}\nexport function getAll(meta: StylableMeta): Record<string, ContainerSymbol> {\n    return STSymbol.getAllByType(meta, `container`);\n}\nexport function getDefinition(\n    meta: StylableMeta,\n    name: string\n): postcss.Declaration | postcss.AtRule | postcss.Rule | undefined {\n    const { definitions } = plugableRecord.getUnsafe(meta.data, dataKey);\n    return definitions[name];\n}\n\nfunction getTransformedName({ symbol, meta }: ResolvedContainer) {\n    return symbol.global ? symbol.alias : namespace(symbol.alias, meta.namespace);\n}\n\nfunction addContainer({\n    context,\n    name,\n    importName,\n    ast,\n    global,\n    importDef,\n    forceDefinition,\n}: {\n    context: FeatureContext;\n    name: string;\n    importName: string;\n    ast: postcss.Declaration | postcss.AtRule | postcss.Rule;\n    global: boolean;\n    importDef?: STImport.Imported;\n    forceDefinition: boolean;\n}) {\n    const { definitions } = plugableRecord.getUnsafe(context.meta.data, dataKey);\n    const definedSymbol = STSymbol.get(context.meta, name, 'container');\n    const isFirst = !definedSymbol;\n    if (forceDefinition || isFirst) {\n        if (context.meta.type !== 'stylable') {\n            global = true;\n        }\n        definitions[name] = ast;\n        STSymbol.addSymbol({\n            context,\n            node: ast,\n            localName: name,\n            symbol: {\n                _kind: 'container',\n                name: importName,\n                alias: name,\n                global,\n                import: importDef,\n            },\n            safeRedeclare: false,\n        });\n    }\n}\n", "import { createFeature } from './feature';\n\n// HOOKS\n\nexport const hooks = createFeature({\n    transformAtRuleNode({ atRule, context }) {\n        if (atRule.name !== 'media') {\n            return;\n        }\n        atRule.params = context.evaluator.evaluateValue(context, {\n            value: atRule.params,\n            meta: context.meta,\n            node: atRule,\n            initialNode: atRule,\n        }).outputValue;\n    },\n});\n", "import { plugableRecord } from '../helpers/plugable-record';\nimport { FeatureContext, createFeature } from './feature';\nimport type { StylableMeta } from '../stylable-meta';\nimport * as STSymbol from './st-symbol';\nimport * as STCustomSelector from './st-custom-selector';\nimport * as STCustomState from './st-custom-state';\nimport type { MappedStates } from './st-custom-state';\nimport * as CSSClass from './css-class';\nimport { warnOnce } from '../helpers/deprecation';\nimport postcss from 'postcss';\nimport { parseCSSValue, stringifyCSSValue, BaseAstNode } from '@tokey/css-value-parser';\nimport { parseSelectorWithCache, walkSelector } from '../helpers/selector';\nimport {\n    ImmutableSelector,\n    stringifySelectorAst,\n    ImmutablePseudoClass,\n    ImmutableSelectorList,\n} from '@tokey/css-selector-parser';\nimport { createDiagnosticReporter } from '../diagnostics';\nimport { getAlias } from '../stylable-utils';\nimport {\n    findAnything,\n    findFatArrow,\n    findNextClassNode,\n    findNextPseudoClassNode,\n    findPseudoElementNode,\n    isExactLiteral,\n} from '../helpers/css-value-seeker';\n\nexport const diagnostics = {\n    GLOBAL_MAPPING_LIMITATION: createDiagnosticReporter(\n        '21000',\n        'error',\n        () => `Currently class mapping is limited to single global selector: :global(<selector>)`\n    ),\n    UNSUPPORTED_TOP_DEF: createDiagnosticReporter(\n        '21001',\n        'error',\n        () => 'top level @st must start with a class'\n    ),\n    MISSING_EXTEND: createDiagnosticReporter(\n        '21002',\n        'error',\n        () => `missing required class reference to extend a class (e.g. \":is(.class-name)\"`\n    ),\n    OVERRIDE_IMPORTED_CLASS: createDiagnosticReporter(\n        '21003',\n        'error',\n        () => `cannot override imported class definition`\n    ),\n    STATE_OUT_OF_CONTEXT: createDiagnosticReporter(\n        '21004',\n        'error',\n        () => 'pseudo-state definition must be directly nested in a `@st .class{}` definition'\n    ),\n    // 31005 - unused\n    MISSING_MAPPED_SELECTOR: createDiagnosticReporter(\n        '21006',\n        'error',\n        () => `missing mapped selector after \"=>\"`\n    ),\n    MULTI_MAPPED_SELECTOR: createDiagnosticReporter(\n        '21007',\n        'error',\n        () =>\n            'mapped selector accepts only a single selector.\\nuse `:is()` or `:where()` to map multiple selectors)'\n    ),\n    ELEMENT_OUT_OF_CONTEXT: createDiagnosticReporter(\n        '21008',\n        'error',\n        () => 'pseudo-element definition must be directly nested in a `@st .class{}` definition'\n    ),\n    MISSING_MAPPING: createDiagnosticReporter(\n        '21009',\n        'error',\n        () => 'expected selector mapping (e.g. \"=> <selector>\")'\n    ),\n    REDECLARE: createDiagnosticReporter(\n        '21010',\n        'error',\n        (type: string, src: string) => `redeclare ${type} definition: \"${src}\"`\n    ),\n    INVALID_ST_DEF: createDiagnosticReporter(\n        '21011',\n        'error',\n        (params: string) => `invalid @st \"${params}\" definition`\n    ),\n    MAPPING_UNSUPPORTED_NESTING: createDiagnosticReporter(\n        '21012',\n        'error',\n        () => 'mapped selector can only contain `&` as an initial selector'\n    ),\n    UNEXPECTED_EXTRA_VALUE: createDiagnosticReporter(\n        '21013',\n        'error',\n        (extraValue: string) => `found unexpected extra value definition: \"${extraValue}\"`\n    ),\n    CLASS_OUT_OF_CONTEXT: createDiagnosticReporter(\n        '21014',\n        'error',\n        () => 'class definition must be top level'\n    ),\n};\n\nexport interface PartSymbol extends HasParts, STCustomState.HasStates {\n    _kind: 'part';\n    name: string;\n    id: string;\n    mapTo: ImmutableSelectorList | CSSClass.ClassSymbol;\n}\nexport interface HasParts {\n    '-st-parts': Record<string, PartSymbol>;\n}\n\nexport const experimentalMsg = '[experimental feature] stylable structure (@st): API might change!';\n\nconst dataKey = plugableRecord.key<{\n    isStructureMode: boolean;\n    analyzedDefs: WeakMap<postcss.AtRule, AnalyzedStDef>;\n    analyzedDefToPartSymbol: Map<AnalyzedStDef, PartSymbol>;\n    declaredClasses: Set<string>;\n}>('st-structure');\n\n// HOOKS\n\nexport const hooks = createFeature({\n    analyzeInit(context) {\n        const { meta } = context;\n        if (meta.type !== 'stylable') {\n            return;\n        }\n        const stAtRule = meta.sourceAst.nodes.find((node) => isStAtRule(node));\n        if (stAtRule) {\n            warnOnce(experimentalMsg);\n            const metaAnalysis = plugableRecord.getUnsafe(context.meta.data, dataKey);\n            metaAnalysis.isStructureMode = true;\n        } else {\n            // set implicit root for legacy mode (root with flat structure)\n            meta.root = 'root';\n            const rootSymbol = CSSClass.addClass(context, 'root');\n            rootSymbol[`-st-root`] = true;\n        }\n    },\n    metaInit({ meta }) {\n        plugableRecord.set(meta.data, dataKey, {\n            // default to legacy flat mode\n            isStructureMode: false,\n            analyzedDefs: new WeakMap(),\n            analyzedDefToPartSymbol: new Map(),\n            declaredClasses: new Set<string>(),\n        });\n    },\n    analyzeAtRule({ context, atRule, analyzeRule }) {\n        if (!isStAtRule(atRule) || context.meta.type !== 'stylable') {\n            return;\n        }\n\n        const { analyzedDefToPartSymbol, declaredClasses } = plugableRecord.getUnsafe(\n            context.meta.data,\n            dataKey\n        );\n        const analyzed = analyzeStAtRule(atRule, context);\n        if (!analyzed) {\n            // not valid\n        } else if (analyzed.type === 'topLevelClass') {\n            declaredClasses.add(analyzed.name);\n            CSSClass.addClass(context, analyzed.name, atRule);\n            CSSClass.disableDirectivesForClass(context, analyzed.name);\n            // extend class\n            if (analyzed.extendedClass) {\n                const extendedSymbol =\n                    CSSClass.get(context.meta, analyzed.extendedClass) ||\n                    CSSClass.addClass(context, analyzed.extendedClass);\n                CSSClass.extendTypedRule(\n                    context,\n                    atRule,\n                    '.' + analyzed.name,\n                    '-st-extends',\n                    getAlias(extendedSymbol) || extendedSymbol\n                );\n            }\n            // class mapping\n            if (analyzed.mappedSelector) {\n                // ToDo: support non global mapping\n                const globalNode = findGlobalPseudo(analyzed);\n                if (globalNode && globalNode.nodes?.length === 1) {\n                    const mappedSelectorAst = globalNode.nodes[0];\n                    // analyze mapped selector\n                    analyzeRule(\n                        postcss.rule({\n                            selector: stringifySelectorAst(mappedSelectorAst),\n                            source: atRule.source,\n                        }),\n                        {\n                            isScoped: false,\n                            originalNode: atRule,\n                        }\n                    );\n                    // register global mapping to class\n                    CSSClass.extendTypedRule(\n                        context,\n                        atRule,\n                        analyzed.name,\n                        '-st-global',\n                        mappedSelectorAst.nodes\n                    );\n                }\n            }\n        } else if (analyzed.type === 'part') {\n            const parentSymbol = getPartParentSymbol(context, analyzed, analyzedDefToPartSymbol);\n            if (!parentSymbol) {\n                // unreachable: assuming analyzing @st definitions dfs - class/part must be defined\n                context.diagnostics.report(diagnostics.ELEMENT_OUT_OF_CONTEXT(), {\n                    node: atRule,\n                });\n                return;\n            }\n            const partName = analyzed.name;\n            // check re-declare\n            if (getPart(parentSymbol, partName)) {\n                const srcWord = '::' + partName;\n                context.diagnostics.report(diagnostics.REDECLARE('pseudo-element', srcWord), {\n                    node: atRule,\n                    word: srcWord,\n                });\n                return;\n            }\n            // analyze mapped selector\n            analyzeRule(\n                postcss.rule({\n                    selector: stringifySelectorAst(analyzed.mappedSelector),\n                    source: atRule.source,\n                }),\n                {\n                    isScoped: true,\n                    originalNode: atRule,\n                }\n            );\n            // register part mapping to parent definition\n            const partSymbol = setPart(parentSymbol, getSymbolId(parentSymbol), partName, [\n                analyzed.mappedSelector,\n            ]);\n            analyzedDefToPartSymbol.set(analyzed, partSymbol);\n        } else if (analyzed.type === 'state') {\n            const parentSymbol =\n                analyzed.parentAnalyze.type === 'topLevelClass'\n                    ? CSSClass.get(context.meta, analyzed.parentAnalyze.name)\n                    : analyzedDefToPartSymbol.get(analyzed.parentAnalyze);\n            if (!parentSymbol) {\n                // unreachable: assuming analyzing @st definitions dfs - class/part must be defined\n                context.diagnostics.report(diagnostics.STATE_OUT_OF_CONTEXT(), {\n                    node: atRule,\n                });\n                return;\n            }\n            const mappedStates = (parentSymbol['-st-states'] ||= {});\n            const stateName = analyzed.name;\n            if (mappedStates[stateName]) {\n                // first state definition wins\n                const srcWord = ':' + stateName;\n                context.diagnostics.report(diagnostics.REDECLARE('pseudo-state', srcWord), {\n                    node: atRule,\n                    word: srcWord,\n                });\n                return;\n            }\n            mappedStates[stateName] = analyzed.stateDef;\n        }\n    },\n    analyzeDone({ meta }) {\n        const { isStructureMode } = plugableRecord.getUnsafe(meta.data, dataKey);\n        if (meta.type === 'stylable' && !isStructureMode) {\n            // legacy flat mode:\n            //  classes and custom-selectors are registered as .root pseudo-elements\n            const customSelectors = STCustomSelector.getCustomSelectors(meta);\n            const classes = CSSClass.getAll(meta);\n            const rootClass = classes['root']!;\n            const rootId = getSymbolId(rootClass);\n            // custom-selector definition precedence over class definition\n            for (const [partName, mapTo] of Object.entries(customSelectors)) {\n                setPart(rootClass, rootId, partName, mapTo);\n            }\n            for (const [className, classSymbol] of Object.entries(classes)) {\n                if (className === 'root' || customSelectors[className]) {\n                    continue;\n                }\n                setPart(rootClass, rootId, className, classSymbol);\n            }\n        }\n    },\n});\n\n// API\n\nfunction isStAtRule(node: postcss.AnyNode): node is postcss.AtRule {\n    return node?.type === 'atrule' && node.name === 'st';\n}\n\nfunction getPartParentSymbol(\n    context: FeatureContext,\n    { parentAnalyze }: ParsedStPart,\n    analyzedDefToPartSymbol: Map<AnalyzedStDef, PartSymbol>\n) {\n    return parentAnalyze.type === 'topLevelClass'\n        ? CSSClass.get(context.meta, parentAnalyze.name)\n        : analyzedDefToPartSymbol.get(parentAnalyze);\n}\n\nexport function isStructureMode(meta: StylableMeta) {\n    return plugableRecord.getUnsafe(meta.data, dataKey).isStructureMode;\n}\n\nexport function createPartSymbol(\n    input: Partial<PartSymbol> & Pick<PartSymbol, 'name' | 'id' | 'mapTo'>\n): PartSymbol {\n    const parts = input['-st-parts'] || {};\n    const states = input['-st-states'] || {};\n    return { ...input, _kind: 'part', '-st-parts': parts, '-st-states': states };\n}\n\nexport function setPart(\n    symbol: HasParts,\n    parentId: string,\n    partName: string,\n    mapTo: PartSymbol['mapTo']\n) {\n    const partSymbol = createPartSymbol({\n        name: partName,\n        id: parentId + '::' + partName,\n        mapTo,\n    });\n    symbol['-st-parts'][partName] = partSymbol;\n    return partSymbol;\n}\n\nexport function getParts(symbol: HasParts) {\n    return symbol['-st-parts'];\n}\n\nexport function getPart(symbol: HasParts, name: string): PartSymbol | undefined {\n    return symbol['-st-parts'][name];\n}\n\nexport function getPartNames(symbol: HasParts) {\n    return Object.keys(symbol['-st-parts']);\n}\n\nfunction getSymbolId(symbol: CSSClass.ClassSymbol | PartSymbol) {\n    return symbol._kind === 'class' ? '.' + symbol.name : symbol.id;\n}\n\ntype ParsedStClass = {\n    type: 'topLevelClass';\n    params: BaseAstNode[];\n    match: boolean;\n    ranges: Record<'class' | 'extend' | 'mapArrow' | 'mapTo' | 'leftoverValue', BaseAstNode[]>;\n    name: string;\n    extendedClass?: string;\n    mappedSelector?: ImmutableSelector;\n};\n\ninterface ParsedStPart {\n    type: 'part';\n    params: BaseAstNode[];\n    match: boolean;\n    ranges: Record<'pseudoElement' | 'mapArrow' | 'mapTo' | 'leftoverValue', BaseAstNode[]>;\n    name: string;\n    parentAnalyze: ParsedStClass | ParsedStPart;\n    mappedArrow: boolean;\n    mappedSelector: ImmutableSelector;\n}\n\ninterface ParsedStState {\n    type: 'state';\n    params: BaseAstNode[];\n    match: boolean;\n    ranges: Record<'leftoverValue', BaseAstNode[]>;\n    name: string;\n    parentAnalyze: ParsedStClass | ParsedStPart;\n    stateDef: MappedStates[string];\n}\n\nfunction isMatch(result: any): result is AnalyzedStDef {\n    return result.match;\n}\n\ntype AnalyzedStDef = ParsedStClass | ParsedStPart | ParsedStState;\nfunction analyzeStAtRule(\n    atRule: postcss.AtRule,\n    context: FeatureContext\n): AnalyzedStDef | undefined {\n    // cache\n    const { analyzedDefs } = plugableRecord.getUnsafe(context.meta.data, dataKey);\n    if (analyzedDefs.has(atRule)) {\n        return analyzedDefs.get(atRule);\n    }\n    // parse\n    const params = parseCSSValue(atRuleFullParams(atRule));\n\n    const def =\n        params.length === 0\n            ? undefined\n            : parseClassDefinition(atRule, params) ||\n              parsePseudoElementDefinition(context, atRule, params) ||\n              parseStateDefinition(context, atRule, params);\n\n    if (!def) {\n        if (atRule.parent?.type === 'root') {\n            context.diagnostics.report(diagnostics.UNSUPPORTED_TOP_DEF(), {\n                node: atRule,\n            });\n        } else {\n            context.diagnostics.report(diagnostics.INVALID_ST_DEF(atRule.params), {\n                node: atRule,\n            });\n        }\n        return;\n    }\n\n    // validate\n    switch (def.type) {\n        case 'topLevelClass': {\n            if (!validateTopLevelClass({ def, atRule, context })) {\n                return;\n            }\n            break;\n        }\n        case 'part': {\n            if (!validatePart({ def, atRule, context })) {\n                return;\n            }\n            break;\n        }\n        case 'state': {\n            if (!validateState({ def, atRule, context })) {\n                return;\n            }\n            break;\n        }\n    }\n    if (!isMatch(def)) {\n        return;\n    }\n\n    analyzedDefs.set(atRule, def);\n    return def;\n}\n\nfunction validateTopLevelClass({\n    def,\n    atRule,\n    context,\n}: {\n    def: Partial<ParsedStClass>;\n    atRule: postcss.AtRule;\n    context: FeatureContext;\n}) {\n    const { declaredClasses } = plugableRecord.getUnsafe(context.meta.data, dataKey);\n    if (!def.ranges || !def.params) {\n        // should always be provided by parser\n        return false;\n    }\n    if (!def.name) {\n        // ToDo: fix type to have name required\n        return false;\n    }\n    if (def.ranges.extend.length && !def.extendedClass) {\n        context.diagnostics.report(diagnostics.MISSING_EXTEND(), {\n            node: atRule,\n            word: stringifyCSSValue(def.ranges.extend),\n        });\n    }\n    if (def.ranges.leftoverValue.find((node) => node.type !== 'comment' && node.type !== 'space')) {\n        const unexpectedValue = stringifyCSSValue(def.ranges.leftoverValue).trim();\n        context.diagnostics.report(diagnostics.UNEXPECTED_EXTRA_VALUE(unexpectedValue), {\n            node: atRule,\n            word: unexpectedValue,\n        });\n        return false;\n    }\n    if (atRule.parent?.type !== 'root') {\n        context.diagnostics.report(diagnostics.CLASS_OUT_OF_CONTEXT(), {\n            node: atRule,\n        });\n        return false;\n    }\n    const existingSymbol = STSymbol.get(context.meta, def.name);\n    if (existingSymbol?._kind === 'import') {\n        context.diagnostics.report(diagnostics.OVERRIDE_IMPORTED_CLASS(), {\n            node: atRule,\n        });\n        return false;\n    }\n    if (declaredClasses.has(def.name)) {\n        // ToDo: use st-symbol redeclare api; improve st-symbol/css-class \"final\" marking and diagnostics\n        const srcWord = '.' + def.name;\n        context.diagnostics.report(diagnostics.REDECLARE('class', srcWord), {\n            node: atRule,\n            word: srcWord,\n        });\n        return false;\n    }\n    if (def.ranges.mapArrow.length) {\n        if (!def.mappedSelector) {\n            // report missing selector\n            const arrowEnd = def.ranges.mapArrow[def.ranges.mapArrow.length - 1];\n            for (let i = def.params.length - 1; i >= 0; i--) {\n                const node = def.params[i];\n                if (node === arrowEnd) {\n                    break;\n                } else if (isExactLiteral(node, ',')) {\n                    context.diagnostics.report(diagnostics.MULTI_MAPPED_SELECTOR(), {\n                        node: atRule,\n                    });\n                    return false;\n                }\n            }\n            context.diagnostics.report(diagnostics.MISSING_MAPPED_SELECTOR(), {\n                node: atRule,\n            });\n            return false;\n        }\n        const globalNode = findGlobalPseudo(def, true);\n        if (!globalNode || !globalNode.nodes || globalNode.nodes.length !== 1) {\n            context.diagnostics.report(diagnostics.GLOBAL_MAPPING_LIMITATION(), {\n                node: atRule,\n                word: stringifySelectorAst(def.mappedSelector).trim(),\n            });\n            return false;\n        }\n    }\n    return true;\n}\nfunction validatePart({\n    def,\n    atRule,\n    context,\n}: {\n    def: Partial<ParsedStPart>;\n    atRule: postcss.AtRule;\n    context: FeatureContext;\n}) {\n    if (!def.parentAnalyze) {\n        context.diagnostics.report(diagnostics.ELEMENT_OUT_OF_CONTEXT(), {\n            node: atRule,\n        });\n        return false;\n    }\n    if (!def.mappedSelector) {\n        if (!def.mappedArrow) {\n            context.diagnostics.report(diagnostics.MISSING_MAPPING(), {\n                node: atRule,\n            });\n            return false;\n        }\n        // report missing selector\n        const arrowEnd = def.ranges!.mapArrow[def.ranges!.mapArrow.length - 1];\n        for (let i = def.params!.length - 1; i >= 0; i--) {\n            const node = def.params![i];\n            if (node === arrowEnd) {\n                break;\n            } else if (isExactLiteral(node, ',')) {\n                context.diagnostics.report(diagnostics.MULTI_MAPPED_SELECTOR(), {\n                    node: atRule,\n                });\n                return false;\n            }\n        }\n        context.diagnostics.report(diagnostics.MISSING_MAPPED_SELECTOR(), {\n            node: atRule,\n        });\n        return false;\n    }\n    if (validateNestingInMapping(def.mappedSelector, context, atRule)) {\n        return false;\n    }\n    return true;\n}\nfunction validateState({\n    def,\n    atRule,\n    context,\n}: {\n    def: Partial<ParsedStState>;\n    atRule: postcss.AtRule;\n    context: FeatureContext;\n}) {\n    if (!def.parentAnalyze) {\n        context.diagnostics.report(diagnostics.STATE_OUT_OF_CONTEXT(), {\n            node: atRule,\n        });\n        return false;\n    }\n    const [amountToActualValue] = findAnything(def.ranges!.leftoverValue, 0);\n    if (amountToActualValue) {\n        const unexpectedValue = stringifyCSSValue(def.ranges!.leftoverValue).trim();\n        context.diagnostics.report(diagnostics.UNEXPECTED_EXTRA_VALUE(unexpectedValue), {\n            node: atRule,\n            word: unexpectedValue,\n        });\n        return false;\n    }\n\n    return true;\n}\nfunction findGlobalPseudo(def: Partial<ParsedStClass>, checkAfter = false) {\n    if (!def.mappedSelector) {\n        return;\n    }\n    let globalNode: ImmutablePseudoClass | undefined = undefined;\n    let foundUnexpectedSelector = false;\n    for (const node of def.mappedSelector.nodes) {\n        if (node.type === 'pseudo_class' && node.value === 'global' && !globalNode) {\n            globalNode = node;\n            if (!checkAfter) {\n                break;\n            }\n        } else if (node.type !== 'comment') {\n            foundUnexpectedSelector = true;\n        }\n    }\n    return foundUnexpectedSelector ? undefined : globalNode;\n}\n\nfunction parseStateDefinition(\n    context: FeatureContext,\n    atRule: postcss.AtRule,\n    params: BaseAstNode[]\n) {\n    const result: Partial<ParsedStState> = {\n        type: 'state',\n        params,\n        match: true,\n        ranges: { leftoverValue: [] },\n    };\n\n    let index = 0;\n\n    const { analyzedDefs } = plugableRecord.getUnsafe(context.meta.data, dataKey); // name\n    const [amountToName, nameNode] = findNextPseudoClassNode(params, 0);\n    if (nameNode) {\n        result.name = nameNode.value;\n    } else {\n        // not a pseudo-state definition\n        return;\n    }\n    index += amountToName;\n    // parent\n    const parentRule = atRule.parent;\n    const parentAnalyze = parentRule && analyzedDefs.get(parentRule as any);\n    if (\n        parentAnalyze &&\n        (parentAnalyze.type === 'topLevelClass' || parentAnalyze.type === 'part')\n    ) {\n        result.parentAnalyze = parentAnalyze;\n    }\n    // state\n    const [amountToStateDef, stateDef] = STCustomState.parseStateValue(\n        params.slice(index - 1),\n        atRule,\n        context.diagnostics\n    );\n    if (stateDef !== undefined) {\n        index += amountToStateDef;\n        result.stateDef = stateDef;\n    } else {\n        result.match = false;\n    }\n    // leftover\n    const amountTaken = index - 1;\n    result.ranges!.leftoverValue.push(...params.slice(amountTaken));\n    const [amountToUnexpected] = findAnything(params, index);\n    if (amountToUnexpected) {\n        result.match = false;\n    }\n    return result;\n}\n\nfunction parsePseudoElementDefinition(\n    context: FeatureContext,\n    atRule: postcss.AtRule,\n    params: BaseAstNode[]\n) {\n    const { analyzedDefs } = plugableRecord.getUnsafe(context.meta.data, dataKey);\n    const result: Partial<ParsedStPart> = {\n        type: 'part',\n        params,\n        match: true,\n        name: '',\n        ranges: { pseudoElement: [], mapArrow: [], mapTo: [], leftoverValue: [] },\n    };\n\n    let index = 0;\n\n    // collect pseudo element name\n    const [amountToName, nameNode, nameInspectAmount] = findPseudoElementNode(params, 0);\n    result.ranges!.pseudoElement.push(...params.slice(index, index + nameInspectAmount));\n    index += amountToName;\n    if (nameNode) {\n        result.name = nameNode.value;\n    } else {\n        // not a pseudo-element definition\n        return false;\n    }\n    // get symbol to extend\n    const parentRule = atRule.parent;\n    const parentAnalyze = parentRule && analyzedDefs.get(parentRule as any);\n    if (parentAnalyze?.type === 'topLevelClass' || parentAnalyze?.type === 'part') {\n        result.parentAnalyze = parentAnalyze;\n    }\n    // collect mapped selector\n    const [amountToMapping, mappingOpenNode, mapArrowInspectAmount] = findFatArrow(params, index, {\n        stopOnFail: false,\n    });\n    result.ranges!.mapArrow.push(...params.slice(index, index + mapArrowInspectAmount));\n    index += amountToMapping;\n    if (mappingOpenNode) {\n        result.mappedArrow = true;\n        // selector\n        result.ranges!.mapTo.push(...params.slice(index));\n        index = params.length - 1;\n        const selectorStr = atRuleFullParams(atRule).slice(mappingOpenNode.end);\n        const mappedSelectors = parseSelectorWithCache(selectorStr.trim());\n        const filteredSelector =\n            mappedSelectors.length === 1 && filterCommentsAndSpaces(mappedSelectors[0]);\n        if (filteredSelector && filteredSelector.nodes.length) {\n            result.mappedSelector = filteredSelector;\n        }\n    } else {\n        result.match = false;\n    }\n    // check unexpected extra\n    result.ranges!.leftoverValue.push(...params.slice(index + 1));\n\n    return result;\n}\n\nfunction parseClassDefinition(atRule: postcss.AtRule, params: BaseAstNode[]) {\n    const result: ParsedStClass = {\n        type: 'topLevelClass',\n        params,\n        match: true,\n        ranges: { class: [], extend: [], mapArrow: [], mapTo: [], leftoverValue: [] },\n        name: '',\n    };\n\n    let index = 0;\n    // top level class\n    const [amountToClass, classNameNode, classInspectedAmount] = findNextClassNode(params, index, {\n        stopOnFail: true,\n    });\n    result.ranges.class.push(...params.slice(index, index + classInspectedAmount));\n    index += amountToClass;\n    if (classNameNode) {\n        result.name = classNameNode.value;\n    } else {\n        // not a class definition\n        return false;\n    }\n    // collect extends class\n    const [amountToExtends, extendsNode, extendInspectAmount] = findNextPseudoClassNode(\n        params,\n        index,\n        {\n            name: 'is',\n            stopOnFail: true,\n            stopOnMatch: (_node, index, nodes) => {\n                const [amountToFatArrow] = findFatArrow(nodes, index, { stopOnFail: true });\n                return amountToFatArrow > 0;\n            },\n        }\n    );\n    if (extendsNode) {\n        result.ranges.extend.push(...params.slice(index, index + extendInspectAmount));\n        index += amountToExtends;\n        if (extendsNode.type === 'call') {\n            const [amountToExtendedClass, nameNode] = findNextClassNode(extendsNode.args, 0, {\n                stopOnFail: true,\n            });\n            if (amountToExtendedClass) {\n                index += amountToExtends;\n                // check leftover nodes\n                const [amountToUnexpectedNode] = findAnything(\n                    extendsNode.args,\n                    amountToExtendedClass\n                );\n                if (!amountToUnexpectedNode) {\n                    result.extendedClass = nameNode!.value;\n                }\n            }\n        }\n    }\n    // collect mapped selector\n    const [amountToMapping, mappingOpenNode, mapArrowInspectAmount] = findFatArrow(params, index, {\n        stopOnFail: false,\n    });\n    if (mappingOpenNode) {\n        result.ranges.mapArrow.push(...params.slice(index, index + mapArrowInspectAmount));\n        index += amountToMapping;\n        // selector\n        result.ranges.mapTo.push(...params.slice(index));\n        index = params.length;\n        const selectorStr = atRuleFullParams(atRule).slice(mappingOpenNode.end);\n        const mappedSelectors = parseSelectorWithCache(selectorStr);\n        const filteredSelector =\n            mappedSelectors.length === 1 && filterCommentsAndSpaces(mappedSelectors[0]);\n        if (filteredSelector && filteredSelector.nodes.length) {\n            result.mappedSelector = filteredSelector;\n        }\n    }\n    // unexpected extra value\n    result.ranges.leftoverValue.push(...params.slice(index));\n\n    return result;\n}\n\nfunction validateNestingInMapping(\n    selector: ImmutableSelector,\n    context: FeatureContext,\n    atRule: postcss.AtRule\n) {\n    // check for unsupported & anywhere except first\n    let invalid = false;\n    let passedActualSelector = false;\n    walkSelector(selector, (node) => {\n        if (passedActualSelector && node.type === 'nesting') {\n            context.diagnostics.report(diagnostics.MAPPING_UNSUPPORTED_NESTING(), {\n                node: atRule,\n            });\n            invalid = true;\n            return walkSelector.stopAll;\n        } else if (node.type !== 'comment' && node.type !== 'selector') {\n            passedActualSelector = true;\n        }\n        return;\n    });\n    return invalid;\n}\n\nfunction atRuleFullParams(atRule: postcss.AtRule) {\n    const afterName = atRule.raws.afterName || '';\n    const between = atRule.raws.between || '';\n    return afterName + atRule.params + between;\n}\n\nfunction filterCommentsAndSpaces(selector: ImmutableSelector) {\n    const filteredSelector: ImmutableSelector = {\n        ...selector,\n        after: '',\n        before: '',\n        nodes: selector.nodes.filter((node) => node.type !== 'comment'),\n    };\n    return filteredSelector;\n}\n", "/**\n * add get/set on an object with a deprecation warning when setting a value\n */\nconst valueMaps: Record<string, WeakMap<any, any>> = {};\nconst valueOnThisPrefix = `__deprecateFromStylable-`;\nexport function setFieldForDeprecation(\n    object: object,\n    fieldName: string,\n    options: {\n        objectType?: string;\n        pleaseUse?: string;\n        enumerable?: boolean;\n        valueOnThis?: boolean;\n    } = {}\n) {\n    const objectPrefix = options.objectType ? options.objectType + `.` : ``;\n    const alternative = options.pleaseUse ? `, please use ${options.pleaseUse}` : ``;\n    const enumerable = options.enumerable || false;\n    const fieldOnThis = options.valueOnThis ? `${valueOnThisPrefix}${fieldName}` : ``;\n    if (!fieldOnThis && !valueMaps[fieldName]) {\n        valueMaps[fieldName] = new WeakMap();\n    }\n    Object.defineProperty(object, fieldName, {\n        configurable: true,\n        get() {\n            warnOnce(`\"${objectPrefix}${fieldName}\" is deprecated${alternative}`);\n            return fieldOnThis ? this[fieldOnThis] : valueMaps[fieldName].get(this);\n        },\n        set(newValue) {\n            if (fieldOnThis) {\n                this[fieldOnThis] = newValue;\n            } else {\n                valueMaps[fieldName].set(this, newValue);\n            }\n            return newValue;\n        },\n        enumerable,\n    });\n}\n\nexport function wrapFunctionForDeprecation<FUNC extends (this: any, ...args: any[]) => any>(\n    func: FUNC,\n    options: {\n        name: string;\n        pleaseUse?: string;\n    }\n): FUNC {\n    const alternative = options.pleaseUse ? `, please use ${options.pleaseUse}` : ``;\n    const warning = `\"${options.name || func.name}\" is deprecated${alternative}`;\n    return function (this: any, ...args: any[]) {\n        warnOnce(warning);\n        return func.apply(this, args);\n    } as FUNC;\n}\n\n/**\n * console warn once per message\n */\nconst warnsFlag: Record<string, boolean> = {};\nlet isWarnOn = true;\nexport function warnOnce(warning: string) {\n    if (isWarnOn && !warnsFlag[warning]) {\n        warnsFlag[warning] = true;\n        console.warn(warning);\n    }\n}\n\n/**\n * prevent deprecation warn calls during action\n * @param action to be called with no deprecation warnings\n * @returns return value of action\n */\nexport function ignoreDeprecationWarn<T extends () => any>(action: T): ReturnType<T> {\n    isWarnOn = false;\n    try {\n        return action();\n    } finally {\n        isWarnOn = true;\n    }\n}\n", "import type * as postcss from 'postcss';\nimport type { FeatureContext } from './features';\nimport type { Diagnostics } from './diagnostics';\nimport type { SelectorList } from '@tokey/css-selector-parser';\nimport type { PlugableRecord } from './helpers/plugable-record';\nimport type { StylableExports } from './stylable-transformer';\nimport { getSourcePath } from './stylable-utils';\nimport {\n    STSymbol,\n    STImport,\n    STNamespace,\n    STGlobal,\n    STScope,\n    STVar,\n    STCustomSelector,\n    STCustomState,\n    STMixin,\n    CSSClass,\n    CSSType,\n    CSSPseudoClass,\n    CSSCustomProperty,\n    CSSKeyframes,\n    CSSLayer,\n    CSSContains,\n    STStructure,\n} from './features';\nimport type { FeatureFlags } from './features/feature';\n\nconst features = [\n    STSymbol,\n    STImport,\n    STNamespace,\n    STGlobal,\n    STScope,\n    STVar,\n    STCustomSelector,\n    STCustomState,\n    STMixin,\n    CSSClass,\n    CSSType,\n    CSSPseudoClass,\n    CSSCustomProperty,\n    CSSKeyframes,\n    CSSLayer,\n    CSSContains,\n    STStructure,\n];\n\nexport class StylableMeta {\n    public exports?: StylableExports;\n    public data: PlugableRecord = {};\n    public root = '';\n    public source: string = getSourcePath(this.sourceAst, this.diagnostics);\n    public type: 'stylable' | 'css' = this.source.endsWith('.st.css') ? 'stylable' : 'css';\n    public namespace = '';\n    public urls: string[] = [];\n    public transformCssDepth: { cssDepth: number; deepDependencies: Set<string> } | undefined;\n    public transformDiagnostics: Diagnostics | null = null;\n    public transformedScopes: Record<string, SelectorList> | null = null;\n    /** @deprecated */\n    public scopes: postcss.AtRule[] = [];\n    // Generated during transform\n    public targetAst?: postcss.Root;\n    public globals: Record<string, boolean> = {};\n    constructor(\n        public sourceAst: postcss.Root,\n        public diagnostics: Diagnostics,\n        public flags: FeatureFlags\n    ) {\n        // initiate features\n        const context: FeatureContext = { meta: this, diagnostics };\n        for (const { hooks } of features) {\n            hooks.metaInit(context);\n        }\n    }\n    getSymbol(name: string) {\n        return STSymbol.get(this, name);\n    }\n    getAllSymbols() {\n        return STSymbol.getAll(this);\n    }\n    getClass(name: string) {\n        return CSSClass.get(this, name);\n    }\n    getAllClasses() {\n        return CSSClass.getAll(this);\n    }\n    getTypeElement(name: string) {\n        return CSSType.get(this, name);\n    }\n    getAllTypeElements() {\n        return CSSType.getAll(this);\n    }\n    getImportStatements() {\n        return STImport.getImportStatements(this);\n    }\n    getStVar(name: string) {\n        return STSymbol.get(this, name, `var`);\n    }\n    getAllStVars() {\n        return STSymbol.getAllByType(this, `var`);\n    }\n}\n", "import type * as postcss from 'postcss';\nimport { Diagnostics } from './diagnostics';\nimport { knownPseudoClassesWithNestedSelectors } from './native-reserved-lists';\nimport { StylableMeta } from './stylable-meta';\nimport { CSSCustomProperty, STVar, STCustomSelector } from './features';\nimport { generalDiagnostics } from './features/diagnostics';\nimport {\n    FeatureContext,\n    STSymbol,\n    STImport,\n    STNamespace,\n    STGlobal,\n    STScope,\n    CSSClass,\n    CSSType,\n    CSSKeyframes,\n    CSSLayer,\n    CSSContains,\n    STStructure,\n} from './features';\nimport { processDeclarationFunctions } from './process-declaration-functions';\nimport {\n    walkSelector,\n    isInPseudoClassContext,\n    parseSelectorWithCache,\n    stringifySelector,\n} from './helpers/selector';\nimport { isChildOfAtRule } from './helpers/rule';\nimport { defaultFeatureFlags, type FeatureFlags } from './features/feature';\n\nexport class StylableProcessor implements FeatureContext {\n    public meta!: StylableMeta;\n    constructor(\n        public diagnostics = new Diagnostics(),\n        private resolveNamespace = STNamespace.defaultProcessNamespace,\n        public flags: FeatureFlags = { ...defaultFeatureFlags }\n    ) {}\n    public process(root: postcss.Root): StylableMeta {\n        this.meta = new StylableMeta(root, this.diagnostics, this.flags);\n\n        STStructure.hooks.analyzeInit(this);\n        STImport.hooks.analyzeInit(this);\n        CSSCustomProperty.hooks.analyzeInit(this);\n\n        this.handleAtRules(root);\n\n        root.walkRules((rule) => {\n            if (!isChildOfAtRule(rule, 'keyframes')) {\n                this.handleRule(rule, {\n                    isScoped: isChildOfAtRule(rule, `st-scope`),\n                    reportUnscoped: true,\n                });\n            }\n        });\n\n        const isStylable = this.meta.type === 'stylable';\n        root.walkDecls((decl) => {\n            const parent = decl.parent as postcss.ChildNode;\n            if (parent.type === 'rule' && parent.selector === ':vars' && isStylable) {\n                // ToDo: remove once\n                // - custom property definition is allowed in var value\n                // - url collection is removed from st-var\n                return;\n            }\n            CSSClass.hooks.analyzeDeclaration({ context: this, decl });\n            CSSCustomProperty.hooks.analyzeDeclaration({ context: this, decl });\n            CSSContains.hooks.analyzeDeclaration({ context: this, decl });\n\n            this.collectUrls(decl);\n        });\n        STNamespace.hooks.analyzeDone(this);\n        STCustomSelector.hooks.analyzeDone(this);\n        STStructure.hooks.analyzeDone(this);\n\n        STNamespace.setMetaNamespace(this, this.resolveNamespace);\n\n        STSymbol.reportRedeclare(this);\n\n        return this.meta;\n    }\n\n    protected handleAtRules(root: postcss.Root) {\n        const analyzeRule = (\n            rule: postcss.Rule,\n            {\n                isScoped,\n                originalNode,\n            }: { isScoped: boolean; originalNode: postcss.AtRule | postcss.Rule }\n        ) => {\n            return this.handleRule(rule, {\n                isScoped,\n                originalNode,\n                reportUnscoped: false,\n            });\n        };\n\n        root.walkAtRules((atRule) => {\n            switch (atRule.name) {\n                case 'st-import': {\n                    STImport.hooks.analyzeAtRule({\n                        context: this,\n                        atRule,\n                        analyzeRule,\n                    });\n                    break;\n                }\n                case 'namespace':\n                case 'st-namespace': {\n                    STNamespace.hooks.analyzeAtRule({\n                        context: this,\n                        atRule,\n                        analyzeRule,\n                    });\n                    break;\n                }\n                case 'keyframes':\n                    CSSKeyframes.hooks.analyzeAtRule({\n                        context: this,\n                        atRule,\n                        analyzeRule,\n                    });\n                    break;\n                case 'layer':\n                    CSSLayer.hooks.analyzeAtRule({\n                        context: this,\n                        atRule,\n                        analyzeRule,\n                    });\n                    break;\n                case 'import':\n                    STImport.hooks.analyzeAtRule({\n                        context: this,\n                        atRule,\n                        analyzeRule,\n                    });\n                    CSSLayer.hooks.analyzeAtRule({\n                        context: this,\n                        atRule,\n                        analyzeRule,\n                    });\n                    break;\n                case 'custom-selector': {\n                    STCustomSelector.hooks.analyzeAtRule({\n                        context: this,\n                        atRule,\n                        analyzeRule,\n                    });\n                    break;\n                }\n                case 'st-scope':\n                    STScope.hooks.analyzeAtRule({ context: this, atRule, analyzeRule });\n                    break;\n                case 'property':\n                case 'st-global-custom-property': {\n                    CSSCustomProperty.hooks.analyzeAtRule({\n                        context: this,\n                        atRule,\n                        analyzeRule,\n                    });\n                    break;\n                }\n                case 'container': {\n                    CSSContains.hooks.analyzeAtRule({\n                        context: this,\n                        atRule,\n                        analyzeRule,\n                    });\n                    break;\n                }\n                case 'st': {\n                    STStructure.hooks.analyzeAtRule({\n                        context: this,\n                        atRule,\n                        analyzeRule,\n                    });\n                    break;\n                }\n            }\n        });\n    }\n    private collectUrls(decl: postcss.Declaration) {\n        processDeclarationFunctions(\n            decl,\n            (node) => {\n                if (node.type === 'url') {\n                    this.meta.urls.push(node.url);\n                }\n            },\n            false\n        );\n    }\n    protected handleRule(\n        rule: postcss.Rule,\n        {\n            isScoped,\n            reportUnscoped,\n            originalNode = rule,\n        }: {\n            isScoped: boolean;\n            reportUnscoped: boolean;\n            originalNode?: postcss.AtRule | postcss.Rule;\n        }\n    ) {\n        const selectorAst = parseSelectorWithCache(rule.selector);\n\n        let locallyScoped = isScoped;\n        let topSelectorIndex = -1;\n        walkSelector(selectorAst, (node, ...nodeContext) => {\n            const [index, nodes, parents] = nodeContext;\n            const type = node.type;\n            if (type === 'selector' && !isInPseudoClassContext(parents)) {\n                // reset scope check between top level selectors\n                locallyScoped = isScoped;\n                topSelectorIndex++;\n            }\n\n            const walkSkip = STGlobal.hooks.analyzeSelectorNode({\n                context: this,\n                node,\n                topSelectorIndex,\n                rule,\n                originalNode,\n                walkContext: nodeContext,\n            });\n            if (walkSkip !== undefined) {\n                return walkSkip;\n            }\n\n            if (node.type === 'pseudo_class') {\n                if (node.value === 'import') {\n                    STImport.hooks.analyzeSelectorNode({\n                        context: this,\n                        node,\n                        topSelectorIndex,\n                        rule,\n                        originalNode,\n                        walkContext: nodeContext,\n                    });\n                } else if (node.value === 'vars') {\n                    return STVar.hooks.analyzeSelectorNode({\n                        context: this,\n                        node,\n                        topSelectorIndex,\n                        rule,\n                        originalNode,\n                        walkContext: nodeContext,\n                    });\n                } else if (node.value.startsWith('--')) {\n                    // ToDo: move to css-class feature\n                    locallyScoped =\n                        locallyScoped ||\n                        STCustomSelector.isScoped(this.meta, node.value.slice(2)) ||\n                        false;\n                } else if (!knownPseudoClassesWithNestedSelectors.includes(node.value)) {\n                    return walkSelector.skipNested;\n                }\n            } else if (node.type === 'class') {\n                CSSClass.hooks.analyzeSelectorNode({\n                    context: this,\n                    node,\n                    topSelectorIndex,\n                    rule,\n                    originalNode,\n                    walkContext: nodeContext,\n                });\n\n                locallyScoped = CSSClass.validateClassScoping({\n                    context: this,\n                    classSymbol: CSSClass.get(this.meta, node.value)!,\n                    locallyScoped,\n                    reportUnscoped,\n                    node,\n                    nodes,\n                    index,\n                    rule,\n                });\n            } else if (node.type === 'type') {\n                CSSType.hooks.analyzeSelectorNode({\n                    context: this,\n                    node,\n                    topSelectorIndex,\n                    rule,\n                    originalNode,\n                    walkContext: nodeContext,\n                });\n\n                locallyScoped = CSSType.validateTypeScoping({\n                    context: this,\n                    locallyScoped,\n                    reportUnscoped,\n                    node,\n                    nodes,\n                    index,\n                    rule,\n                });\n            } else if (node.type === `id`) {\n                if (node.nodes) {\n                    this.diagnostics.report(\n                        generalDiagnostics.INVALID_FUNCTIONAL_SELECTOR(`#` + node.value, `id`),\n                        {\n                            node: rule,\n                            word: stringifySelector(node),\n                        }\n                    );\n                }\n            } else if (node.type === `attribute`) {\n                if (node.nodes) {\n                    this.diagnostics.report(\n                        generalDiagnostics.INVALID_FUNCTIONAL_SELECTOR(\n                            `[${node.value}]`,\n                            `attribute`\n                        ),\n                        {\n                            node: rule,\n                            word: stringifySelector(node),\n                        }\n                    );\n                }\n            } else if (node.type === `nesting`) {\n                if (node.nodes) {\n                    this.diagnostics.report(\n                        generalDiagnostics.INVALID_FUNCTIONAL_SELECTOR(node.value, `nesting`),\n                        {\n                            node: rule,\n                            word: stringifySelector(node),\n                        }\n                    );\n                }\n            }\n            return;\n        });\n        STGlobal.hooks.analyzeSelectorDone({\n            context: this,\n            rule,\n            originalNode,\n        });\n        return locallyScoped;\n    }\n}\n\n// ToDo: remove export and reroute import from feature\nexport const processNamespace = STNamespace.defaultProcessNamespace;\n", "import { cachedProcessFile, CacheItem, MinimalFS } from './cached-process-file';\nimport { cssParse, CssParser } from './parser';\nimport { processNamespace, StylableProcessor } from './stylable-processor';\nimport type { StylableMeta } from './stylable-meta';\nimport type { Diagnostics } from './diagnostics';\nimport { defaultFeatureFlags, type FeatureFlags } from './features/feature';\n\nexport function createStylableFileProcessor({\n    fileSystem,\n    onProcess,\n    resolveNamespace,\n    cssParser = cssParse,\n    cache,\n    createDiagnostics,\n    flags = { ...defaultFeatureFlags },\n}: {\n    fileSystem: MinimalFS;\n    flags?: FeatureFlags;\n    onProcess?: (meta: StylableMeta, path: string) => StylableMeta;\n    resolveNamespace?: typeof processNamespace;\n    cssParser?: CssParser;\n    cache?: Record<string, CacheItem<StylableMeta>>;\n    createDiagnostics?: (from: string) => Diagnostics;\n}) {\n    return cachedProcessFile<StylableMeta>(\n        (from, content) => {\n            return new StylableProcessor(\n                createDiagnostics?.(from),\n                resolveNamespace,\n                flags\n            ).process(cssParser(content, { from }));\n        },\n        (resolvedPath: string) => {\n            return fileSystem.readFileSync(resolvedPath, 'utf8');\n        },\n        onProcess && [onProcess],\n        cache\n    );\n}\n", "import isVendorPrefixed from 'is-vendor-prefixed';\nimport * as postcss from 'postcss';\nimport type { FileProcessor } from './cached-process-file';\nimport { createDiagnosticReporter, Diagnostics } from './diagnostics';\nimport { StylableEvaluator } from './functions';\nimport { nativePseudoElements } from './native-reserved-lists';\nimport {\n    cloneSelector,\n    createCombinatorSelector,\n    parseSelectorWithCache,\n    stringifySelector,\n} from './helpers/selector';\nimport { isEqual } from './helpers/eql';\nimport {\n    SelectorNode,\n    Selector,\n    SelectorList,\n    groupCompoundSelectors,\n    CompoundSelector,\n    splitCompoundSelectors,\n    ImmutableSelectorNode,\n} from '@tokey/css-selector-parser';\nimport { isChildOfAtRule } from './helpers/rule';\nimport { getOriginDefinition } from './helpers/resolve';\nimport {\n    ClassSymbol,\n    CSSContains,\n    CSSMedia,\n    ElementSymbol,\n    FeatureTransformContext,\n    STNamespace,\n    STStructure,\n    STImport,\n    STGlobal,\n    STScope,\n    STCustomSelector,\n    STVar,\n    STMixin,\n    CSSClass,\n    CSSType,\n    CSSPseudoClass,\n    CSSKeyframes,\n    CSSLayer,\n    CSSCustomProperty,\n} from './features';\nimport type { StylableMeta } from './stylable-meta';\nimport {\n    CSSResolve,\n    StylableResolverCache,\n    StylableResolver,\n    createSymbolResolverWithCache,\n} from './stylable-resolver';\nimport { validateCustomPropertyName } from './helpers/css-custom-property';\nimport type { ModuleResolver } from './types';\nimport { getRuleScopeSelector } from './deprecated/postcss-ast-extension';\nimport type { MappedStates } from './helpers/custom-state';\n\nexport interface ResolvedElement {\n    name: string;\n    type: string;\n    resolved: Array<CSSResolve<ClassSymbol | ElementSymbol>>;\n}\n\nexport type RuntimeStVar = string | { [key: string]: RuntimeStVar } | RuntimeStVar[];\n\nexport interface StylableExports {\n    classes: Record<string, string>;\n    vars: Record<string, string>;\n    stVars: Record<string, RuntimeStVar>;\n    keyframes: Record<string, string>;\n    layers: Record<string, string>;\n    containers: Record<string, string>;\n}\n\nexport interface StylableResults {\n    meta: StylableMeta;\n    exports: StylableExports;\n}\n\nexport type replaceValueHook = (\n    value: string,\n    name: string | { name: string; args: string[] },\n    isLocal: boolean,\n    passedThrough: string[]\n) => string;\n\nexport type postProcessor<T = {}> = (\n    stylableResults: StylableResults,\n    transformer: StylableTransformer\n) => StylableResults & T;\n\nexport interface TransformHooks {\n    postProcessor?: postProcessor;\n    replaceValueHook?: replaceValueHook;\n}\n\ntype EnvMode = 'production' | 'development';\n\nexport interface TransformerOptions {\n    fileProcessor: FileProcessor<StylableMeta>;\n    moduleResolver: ModuleResolver;\n    requireModule: (modulePath: string) => any;\n    diagnostics: Diagnostics;\n    keepValues?: boolean;\n    replaceValueHook?: replaceValueHook;\n    postProcessor?: postProcessor;\n    mode?: EnvMode;\n    resolverCache?: StylableResolverCache;\n    stVarOverride?: Record<string, string>;\n    experimentalSelectorInference?: boolean;\n}\n\nexport const transformerDiagnostics = {\n    UNKNOWN_PSEUDO_ELEMENT: createDiagnosticReporter(\n        '12001',\n        'error',\n        (name: string) => `unknown pseudo element \"${name}\"`\n    ),\n};\n\ntype PostcssContainer = postcss.Container<postcss.ChildNode> | postcss.Document;\n\nexport class StylableTransformer {\n    public fileProcessor: FileProcessor<StylableMeta>;\n    public diagnostics: Diagnostics;\n    public resolver: StylableResolver;\n    public keepValues: boolean;\n    public replaceValueHook: replaceValueHook | undefined;\n    public postProcessor: postProcessor | undefined;\n    public mode: EnvMode;\n    private defaultStVarOverride: Record<string, string>;\n    private evaluator: StylableEvaluator;\n    public getResolvedSymbols: ReturnType<typeof createSymbolResolverWithCache>;\n    private directiveNodes: postcss.Declaration[] = [];\n    public experimentalSelectorInference: boolean;\n    public containerInferredSelectorMap = new Map<PostcssContainer, InferredSelector>();\n    constructor(options: TransformerOptions) {\n        this.diagnostics = options.diagnostics;\n        this.keepValues = options.keepValues || false;\n        this.fileProcessor = options.fileProcessor;\n        this.replaceValueHook = options.replaceValueHook;\n        this.postProcessor = options.postProcessor;\n        this.experimentalSelectorInference = options.experimentalSelectorInference === true;\n        this.resolver = new StylableResolver(\n            options.fileProcessor,\n            options.requireModule,\n            options.moduleResolver,\n            options.resolverCache || new Map()\n        );\n        this.mode = options.mode || 'production';\n        this.defaultStVarOverride = options.stVarOverride || {};\n        this.getResolvedSymbols = createSymbolResolverWithCache(this.resolver, this.diagnostics);\n        this.evaluator = new StylableEvaluator({\n            valueHook: this.replaceValueHook,\n            getResolvedSymbols: this.getResolvedSymbols,\n        });\n    }\n    public transform(meta: StylableMeta): StylableResults {\n        meta.exports = {\n            classes: {},\n            vars: {},\n            stVars: {},\n            keyframes: {},\n            layers: {},\n            containers: {},\n        };\n        meta.transformedScopes = null;\n        meta.targetAst = meta.sourceAst.clone();\n        const context = {\n            meta,\n            diagnostics: this.diagnostics,\n            resolver: this.resolver,\n            evaluator: this.evaluator,\n            getResolvedSymbols: this.getResolvedSymbols,\n        };\n        STImport.hooks.transformInit({ context });\n        STGlobal.hooks.transformInit({ context });\n        STVar.hooks.transformInit({ context });\n        if (!this.experimentalSelectorInference) {\n            meta.transformedScopes = validateScopes(this, meta);\n        }\n        this.transformAst(meta.targetAst, meta, meta.exports);\n        meta.transformDiagnostics = this.diagnostics;\n        const result = { meta, exports: meta.exports };\n\n        return this.postProcessor ? this.postProcessor(result, this) : result;\n    }\n    public transformAst(\n        ast: postcss.Root,\n        meta: StylableMeta,\n        metaExports?: StylableExports,\n        stVarOverride: Record<string, string> = this.defaultStVarOverride,\n        path: string[] = [],\n        mixinTransform = false,\n        inferredSelectorMixin?: InferredSelector\n    ) {\n        if (meta.type !== 'stylable') {\n            return;\n        }\n        const { evaluator } = this;\n\n        const prevStVarOverride = evaluator.stVarOverride;\n        evaluator.stVarOverride = stVarOverride;\n\n        const transformContext = {\n            meta,\n            diagnostics: this.diagnostics,\n            resolver: this.resolver,\n            evaluator,\n            getResolvedSymbols: this.getResolvedSymbols,\n            passedThrough: path.slice(),\n            inferredSelectorMixin,\n        };\n        const transformResolveOptions = {\n            context: transformContext,\n        };\n        prepareAST(transformContext, ast, this.experimentalSelectorInference);\n\n        const cssClassResolve = CSSClass.hooks.transformResolve(transformResolveOptions);\n        const stVarResolve = STVar.hooks.transformResolve(transformResolveOptions);\n        const keyframesResolve = CSSKeyframes.hooks.transformResolve(transformResolveOptions);\n        const layerResolve = CSSLayer.hooks.transformResolve(transformResolveOptions);\n        const containsResolve = CSSContains.hooks.transformResolve(transformResolveOptions);\n        const cssVarsMapping = CSSCustomProperty.hooks.transformResolve(transformResolveOptions);\n\n        const handleAtRule = (atRule: postcss.AtRule) => {\n            const { name } = atRule;\n            if (name === 'media') {\n                CSSMedia.hooks.transformAtRuleNode({\n                    context: transformContext,\n                    atRule,\n                    resolved: {},\n                    transformer: this,\n                });\n            } else if (name === 'property') {\n                CSSCustomProperty.hooks.transformAtRuleNode({\n                    context: transformContext,\n                    atRule,\n                    resolved: cssVarsMapping,\n                    transformer: this,\n                });\n            } else if (name === 'keyframes') {\n                CSSKeyframes.hooks.transformAtRuleNode({\n                    context: transformContext,\n                    atRule,\n                    resolved: keyframesResolve,\n                    transformer: this,\n                });\n            } else if (name === 'layer') {\n                CSSLayer.hooks.transformAtRuleNode({\n                    context: transformContext,\n                    atRule,\n                    resolved: layerResolve,\n                    transformer: this,\n                });\n            } else if (name === 'import') {\n                CSSLayer.hooks.transformAtRuleNode({\n                    context: transformContext,\n                    atRule,\n                    resolved: layerResolve,\n                    transformer: this,\n                });\n            } else if (name === 'container') {\n                CSSContains.hooks.transformAtRuleNode({\n                    context: transformContext,\n                    atRule,\n                    resolved: containsResolve,\n                    transformer: this,\n                });\n            } else if (name === 'st-scope') {\n                STScope.hooks.transformAtRuleNode({\n                    context: transformContext,\n                    atRule,\n                    resolved: containsResolve,\n                    transformer: this,\n                });\n            } else if (name === 'custom-selector') {\n                STCustomSelector.hooks.transformAtRuleNode({\n                    context: transformContext,\n                    atRule,\n                    resolved: containsResolve,\n                    transformer: this,\n                });\n            }\n        };\n        const handleDeclaration = (decl: postcss.Declaration) => {\n            if (validateCustomPropertyName(decl.prop)) {\n                CSSCustomProperty.hooks.transformDeclaration({\n                    context: transformContext,\n                    decl,\n                    resolved: cssVarsMapping,\n                });\n            } else if (decl.prop === `animation` || decl.prop === `animation-name`) {\n                CSSKeyframes.hooks.transformDeclaration({\n                    context: transformContext,\n                    decl,\n                    resolved: keyframesResolve,\n                });\n            } else if (decl.prop === 'container' || decl.prop === 'container-name') {\n                CSSContains.hooks.transformDeclaration({\n                    context: transformContext,\n                    decl,\n                    resolved: containsResolve,\n                });\n            }\n\n            if (decl.prop.startsWith('-st-')) {\n                if (this.mode === 'production') {\n                    this.directiveNodes.push(decl);\n                }\n                return;\n            }\n\n            decl.value = this.evaluator.evaluateValue(transformContext, {\n                value: decl.value,\n                meta,\n                node: decl,\n                cssVarsMapping,\n            }).outputValue;\n        };\n\n        ast.walk((node) => {\n            if (node.type === 'rule') {\n                if (isChildOfAtRule(node, 'keyframes')) {\n                    return;\n                }\n                // get context inferred selector\n                let currentParent: PostcssContainer | undefined = node.parent;\n                while (currentParent && !this.containerInferredSelectorMap.has(currentParent)) {\n                    currentParent = currentParent.parent;\n                }\n                // transform selector\n                const { selector, inferredSelector } = this.scopeSelector(\n                    meta,\n                    node.selector,\n                    node,\n                    currentParent && this.containerInferredSelectorMap.get(currentParent),\n                    inferredSelectorMixin\n                );\n                // save results\n                this.containerInferredSelectorMap.set(node, inferredSelector);\n                node.selector = selector;\n            } else if (node.type === 'atrule') {\n                handleAtRule(node);\n            } else if (node.type === 'decl') {\n                handleDeclaration(node);\n            }\n        });\n\n        if (!mixinTransform && meta.targetAst && this.mode === 'development') {\n            CSSClass.addDevRules(transformContext);\n        }\n\n        const lastPassParams = {\n            context: transformContext,\n            ast,\n            transformer: this,\n            cssVarsMapping,\n            path,\n        };\n        if (this.experimentalSelectorInference) {\n            STScope.hooks.transformLastPass(lastPassParams);\n        }\n        STMixin.hooks.transformLastPass(lastPassParams);\n        if (!mixinTransform) {\n            STGlobal.hooks.transformLastPass(lastPassParams);\n            for (const node of this.directiveNodes) {\n                node.remove();\n            }\n        }\n\n        if (metaExports) {\n            CSSClass.hooks.transformJSExports({\n                exports: metaExports,\n                resolved: cssClassResolve,\n            });\n            STVar.hooks.transformJSExports({\n                exports: metaExports,\n                resolved: stVarResolve,\n            });\n            CSSKeyframes.hooks.transformJSExports({\n                exports: metaExports,\n                resolved: keyframesResolve,\n            });\n            CSSLayer.hooks.transformJSExports({\n                exports: metaExports,\n                resolved: layerResolve,\n            });\n            CSSContains.hooks.transformJSExports({\n                exports: metaExports,\n                resolved: containsResolve,\n            });\n            CSSCustomProperty.hooks.transformJSExports({\n                exports: metaExports,\n                resolved: cssVarsMapping,\n            });\n        }\n\n        // restore evaluator state\n        this.evaluator.stVarOverride = prevStVarOverride;\n    }\n    public resolveSelectorElements(meta: StylableMeta, selector: string): ResolvedElement[][] {\n        return this.scopeSelector(meta, selector).elements;\n    }\n    public scopeSelector(\n        originMeta: StylableMeta,\n        selector: string,\n        selectorNode?: postcss.Rule | postcss.AtRule,\n        inferredNestSelector?: InferredSelector,\n        inferredMixinSelector?: InferredSelector,\n        unwrapGlobals = false\n    ): {\n        selector: string;\n        elements: ResolvedElement[][];\n        targetSelectorAst: SelectorList;\n        inferredSelector: InferredSelector;\n    } {\n        const context = this.createSelectorContext(\n            originMeta,\n            parseSelectorWithCache(selector, { clone: true }),\n            selectorNode || postcss.rule({ selector }),\n            selector,\n            inferredNestSelector,\n            inferredMixinSelector\n        );\n        const targetSelectorAst = this.scopeSelectorAst(context);\n        if (unwrapGlobals) {\n            STGlobal.unwrapPseudoGlobals(targetSelectorAst);\n        }\n        return {\n            targetSelectorAst,\n            selector: stringifySelector(targetSelectorAst),\n            elements: context.elements,\n            inferredSelector: context.inferredMultipleSelectors,\n        };\n    }\n    public createSelectorContext(\n        meta: StylableMeta,\n        selectorAst: SelectorList,\n        selectorNode: postcss.Rule | postcss.AtRule,\n        selectorStr?: string,\n        selectorNest?: InferredSelector,\n        selectorMixin?: InferredSelector\n    ) {\n        return new ScopeContext(\n            meta,\n            this.resolver,\n            selectorAst,\n            selectorNode,\n            this.scopeSelectorAst.bind(this),\n            this,\n            selectorNest,\n            selectorMixin,\n            undefined,\n            selectorStr\n        );\n    }\n    public createInferredSelector(\n        meta: StylableMeta,\n        { name, type }: { name: string; type: 'class' | 'element' }\n    ) {\n        const resolvedSymbols = this.getResolvedSymbols(meta);\n        const resolved = resolvedSymbols[type][name];\n        return new InferredSelector(this, resolved);\n    }\n    public scopeSelectorAst(context: ScopeContext): SelectorList {\n        // group compound selectors: .a.b .c:hover, a .c:hover -> [[[.a.b], [.c:hover]], [[.a], [.c:hover]]]\n        const selectorList = groupCompoundSelectors(context.selectorAst);\n        // loop over selectors\n        for (const selector of selectorList) {\n            context.elements.push([]);\n            context.selectorIndex++;\n            context.selector = selector;\n            // loop over nodes\n            for (const node of [...selector.nodes]) {\n                if (node.type !== `compound_selector`) {\n                    if (node.type === 'combinator') {\n                        if (this.experimentalSelectorInference || context.isNested) {\n                            context.setNextSelectorScope(context.inferredSelectorContext, node);\n                        }\n                    }\n                    continue;\n                }\n                context.compoundSelector = node;\n                // loop over each node in a compound selector\n                for (const compoundNode of node.nodes) {\n                    if (compoundNode.type === 'universal' && this.experimentalSelectorInference) {\n                        context.setNextSelectorScope(\n                            [\n                                {\n                                    _kind: 'css',\n                                    meta: context.originMeta,\n                                    symbol: CSSType.createSymbol({ name: '*' }),\n                                },\n                            ],\n                            node\n                        );\n                    }\n                    context.node = compoundNode;\n                    // transform node\n                    this.handleCompoundNode(context as Required<ScopeContext>);\n                }\n            }\n            // add inferred selector end to multiple selector\n            context.inferredMultipleSelectors.add(context.inferredSelector);\n            if (selectorList.length - 1 > context.selectorIndex) {\n                // reset current anchor for all except last selector\n                context.inferredSelector = new InferredSelector(\n                    this,\n                    context.inferredSelectorStart\n                );\n            }\n        }\n        // backwards compatibility for elements - empty selector still have an empty first target\n        if (selectorList.length === 0) {\n            context.elements.push([]);\n        }\n        const targetAst = splitCompoundSelectors(selectorList);\n        context.splitSelectors.duplicateSelectors(targetAst);\n        for (let i = 0; i < targetAst.length; i++) {\n            context.selectorAst[i] = targetAst[i];\n        }\n        return targetAst;\n    }\n    private handleCompoundNode(context: Required<ScopeContext>) {\n        const { inferredSelector, node, originMeta } = context;\n        const transformerContext = {\n            meta: originMeta,\n            diagnostics: this.diagnostics,\n            resolver: this.resolver,\n            evaluator: this.evaluator,\n            getResolvedSymbols: this.getResolvedSymbols,\n        };\n        if (node.type === 'class') {\n            CSSClass.hooks.transformSelectorNode({\n                context: transformerContext,\n                selectorContext: context,\n                node,\n            });\n        } else if (node.type === 'type') {\n            CSSType.hooks.transformSelectorNode({\n                context: transformerContext,\n                selectorContext: context,\n                node,\n            });\n        } else if (node.type === 'pseudo_element') {\n            if (node.value === ``) {\n                // partial psuedo elemennt: `.x::`\n                // ToDo: currently the transformer corrects the css without warning,\n                // should stylable warn?\n                return;\n            }\n            const inferredElement = inferredSelector.getPseudoElements({\n                isFirstInSelector: context.isFirstInSelector(node),\n                name: node.value,\n                experimentalSelectorInference: this.experimentalSelectorInference,\n            })[node.value];\n            if (inferredElement) {\n                context.setNextSelectorScope(inferredElement.inferred, node, node.value);\n                if (context.transform) {\n                    context.transformIntoMultiSelector(node, inferredElement.selectors);\n                }\n            } else {\n                // first definition of a part in the extends/alias chain\n                context.setNextSelectorScope([], node, node.value);\n\n                if (\n                    !nativePseudoElements.includes(node.value) &&\n                    !isVendorPrefixed(node.value) &&\n                    !context.isDuplicateStScopeDiagnostic()\n                ) {\n                    this.diagnostics.report(\n                        transformerDiagnostics.UNKNOWN_PSEUDO_ELEMENT(node.value),\n                        {\n                            node: context.ruleOrAtRule,\n                            word: node.value,\n                        }\n                    );\n                }\n            }\n        } else if (node.type === 'pseudo_class') {\n            const isCustomSelector = STCustomSelector.hooks.transformSelectorNode({\n                context: transformerContext,\n                selectorContext: context,\n                node,\n            });\n            if (!isCustomSelector) {\n                CSSPseudoClass.hooks.transformSelectorNode({\n                    context: transformerContext,\n                    selectorContext: context,\n                    node,\n                });\n            }\n        } else if (node.type === `nesting`) {\n            context.setNextSelectorScope(context.inferredSelectorNest, node, node.value);\n        } else if (node.type === 'attribute') {\n            STMixin.hooks.transformSelectorNode({\n                context: transformerContext,\n                selectorContext: context,\n                node,\n            });\n        }\n    }\n}\n\nfunction validateScopes(transformer: StylableTransformer, meta: StylableMeta) {\n    const transformedScopes: Record<string, SelectorList> = {};\n    for (const scope of meta.scopes) {\n        const len = transformer.diagnostics.reports.length;\n        const rule = postcss.rule({ selector: scope.params });\n\n        const context = transformer.createSelectorContext(\n            meta,\n            parseSelectorWithCache(rule.selector, { clone: true }),\n            rule,\n            rule.selector\n        );\n        transformedScopes[rule.selector] = groupCompoundSelectors(\n            transformer.scopeSelectorAst(context)\n        );\n        const ruleReports = transformer.diagnostics.reports.splice(len);\n\n        for (const { code, message, severity, word } of ruleReports) {\n            transformer.diagnostics.report(\n                {\n                    code,\n                    message,\n                    severity,\n                },\n                {\n                    node: scope,\n                    word: word || scope.params,\n                }\n            );\n        }\n    }\n\n    return transformedScopes;\n}\n\nfunction removeInitialCompoundMarker(\n    selector: Selector,\n    meta: StylableMeta,\n    structureMode: boolean\n) {\n    let hadCompoundStart = false;\n    const compoundedSelector = groupCompoundSelectors(selector);\n    const first = compoundedSelector.nodes.find(\n        ({ type }) => type === `compound_selector`\n    ) as CompoundSelector;\n    if (first) {\n        const matchNode = structureMode\n            ? (node: SelectorNode) => node.type === 'nesting'\n            : (node: SelectorNode) => node.type === 'class' && node.value === meta.root;\n        for (let i = 0; i < first.nodes.length; i++) {\n            const node = first.nodes[i];\n            if (node.type === 'comment') {\n                continue;\n            }\n            if (matchNode(node)) {\n                hadCompoundStart = true;\n                first.nodes.splice(i, 1);\n            }\n            break;\n        }\n    }\n    return { selector: splitCompoundSelectors(compoundedSelector), hadCompoundStart };\n}\n\ntype SelectorSymbol = ClassSymbol | ElementSymbol | STStructure.PartSymbol;\ntype InferredResolve = CSSResolve<SelectorSymbol>;\ntype InferredPseudoElement = {\n    inferred: InferredSelector;\n    selectors: SelectorList;\n};\ntype InferredPseudoClass = {\n    meta: StylableMeta;\n    state: MappedStates[string];\n};\nexport class InferredSelector {\n    protected resolveSet = new Set<InferredResolve[]>();\n    constructor(\n        private api: Pick<\n            StylableTransformer,\n            | 'getResolvedSymbols'\n            | 'createSelectorContext'\n            | 'scopeSelectorAst'\n            | 'createInferredSelector'\n        >,\n        resolve?: InferredResolve[] | InferredSelector\n    ) {\n        if (resolve) {\n            this.add(resolve);\n        }\n    }\n    public isEmpty() {\n        return this.resolveSet.size === 0;\n    }\n    public set(resolve: InferredResolve[] | InferredSelector) {\n        if (resolve === this) {\n            return;\n        }\n        this.resolveSet.clear();\n        this.add(resolve);\n    }\n    public clone() {\n        return new InferredSelector(this.api, this);\n    }\n    /**\n     * Adds to the set of inferred resolved CSS\n     * Assumes passes CSSResolved from the same meta/symbol are\n     * the same from the same cached transform process to dedupe them.\n     */\n    public add(resolve: InferredResolve[] | InferredSelector) {\n        if (resolve instanceof InferredSelector) {\n            resolve.resolveSet.forEach((resolve) => this.add(resolve));\n        } else {\n            this.resolveSet.add(resolve);\n        }\n    }\n    /**\n     * Takes a CSS part resolve and use it extend the current set of inferred resolved.\n     * Used to expand the resolved mapped selector with the part definition\n     * e.g. part can add nested states/parts that override the inferred mapped selector.\n     */\n    private addPartOverride(partResolve: CSSResolve<STStructure.PartSymbol>) {\n        const newSet = new Set<InferredResolve[]>();\n        for (const resolve of this.resolveSet) {\n            newSet.add([partResolve, ...resolve]);\n        }\n        if (!this.resolveSet.size) {\n            newSet.add([partResolve]);\n        }\n        this.resolveSet = newSet;\n    }\n    public getPseudoClasses({ name: searchedName }: { name?: string } = {}) {\n        const collectedStates: Record<string, InferredPseudoClass> = {};\n        const resolvedCount: Record<string, number> = {};\n        const expectedIntersectionCount = this.resolveSet.size; // ToDo: dec for any types\n        const addInferredState = (\n            name: string,\n            meta: StylableMeta,\n            state: MappedStates[string]\n        ) => {\n            const existing = collectedStates[name];\n            if (!existing) {\n                collectedStates[name] = { meta, state };\n                resolvedCount[name] = 1;\n            } else {\n                const isStatesEql = isEqual(existing.state, state);\n                if (\n                    isStatesEql &&\n                    // states from same meta\n                    (existing.meta === meta ||\n                        // global states\n                        typeof state === 'string' ||\n                        state?.type === 'template')\n                ) {\n                    resolvedCount[name]++;\n                }\n            }\n        };\n        // infer states from  multiple resolved selectors\n        for (const resolvedContext of this.resolveSet.values()) {\n            const resolvedFoundNames = new Set<string>();\n            resolved: for (const { symbol, meta } of resolvedContext) {\n                const states = symbol[`-st-states`];\n                if (!states) {\n                    continue;\n                }\n                if (searchedName) {\n                    if (Object.hasOwnProperty.call(states, searchedName)) {\n                        // track state\n                        addInferredState(searchedName, meta, states[searchedName]);\n                        break resolved;\n                    }\n                } else {\n                    // get all states\n                    for (const [name, state] of Object.entries(states)) {\n                        if (!resolvedFoundNames.has(name)) {\n                            // track state\n                            resolvedFoundNames.add(name);\n                            addInferredState(name, meta, state);\n                        }\n                    }\n                }\n            }\n        }\n        // strict: remove states that do not exist on ALL resolved selectors\n        return expectedIntersectionCount > 1\n            ? Object.entries(collectedStates).reduce((resultStates, [name, InferredState]) => {\n                  if (resolvedCount[name] >= expectedIntersectionCount) {\n                      resultStates[name] = InferredState;\n                  }\n                  return resultStates;\n              }, {} as typeof collectedStates)\n            : collectedStates;\n    }\n    public getPseudoElements({\n        isFirstInSelector,\n        experimentalSelectorInference,\n        name,\n    }: {\n        isFirstInSelector: boolean;\n        experimentalSelectorInference: boolean;\n        name?: string;\n    }) {\n        const collectedElements: Record<string, InferredPseudoElement> = {};\n        const resolvedCount: Record<string, number> = {};\n        const checked: Record<string, Map<string, boolean>> = {};\n        const expectedIntersectionCount = this.resolveSet.size; // ToDo: dec for any types\n        const addInferredElement = (\n            name: string,\n            inferred: InferredSelector,\n            selectors: SelectorList\n        ) => {\n            const item = (collectedElements[name] ||= {\n                inferred: new InferredSelector(this.api),\n                selectors: [],\n            });\n            // check inferred matching\n            if (!item.inferred.matchedElement(inferred)) {\n                // ToDo: bailout fast\n                return;\n            }\n            // add match\n            resolvedCount[name]++;\n            item.inferred.add(inferred);\n            item.selectors.push(...selectors);\n        };\n        // infer elements from  multiple resolved selectors\n        for (const resolvedContext of this.resolveSet.values()) {\n            /**\n             * search for elements in each resolved selector.\n             * start at 1 for legacy flat mode to prefer inherited elements over local\n             */\n            const startIndex =\n                resolvedContext.length === 1 ||\n                (resolvedContext[0] &&\n                    (STStructure.isStructureMode(resolvedContext[0].meta) ||\n                        resolvedContext[0].symbol._kind === 'part'))\n                    ? 0\n                    : 1;\n            resolved: for (let i = startIndex; i < resolvedContext.length; i++) {\n                const { symbol, meta } = resolvedContext[i];\n                const structureMode = STStructure.isStructureMode(meta);\n                if (\n                    symbol._kind !== 'part' &&\n                    (symbol.alias || (!structureMode && !symbol['-st-root']))\n                ) {\n                    // non-root & alias classes don't have parts: bailout\n                    continue;\n                }\n                if (name) {\n                    const cacheContext = symbol._kind === 'part' ? symbol.id : symbol.name;\n                    const uniqueId = meta.source + '::' + cacheContext;\n                    resolvedCount[name] ??= 0;\n                    checked[name] ||= new Map();\n                    if (checked[name].has(uniqueId)) {\n                        if (checked[name].get(uniqueId)) {\n                            resolvedCount[name]++;\n                        }\n                        continue;\n                    }\n                    // get part symbol\n                    const partDef = STStructure.getPart(symbol, name);\n                    // save to cache\n                    checked[name].set(uniqueId, !!partDef);\n\n                    if (!partDef) {\n                        continue;\n                    }\n                    if (Array.isArray(partDef.mapTo)) {\n                        // prefer custom selector\n                        const selectorList = cloneSelector(partDef.mapTo);\n                        const selectorStr = stringifySelector(partDef.mapTo);\n                        selectorList.forEach((selector) => {\n                            const r = removeInitialCompoundMarker(selector, meta, structureMode);\n                            selector.nodes = r.selector.nodes;\n                            selector.before = '';\n                            if (!r.hadCompoundStart && !isFirstInSelector) {\n                                selector.nodes.unshift(\n                                    createCombinatorSelector({ combinator: 'space' })\n                                );\n                            }\n                        });\n                        const internalContext = this.api.createSelectorContext(\n                            meta,\n                            selectorList,\n                            postcss.rule({ selector: selectorStr }),\n                            selectorStr\n                        );\n                        internalContext.isStandaloneSelector = isFirstInSelector;\n                        if (!structureMode && experimentalSelectorInference) {\n                            internalContext.inferredSelectorStart.set(\n                                this.api.createInferredSelector(meta, {\n                                    name: 'root',\n                                    type: 'class',\n                                })\n                            );\n                            internalContext.inferredSelector.set(\n                                internalContext.inferredSelectorStart\n                            );\n                        }\n                        const customAstSelectors = this.api.scopeSelectorAst(internalContext);\n                        const inferred =\n                            customAstSelectors.length === 1 || experimentalSelectorInference\n                                ? internalContext.inferredMultipleSelectors\n                                : new InferredSelector(this.api, [\n                                      {\n                                          _kind: 'css',\n                                          meta,\n                                          symbol: CSSType.createSymbol({ name: '*' }),\n                                      },\n                                  ]);\n                        // add part resolve to inferred resolve set\n                        if (structureMode) {\n                            inferred.addPartOverride({ _kind: 'css', meta, symbol: partDef });\n                        }\n                        addInferredElement(name, inferred, customAstSelectors);\n                        break resolved;\n                    } else {\n                        // matching class part\n                        const resolvedPart = this.api.getResolvedSymbols(meta).class[name];\n                        const resolvedBaseSymbol = getOriginDefinition(resolvedPart);\n                        const nodes: SelectorNode[] = [];\n                        // insert descendant combinator before internal custom element\n                        if (!resolvedBaseSymbol.symbol[`-st-root`] && !isFirstInSelector) {\n                            nodes.push(createCombinatorSelector({ combinator: 'space' }));\n                        }\n                        // create part class\n                        const classNode = {} as SelectorNode;\n                        CSSClass.namespaceClass(\n                            resolvedBaseSymbol.meta,\n                            resolvedBaseSymbol.symbol,\n                            classNode\n                        );\n                        nodes.push(classNode);\n\n                        addInferredElement(name, new InferredSelector(this.api, resolvedPart), [\n                            { type: 'selector', after: '', before: '', end: 0, start: 0, nodes },\n                        ]);\n                        break resolved;\n                    }\n                } else {\n                    // ToDo: implement get all elements\n                }\n            }\n        }\n        // strict: remove elements that do not exist on ALL resolved selectors\n        return expectedIntersectionCount > 1\n            ? Object.entries(collectedElements).reduce(\n                  (resultElements, [name, InferredElement]) => {\n                      if (resolvedCount[name] >= expectedIntersectionCount) {\n                          resultElements[name] = InferredElement;\n                      }\n                      return resultElements;\n                  },\n                  {} as typeof collectedElements\n              )\n            : collectedElements;\n    }\n    private matchedElement(inferred: InferredSelector): boolean {\n        for (const target of this.resolveSet) {\n            const targetBaseElementSymbol = getOriginDefinition(target);\n            for (const tested of inferred.resolveSet) {\n                const testedBaseElementSymbol = getOriginDefinition(tested);\n                if (targetBaseElementSymbol !== testedBaseElementSymbol) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    // function to temporarily handle single resolved selector type while refactoring\n    //      ToDo: remove temporarily single resolve\n    getSingleResolve(): InferredResolve[] {\n        if (this.resolveSet.size !== 1) {\n            return [];\n        }\n        return this.resolveSet.values().next().value;\n    }\n}\n\nclass SelectorMultiplier {\n    private dupIndicesPerSelector: [nodeIndex: number, selectors: SelectorList][][] = [];\n    public addSplitPoint(selectorIndex: number, nodeIndex: number, selectors: SelectorList) {\n        if (selectors.length) {\n            this.dupIndicesPerSelector[selectorIndex] ||= [];\n            this.dupIndicesPerSelector[selectorIndex].push([nodeIndex, selectors]);\n        }\n    }\n    public duplicateSelectors(targetSelectors: SelectorList) {\n        // iterate top level selector\n        for (const [selectorIndex, insertionPoints] of Object.entries(this.dupIndicesPerSelector)) {\n            const duplicationList = [targetSelectors[Number(selectorIndex)]];\n            // iterate insertion points\n            for (const [nodeIndex, selectors] of insertionPoints) {\n                // collect the duplicate selectors to be multiplied by following insertion points\n                const added: SelectorList = [];\n                // iterate selectors for insertion point\n                for (const replaceSelector of selectors) {\n                    // duplicate selectors and replace selector at insertion point\n                    for (const originSelector of duplicationList) {\n                        const dupSelector = { ...originSelector, nodes: [...originSelector.nodes] };\n                        dupSelector.nodes[nodeIndex] = replaceSelector;\n                        added.push(dupSelector);\n                    }\n                }\n                // add the duplicated selectors from insertion point to\n                // the list of selector to be duplicated for following insertion\n                // points and to the target selector list\n                for (const addedSelector of added) {\n                    duplicationList.push(addedSelector);\n                    targetSelectors.push(addedSelector);\n                }\n            }\n        }\n    }\n}\n\nexport class ScopeContext {\n    public transform = true;\n    // source multi-selector input\n    public selectorStr = '';\n    public selectorIndex = -1;\n    public elements: any[] = [];\n    public selectorAstResolveMap = new Map<ImmutableSelectorNode, InferredSelector>();\n    public selector?: Selector;\n    public compoundSelector?: CompoundSelector;\n    public node?: CompoundSelector['nodes'][number];\n    // true for nested selector\n    public isNested: boolean;\n    // store selector duplication points\n    public splitSelectors = new SelectorMultiplier();\n    public lastInferredSelectorNode: SelectorNode | undefined;\n    // selector is not a continuation of another selector\n    public isStandaloneSelector = true;\n    // used as initial selector\n    public inferredSelectorStart: InferredSelector;\n    // used as initial selector or after combinators\n    public inferredSelectorContext: InferredSelector;\n    // used for nesting selector\n    public inferredSelectorNest: InferredSelector;\n    // current type while traversing a selector\n    public inferredSelector: InferredSelector;\n    // combined type of the multiple selectors\n    public inferredMultipleSelectors: InferredSelector = new InferredSelector(this.transformer);\n    constructor(\n        public originMeta: StylableMeta,\n        public resolver: StylableResolver,\n        public selectorAst: SelectorList,\n        public ruleOrAtRule: postcss.Rule | postcss.AtRule,\n        public scopeSelectorAst: StylableTransformer['scopeSelectorAst'],\n        private transformer: StylableTransformer,\n        inferredSelectorNest?: InferredSelector,\n        public inferredSelectorMixin?: InferredSelector,\n        inferredSelectorContext?: InferredSelector,\n        selectorStr?: string\n    ) {\n        this.isNested = !!(\n            ruleOrAtRule.parent &&\n            // top level\n            ruleOrAtRule.parent.type !== 'root' &&\n            // directly in @st-scope\n            !STScope.isStScopeStatement(ruleOrAtRule.parent)\n        );\n        /* \n            resolve default selector context for initial selector and selector\n            following a combinator.\n            \n            Currently set to stylesheet root for top level selectors and selectors\n            directly nested under @st-scope. But will change in the future to a universal selector\n            once experimentalSelectorInference will be the default behavior\n        */\n        const inferredContext =\n            inferredSelectorContext ||\n            (this.isNested || transformer.experimentalSelectorInference\n                ? new InferredSelector(transformer, [\n                      {\n                          _kind: 'css',\n                          meta: originMeta,\n                          symbol: CSSType.createSymbol({ name: '*' }),\n                      },\n                  ])\n                : transformer.createInferredSelector(originMeta, {\n                      name: originMeta.root,\n                      type: 'class',\n                  }));\n        // set selector data\n        this.selectorStr = selectorStr || stringifySelector(selectorAst);\n        this.inferredSelectorContext = new InferredSelector(this.transformer, inferredContext);\n        this.inferredSelectorStart = new InferredSelector(this.transformer, inferredContext);\n        this.inferredSelectorNest = inferredSelectorNest || this.inferredSelectorContext.clone();\n        this.inferredSelector = new InferredSelector(\n            this.transformer,\n            this.inferredSelectorContext\n        );\n    }\n    get experimentalSelectorInference() {\n        return this.transformer.experimentalSelectorInference;\n    }\n    static legacyElementsTypesMapping: Record<string, string> = {\n        pseudo_element: 'pseudo-element',\n        class: 'class',\n        type: 'element',\n    };\n    public setNextSelectorScope(\n        resolved: InferredResolve[] | InferredSelector,\n        node: SelectorNode,\n        name?: string\n    ) {\n        if (name && this.selectorIndex !== undefined && this.selectorIndex !== -1) {\n            this.elements[this.selectorIndex].push({\n                type: ScopeContext.legacyElementsTypesMapping[node.type] || 'unknown',\n                name,\n                resolved: Array.isArray(resolved) ? resolved : resolved.getSingleResolve(),\n            });\n        }\n        this.inferredSelector.set(resolved);\n        this.selectorAstResolveMap.set(node, this.inferredSelector.clone());\n        this.lastInferredSelectorNode = node;\n    }\n    public isFirstInSelector(node: SelectorNode) {\n        const isFirstNode = this.selectorAst[this.selectorIndex].nodes[0] === node;\n        if (isFirstNode && this.selectorIndex === 0 && !this.isStandaloneSelector) {\n            // force false incase a this context is a splitted part from another selector\n            return false;\n        }\n        return isFirstNode;\n    }\n    public createNestedContext(selectorAst: SelectorList, selectorContext?: InferredSelector) {\n        const ctx = new ScopeContext(\n            this.originMeta,\n            this.resolver,\n            selectorAst,\n            this.ruleOrAtRule,\n            this.scopeSelectorAst,\n            this.transformer,\n            this.inferredSelectorNest,\n            this.inferredSelectorMixin,\n            selectorContext || this.inferredSelectorContext\n        );\n        ctx.transform = this.transform;\n        ctx.selectorAstResolveMap = this.selectorAstResolveMap;\n\n        return ctx;\n    }\n    public transformIntoMultiSelector(node: SelectorNode, selectors: SelectorList) {\n        // transform into the first selector\n        Object.assign(node, selectors[0]);\n        // keep track of additional selectors for\n        // duplication at the end of the selector transform\n        selectors.shift();\n        const selectorNode = this.selectorAst[this.selectorIndex];\n        const nodeIndex = selectorNode.nodes.indexOf(node);\n        this.splitSelectors.addSplitPoint(this.selectorIndex, nodeIndex, selectors);\n    }\n    public isDuplicateStScopeDiagnostic() {\n        if (this.experimentalSelectorInference || this.ruleOrAtRule.type !== 'rule') {\n            // this check is not required when experimentalSelectorInference is on\n            // as @st-scope is not flatten at the beginning of the transformation\n            // and diagnostics on it's selector is only checked once.\n            return false;\n        }\n        // ToDo: should be removed once st-scope transformation moves to the end of the transform process\n        const transformedScope =\n            this.originMeta.transformedScopes?.[getRuleScopeSelector(this.ruleOrAtRule) || ``];\n        if (transformedScope && this.selector && this.compoundSelector) {\n            const currentCompoundSelector = stringifySelector(this.compoundSelector);\n            const i = this.selector.nodes.indexOf(this.compoundSelector);\n            for (const stScopeSelectorCompounded of transformedScope) {\n                // if we are in a chunk index that is in the rage of the @st-scope param\n                if (i <= stScopeSelectorCompounded.nodes.length) {\n                    for (const scopeNode of stScopeSelectorCompounded.nodes) {\n                        const scopeNodeSelector = stringifySelector(scopeNode);\n                        // if the two chunks match the error is already reported by the @st-scope validation\n                        if (scopeNodeSelector === currentCompoundSelector) {\n                            return true;\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    }\n}\n\n/**\n * in the process of moving transformations that shouldn't be in the analyzer.\n * all changes were moved here to be called at the beginning of the transformer,\n * and should be inlined in the process in the future.\n */\nfunction prepareAST(\n    context: FeatureTransformContext,\n    ast: postcss.Root,\n    experimentalSelectorInference: boolean\n) {\n    // ToDo: inline transformations\n    const toRemove: Array<postcss.Node | (() => void)> = [];\n    ast.walk((node) => {\n        const input = { context, node, toRemove };\n        STNamespace.hooks.prepareAST(input);\n        STImport.hooks.prepareAST(input);\n        if (!experimentalSelectorInference) {\n            STScope.hooks.prepareAST(input);\n        }\n        STVar.hooks.prepareAST(input);\n        if (!experimentalSelectorInference) {\n            STCustomSelector.hooks.prepareAST(input);\n        }\n        CSSCustomProperty.hooks.prepareAST(input);\n    });\n    for (const removeOrNode of toRemove) {\n        typeof removeOrNode === 'function' ? removeOrNode() : removeOrNode.remove();\n    }\n}\n", "export function isEqual(value1: any, value2: any): boolean {\n    if (value1 === null || value2 === null) {\n        return value1 === value2;\n    }\n\n    if (Array.isArray(value1) && Array.isArray(value2)) {\n        if (value1.length !== value2.length) {\n            return false;\n        }\n\n        for (let i = 0; i < value1.length; i++) {\n            if (!isEqual(value1[i], value2[i])) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    if (typeof value1 === 'object' && typeof value2 === 'object') {\n        const keys1 = Object.keys(value1);\n        const keys2 = Object.keys(value2);\n\n        if (keys1.length !== keys2.length) {\n            return false;\n        }\n\n        for (const key of keys1) {\n            if (!isEqual(value1[key], value2[key])) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    return value1 === value2;\n}\n", "import { setFieldForDeprecation, ignoreDeprecationWarn } from '../helpers/deprecation';\nimport { Rule } from 'postcss';\n\n/**\n * mark extended fields as deprecated.\n * `valueOnThis` is used because postcss.clone copies own properties.\n */\nsetFieldForDeprecation(Rule.prototype, `stScopeSelector`, {\n    objectType: `SRule`,\n    valueOnThis: true,\n    pleaseUse: `getRuleScopeSelector(rule)`,\n});\n\n/**\n * extended types\n */\n/**@deprecated*/\nexport interface SRule extends Rule {\n    stScopeSelector?: string;\n}\n\n// ToDo: remove when st-scope moves to transformer\nexport function getRuleScopeSelector(rule: Rule) {\n    return ignoreDeprecationWarn(() => (rule as SRule).stScopeSelector);\n}\n", "// we don't want to bundle the entire enhanced-resolve package for the browser\n// it will throw if Stylable is used in the browser without a custom resolver\nexport default {\n    createResolver: () => {\n        throw new Error(\n            'Stylable requires a custom resolver in lib bundles. please provide `resolveModule` options to the Stylable constructor.'\n        );\n    },\n};\n", "// importing the factory directly, as we feed it our own fs, and don't want graceful-fs to be implicitly imported\n// this allows @stylable/core to be bundled for browser usage without special custom configuration\nimport ResolverFactory from 'enhanced-resolve/lib/ResolverFactory.js';\n\nimport type { ModuleResolver } from './types';\nimport type { MinimalFS } from './cached-process-file';\n\nfunction bundleSafeRequireExtensions(): string[] {\n    let extensions: string[];\n    try {\n        // we use eval here to avoid bundling warnings about require.extensions we always has fallback for browsers\n        extensions = Object.keys(require('module')._extensions);\n    } catch (e) {\n        extensions = [];\n    }\n    return extensions.length ? extensions : ['.js', '.json'];\n}\n\nconst resolverContext = {};\n\nexport function createDefaultResolver(fileSystem: MinimalFS, resolveOptions: any): ModuleResolver {\n    const extensions =\n        resolveOptions.extensions && resolveOptions.extensions.length\n            ? resolveOptions.extensions\n            : bundleSafeRequireExtensions();\n    const eResolver = ResolverFactory.createResolver({\n        ...resolveOptions,\n        extensions,\n        useSyncFileSystemCalls: true,\n        cache: false,\n        fileSystem,\n    });\n\n    return (directoryPath, request): string => {\n        const res = eResolver.resolveSync(resolverContext, directoryPath, request);\n        if (res === false) {\n            throw new Error(\n                `Stylable does not support browser field 'false' values. ${request} resolved to 'false' from ${directoryPath}`\n            );\n        }\n        return res;\n    };\n}\n", "import type { StylableMeta } from './stylable-meta';\nimport type { Imported } from './features';\nimport type { StylableResolver } from './stylable-resolver';\n\nexport interface CSSDependency {\n    kind: 'css';\n    resolvedPath: string;\n    imported: Imported;\n    depth: number;\n    meta: StylableMeta;\n}\n\nexport interface JSDependency {\n    kind: 'js';\n    resolvedPath: string;\n    imported: Imported;\n}\n\nexport type Dependency = CSSDependency | JSDependency;\n\nexport function* visitMetaCSSDependencies({\n    meta,\n    resolver,\n}: {\n    meta: StylableMeta;\n    resolver: StylableResolver;\n}) {\n    const visited = new Set<string>([meta.source]);\n    const q = [[...meta.getImportStatements()]];\n    let depth = -1;\n    while (++depth < q.length) {\n        let index = -1;\n        const items = q[depth];\n        if (items.length && !q[depth + 1]) {\n            q[depth + 1] = [];\n        }\n        while (++index < items.length) {\n            const imported = items[index];\n            const res = resolver.resolveImported(imported, '');\n\n            if (res?._kind === 'css' && !visited.has(res.meta.source)) {\n                visited.add(res.meta.source);\n                const dependency: CSSDependency = {\n                    kind: 'css',\n                    depth: depth + 1,\n                    meta: res.meta,\n                    resolvedPath: res.meta.source,\n                    imported,\n                };\n\n                yield dependency;\n\n                q[depth + 1].push(...res.meta.getImportStatements());\n            } else if (res?._kind === 'js') {\n                const resolvedPath = resolver.resolvePath(imported.context, imported.request);\n\n                if (!visited.has(resolvedPath)) {\n                    visited.add(resolvedPath);\n                    const dependency: JSDependency = {\n                        kind: 'js',\n                        imported,\n                        resolvedPath,\n                    };\n\n                    yield dependency;\n                }\n            }\n        }\n    }\n}\n", "import type { CacheItem, FileProcessor, MinimalFS } from './cached-process-file';\nimport { createStylableFileProcessor } from './create-stylable-processor';\nimport { Diagnostics } from './diagnostics';\nimport { CssParser, cssParse } from './parser';\nimport { processNamespace, StylableProcessor } from './stylable-processor';\nimport type { StylableMeta } from './stylable-meta';\nimport { StylableResolverCache, StylableResolver, CachedModuleEntity } from './stylable-resolver';\nimport {\n    ResolvedElement,\n    StylableResults,\n    StylableTransformer,\n    TransformerOptions,\n    TransformHooks,\n} from './stylable-transformer';\nimport type { IStylableOptimizer, ModuleResolver } from './types';\nimport { createDefaultResolver } from './module-resolver';\nimport { STImport, STScope, STVar, STMixin, CSSClass, CSSCustomProperty } from './features';\nimport { Dependency, visitMetaCSSDependencies } from './visit-meta-css-dependencies';\nimport * as postcss from 'postcss';\nimport { defaultFeatureFlags, type FeatureFlags } from './features/feature';\n\nexport interface StylableConfig {\n    projectRoot: string;\n    fileSystem: MinimalFS;\n    requireModule?: (path: string) => any;\n    onProcess?: (meta: StylableMeta, path: string) => StylableMeta;\n    hooks?: TransformHooks;\n    resolveOptions?: {\n        alias?: any;\n        symlinks?: boolean;\n        [key: string]: any;\n    };\n    optimizer?: IStylableOptimizer;\n    mode?: 'production' | 'development';\n    resolveNamespace?: typeof processNamespace;\n    resolveModule?: ModuleResolver;\n    cssParser?: CssParser;\n    resolverCache?: StylableResolverCache;\n    fileProcessorCache?: Record<string, CacheItem<StylableMeta>>;\n    experimentalSelectorInference?: boolean;\n    flags?: Partial<FeatureFlags>;\n}\n\n// This defines and validates known configs for the defaultConfig in 'stylable.config.js\nconst globalDefaultSupportedConfigs = new Set([\n    'resolveModule',\n    'resolveNamespace',\n    'requireModule',\n    'flags',\n    'experimentalSelectorInference',\n]);\nexport function validateDefaultConfig(defaultConfigObj: any) {\n    if (typeof defaultConfigObj === 'object') {\n        for (const configName of Object.keys(defaultConfigObj)) {\n            if (!globalDefaultSupportedConfigs.has(configName)) {\n                console.warn(\n                    `Caution: loading \"${configName}\" config is experimental, and may behave unexpectedly`\n                );\n            }\n        }\n    }\n}\n\ninterface InitCacheParams {\n    /* Keeps cache entities that meet the condition specified in a callback function. Return `true` to keep the iterated entity. */\n    filter?(key: string, entity: CachedModuleEntity): boolean;\n}\n\nexport type CreateProcessorOptions = Pick<StylableConfig, 'resolveNamespace'>;\n\nexport class Stylable {\n    public fileProcessor: FileProcessor<StylableMeta>;\n    public resolver: StylableResolver;\n    public stModule = new STImport.StylablePublicApi(this);\n    public stScope = new STScope.StylablePublicApi(this);\n    public stVar = new STVar.StylablePublicApi(this);\n    public stMixin = new STMixin.StylablePublicApi(this);\n    public cssClass = new CSSClass.StylablePublicApi(this);\n    //\n    public projectRoot: string;\n    protected fileSystem: MinimalFS;\n    protected requireModule: (path: string) => any;\n    protected onProcess?: (meta: StylableMeta, path: string) => StylableMeta;\n    protected diagnostics = new Diagnostics();\n    protected hooks: TransformHooks;\n    protected resolveOptions: any;\n    public optimizer?: IStylableOptimizer;\n    protected mode: 'production' | 'development';\n    public resolveNamespace?: typeof processNamespace;\n    public moduleResolver: ModuleResolver;\n    protected cssParser: CssParser;\n    protected resolverCache?: StylableResolverCache;\n    // This cache is fragile and should be fresh if onProcess/resolveNamespace/cssParser is different\n    protected fileProcessorCache?: Record<string, CacheItem<StylableMeta>>;\n    private experimentalSelectorInference: boolean;\n    public flags: FeatureFlags;\n    constructor(config: StylableConfig) {\n        this.experimentalSelectorInference = !!config.experimentalSelectorInference;\n        this.projectRoot = config.projectRoot;\n        this.fileSystem = config.fileSystem;\n        this.requireModule =\n            config.requireModule ||\n            (() => {\n                throw new Error('Javascript files are not supported without requireModule options');\n            });\n        this.onProcess = config.onProcess;\n        this.hooks = config.hooks || {};\n        this.resolveOptions = config.resolveOptions || {};\n        this.optimizer = config.optimizer;\n        this.mode = config.mode || `production`;\n        this.resolveNamespace = config.resolveNamespace;\n        this.moduleResolver =\n            config.resolveModule || createDefaultResolver(this.fileSystem, this.resolveOptions);\n        this.cssParser = config.cssParser || cssParse;\n        this.resolverCache = config.resolverCache; // ToDo: v5 default to `new Map()`\n        this.fileProcessorCache = config.fileProcessorCache;\n        this.flags = {\n            ...defaultFeatureFlags,\n            ...config.flags,\n        };\n        this.fileProcessor = createStylableFileProcessor({\n            fileSystem: this.fileSystem,\n            onProcess: this.onProcess,\n            resolveNamespace: this.resolveNamespace,\n            cssParser: this.cssParser,\n            cache: this.fileProcessorCache,\n            flags: this.flags,\n        });\n\n        this.resolver = this.createResolver();\n    }\n    public getDependencies(meta: StylableMeta) {\n        const dependencies: Dependency[] = [];\n\n        for (const dependency of visitMetaCSSDependencies({ meta, resolver: this.resolver })) {\n            dependencies.push(dependency);\n        }\n\n        return dependencies;\n    }\n    public initCache({ filter }: InitCacheParams = {}) {\n        if (filter && this.resolverCache) {\n            for (const [key, cacheEntity] of this.resolverCache) {\n                const keep = filter(key, cacheEntity);\n\n                if (!keep) {\n                    this.resolverCache.delete(key);\n                }\n            }\n        } else {\n            this.resolverCache = new Map();\n            this.resolver = this.createResolver();\n        }\n    }\n    public createResolver({\n        requireModule = this.requireModule,\n        resolverCache = this.resolverCache,\n        resolvePath = this.moduleResolver,\n    }: Pick<StylableConfig, 'requireModule' | 'resolverCache'> & {\n        resolvePath?: ModuleResolver;\n    } = {}) {\n        return new StylableResolver(this.fileProcessor, requireModule, resolvePath, resolverCache);\n    }\n    public createProcessor({\n        resolveNamespace = this.resolveNamespace,\n    }: CreateProcessorOptions = {}) {\n        return new StylableProcessor(new Diagnostics(), resolveNamespace, this.flags);\n    }\n    private createTransformer(options: Partial<TransformerOptions> = {}) {\n        return new StylableTransformer({\n            moduleResolver: this.moduleResolver,\n            diagnostics: new Diagnostics(),\n            fileProcessor: this.fileProcessor,\n            requireModule: this.requireModule,\n            postProcessor: this.hooks.postProcessor,\n            replaceValueHook: this.hooks.replaceValueHook,\n            resolverCache: this.resolverCache,\n            mode: this.mode,\n            experimentalSelectorInference: this.experimentalSelectorInference,\n            ...options,\n        });\n    }\n    public transform(\n        pathOrMeta: string | StylableMeta,\n        options: Partial<TransformerOptions> = {}\n    ): StylableResults {\n        const meta = typeof pathOrMeta === `string` ? this.analyze(pathOrMeta) : pathOrMeta;\n        const transformer = this.createTransformer(options);\n        return transformer.transform(meta);\n    }\n    public transformSelector(\n        pathOrMeta: string | StylableMeta,\n        selector: string,\n        options?: Partial<TransformerOptions>\n    ): { selector: string; resolved: ResolvedElement[][] } {\n        const meta = typeof pathOrMeta === `string` ? this.analyze(pathOrMeta) : pathOrMeta;\n        const transformer = this.createTransformer(options);\n        const r = transformer.scopeSelector(meta, selector, undefined, undefined, undefined, true);\n        return {\n            selector: r.selector,\n            resolved: r.elements,\n        };\n    }\n    public transformCustomProperty(pathOrMeta: string | StylableMeta, prop: string) {\n        const meta = typeof pathOrMeta === `string` ? this.analyze(pathOrMeta) : pathOrMeta;\n        return CSSCustomProperty.scopeCSSVar(this.resolver, meta, prop);\n    }\n    public transformDecl(\n        pathOrMeta: string | StylableMeta,\n        prop: string,\n        value: string,\n        options?: Partial<TransformerOptions>\n    ) {\n        const decl = postcss.decl({ prop, value });\n        this.transformAST(\n            pathOrMeta,\n            postcss.root({}).append(postcss.rule({ selector: `.x` }).append(decl)),\n            options\n        );\n        return { prop: decl.prop, value: decl.value };\n    }\n    private transformAST(\n        pathOrMeta: string | StylableMeta,\n        ast: postcss.Root,\n        options?: Partial<TransformerOptions>\n    ): postcss.Root {\n        const meta = typeof pathOrMeta === `string` ? this.analyze(pathOrMeta) : pathOrMeta;\n        const transformer = this.createTransformer(options);\n        transformer.transformAst(ast, meta);\n        return ast;\n    }\n    public analyze(fullPath: string, overrideSrc?: string) {\n        return overrideSrc\n            ? this.fileProcessor.processContent(overrideSrc, fullPath)\n            : this.fileProcessor.process(fullPath);\n    }\n    public resolvePath(directoryPath: string, request: string) {\n        return this.resolver.resolvePath(directoryPath, request);\n    }\n}\n", "import { murmurhash3_32_gc } from './murmurhash';\nimport type { processNamespace } from './stylable-processor';\n\n/** @deprecated use createNamespaceStrategy */\nexport function packageNamespaceFactory(\n    findConfig: (fileName: string, options: { cwd: string }) => string | null,\n    loadConfig: (filePath: string) => object,\n    {\n        dirname,\n        relative,\n    }: { dirname(path: string): string; relative(from: string, to: string): string },\n    hashSalt = '',\n    prefix = '',\n    normalizeVersion = (semver: string) => semver\n): typeof processNamespace {\n    return (\n        namespace: string,\n        originStylesheetPath: string,\n        stylesheetPath: string = originStylesheetPath\n    ) => {\n        const configPath = findConfig('package.json', { cwd: dirname(stylesheetPath) });\n        if (!configPath) {\n            throw new Error(`Could not find package.json for ${originStylesheetPath}`);\n        }\n        const config = loadConfig(configPath) as { name: string; version: string };\n        const fromRoot = relative(dirname(configPath), originStylesheetPath).replace(/\\\\/g, '/');\n        return (\n            prefix +\n            namespace +\n            murmurhash3_32_gc(\n                hashSalt + config.name + '@' + normalizeVersion(config.version) + '/' + fromRoot\n            )\n        );\n    };\n}\n\n/** @deprecated use createNamespaceStrategy */\nexport function noCollisionNamespace({\n    prefix = '',\n    used: usedNamespaces = new Map<\n        string,\n        { prefix: string; namespace: string; stylesheetPath: string }\n    >(),\n} = {}): typeof processNamespace {\n    return (namespace, stylesheetPath) => {\n        const ns = prefix + namespace;\n        const used = usedNamespaces.get(ns);\n        if (used) {\n            if (used.stylesheetPath !== stylesheetPath) {\n                throw new Error(`namespace (${ns} of ${stylesheetPath}) is already in use`);\n            }\n        } else {\n            usedNamespaces.set(ns, { prefix, namespace, stylesheetPath });\n        }\n        return ns;\n    };\n}\n", "import type { StylableExports } from './stylable-transformer';\n\ninterface InjectCSSOptions {\n    /**\n     *  omitting the id will fallback to module.id/import.meta.url\n     */\n    id?: string | undefined;\n    /**\n     * css string to inject\n     */\n    css: string;\n    /**\n     * code to generate the css string to inject\n     */\n    cssCode?: string;\n    /**\n     *  calculated style depth\n     */\n    depth: number | string;\n    /**\n     *  use code to get the depth\n     */\n    depthCode?: string;\n    /**\n     *  reconciliation will happen only for style with the same runtimeId\n     */\n    runtimeId: string;\n}\n\ninterface ModuleOptions {\n    /**\n     * module namespace\n     */\n    namespace: string;\n    /**\n     * static imports for the module\n     */\n    imports?: Array<{ from: string; defaultImport?: string }>;\n    /**\n     * Stylable transforms exports\n     */\n    jsExports: StylableExports | { [K in keyof StylableExports]: string };\n    /**\n     * the request of the module runtime api e.g @stylable/runtime\n     */\n    runtimeRequest?: string;\n    /**\n     * target module format\n     */\n    moduleType: 'esm' | 'cjs';\n    /**\n     * es3 compat mode\n     */\n    varType?: 'const' | 'var';\n    /**\n     * inject code immediately after imports\n     */\n    header?: string;\n    /**\n     * inject code after the entire module code\n     */\n    footer?: string;\n}\n\nexport function generateStylableJSModuleSource(\n    moduleOptions: ModuleOptions,\n    injectOptions?: InjectCSSOptions\n) {\n    const {\n        namespace,\n        imports = [],\n        jsExports,\n        moduleType,\n        runtimeRequest,\n        varType = 'const',\n        header = '',\n        footer = '',\n    } = moduleOptions;\n\n    const { classes, keyframes, layers, containers, stVars, vars } = jsExports;\n    const exportKind = moduleType === 'esm' ? `export ${varType} ` : 'module.exports.';\n    return `\n${imports.map(moduleRequest(moduleType)).join('\\n')}\n${runtimeImport(moduleType, runtimeRequest, injectOptions)}\n\n${header}\n\n${varType} _namespace_ = ${JSON.stringify(namespace)};\n${varType} _style_ = /*#__PURE__*/ classesRuntime.bind(null, _namespace_);\n\n${exportKind}cssStates = /*#__PURE__*/ statesRuntime.bind(null, _namespace_);\n${exportKind}style = /*#__PURE__*/ _style_;\n${exportKind}st = /*#__PURE__*/ _style_;\n\n${exportKind}namespace = _namespace_;\n${exportKind}classes = ${JSON.stringify(classes)};\n${exportKind}keyframes = ${JSON.stringify(keyframes)}; \n${exportKind}layers = ${JSON.stringify(layers)};\n${exportKind}containers = ${JSON.stringify(containers)};\n${exportKind}stVars = ${JSON.stringify(stVars)}; \n${exportKind}vars = ${JSON.stringify(vars)}; \n\n${runtimeExecuteInject(moduleType, injectOptions)}\n\n${footer}\n`;\n}\n\nfunction moduleRequest(moduleType: 'esm' | 'cjs') {\n    return ({ from, defaultImport }: { from: string; defaultImport?: string }) => {\n        const request = JSON.stringify(from);\n        if (defaultImport) {\n            return moduleType === 'esm'\n                ? `import ${defaultImport} from ${request};`\n                : `const ${defaultImport} = require(${request});`;\n        }\n        return moduleType === 'esm' ? `import ${request};` : `require(${request});`;\n    };\n}\n\nfunction runtimeImport(\n    moduleType: 'esm' | 'cjs',\n    runtimeRequest: string | undefined,\n    injectOptions: InjectCSSOptions | undefined\n) {\n    const importInjectCSS = injectOptions?.css ? `, injectCSS` : '';\n    const request = JSON.stringify(\n        runtimeRequest ??\n            // TODO: we use direct requests here since we don't know how this will be resolved\n            (moduleType === 'esm'\n                ? '@stylable/runtime/esm/runtime.js'\n                : '@stylable/runtime/dist/runtime.js')\n    );\n    return moduleType === 'esm'\n        ? `import { classesRuntime, statesRuntime${importInjectCSS} } from ${request};`\n        : `const { classesRuntime, statesRuntime${importInjectCSS} } = require(${request});`;\n}\n\nfunction runtimeExecuteInject(\n    moduleType: 'esm' | 'cjs',\n    injectOptions: InjectCSSOptions | undefined\n) {\n    if (!injectOptions?.css) {\n        return '';\n    }\n    const { id, css, cssCode, depthCode, depth, runtimeId } = injectOptions;\n\n    let out = 'injectCSS(';\n    out += id ? JSON.stringify(id) : moduleType === 'esm' ? 'import.meta.url' : 'module.id';\n    out += ', ';\n    out += cssCode || JSON.stringify(css);\n    out += ', ';\n    out += depthCode || JSON.stringify(depth) || '-1';\n    out += ', ';\n    out += JSON.stringify(runtimeId);\n    out += ');';\n    return out;\n}\n"],
  "mappings": "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",
  "names": ["require_picocolors_browser", "__commonJSMin", "exports", "module", "x", "create", "require_css_syntax_error", "__commonJSMin", "exports", "module", "pico", "terminalHighlight", "CssSyntaxError", "_CssSyntaxError", "message", "line", "column", "source", "file", "plugin", "color", "css", "lines", "start", "end", "maxWidth", "mark", "aside", "bold", "gray", "red", "text", "str", "index", "number", "gutter", "spacing", "code", "require_symbols", "__commonJSMin", "exports", "module", "require_stringifier", "__commonJSMin", "exports", "module", "DEFAULT_RAW", "capitalize", "str", "Stringifier", "builder", "node", "semicolon", "name", "params", "end", "detect", "value", "buf", "depth", "indent", "step", "start", "between", "after", "last", "i", "child", "before", "left", "right", "string", "own", "parent", "root", "method", "p", "parts", "prop", "raw", "require_stringify", "__commonJSMin", "exports", "module", "Stringifier", "stringify", "node", "builder", "require_node", "__commonJSMin", "exports", "module", "isClean", "my", "CssSyntaxError", "Stringifier", "stringify", "cloneNode", "obj", "parent", "cloned", "i", "value", "type", "j", "Node", "defaults", "name", "node", "error", "s", "add", "overrides", "keepBetween", "message", "opts", "end", "start", "prop", "next", "index", "stringRepresentation", "pos", "string", "column", "line", "defaultType", "nodes", "bookmark", "foundSelf", "result", "_", "inputs", "fixed", "emitInputs", "inputsNextIndex", "inputId", "input", "stringifier", "text", "data", "require_declaration", "__commonJSMin", "exports", "module", "Node", "Declaration", "defaults", "require_browser_path", "__commonJSMin", "exports", "module", "_process", "valueType", "value", "validateString", "paramName", "isPathSeparator", "code", "isPosixPathSeparator", "isWindowsDeviceRoot", "normalizeString", "path", "allowAboveRoot", "separator", "res", "lastSegmentLength", "lastSlash", "dots", "i", "lastSlashIndex", "_format", "sep", "pathObject", "dir", "base", "win32", "args", "resolvedDevice", "resolvedTail", "resolvedAbsolute", "len", "rootEnd", "device", "isAbsolute", "j", "last", "firstPart", "tail", "joined", "arg", "needsReplace", "slashCount", "firstLen", "from", "to", "fromOrig", "toOrig", "fromStart", "fromEnd", "fromLen", "toStart", "toEnd", "toLen", "length", "lastCommonSep", "fromCode", "out", "resolvedPath", "offset", "end", "matchedSlash", "ext", "start", "extIdx", "firstNonSlashEnd", "startDot", "startPart", "preDotState", "ret", "posix", "trailingSeparator", "hasRoot", "require_non_secure", "__commonJSMin", "exports", "module", "urlAlphabet", "customAlphabet", "alphabet", "defaultSize", "size", "id", "i", "nanoid", "require_previous_map", "__commonJSMin", "exports", "module", "SourceMapConsumer", "SourceMapGenerator", "existsSync", "readFileSync", "dirname", "join", "fromBase64", "str", "PreviousMap", "css", "opts", "prev", "text", "baseCharsetUri", "baseUri", "charsetUri", "uri", "encoding", "sourceMapString", "map", "comments", "start", "end", "path", "file", "prevPath", "string", "require_input", "__commonJSMin", "exports", "module", "SourceMapConsumer", "SourceMapGenerator", "fileURLToPath", "pathToFileURL", "isAbsolute", "resolve", "nanoid", "terminalHighlight", "CssSyntaxError", "PreviousMap", "fromOffsetCache", "sourceMapAvailable", "pathAvailable", "Input", "css", "opts", "map", "file", "message", "line", "column", "result", "endLine", "endColumn", "start", "end", "pos", "origin", "offset", "lastLine", "lineToIndex", "lines", "prevIndex", "i", "min", "max", "mid", "consumer", "from", "to", "fromUrl", "source", "json", "name", "require_map_generator", "__commonJSMin", "exports", "module", "SourceMapConsumer", "SourceMapGenerator", "dirname", "relative", "resolve", "sep", "pathToFileURL", "Input", "sourceMapAvailable", "pathAvailable", "MapGenerator", "stringify", "root", "opts", "cssString", "content", "eol", "prev", "from", "map", "node", "i", "result", "line", "column", "noSource", "mapping", "lines", "last", "str", "type", "p", "annotation", "file", "cached", "path", "input", "already", "fromUrl", "fileURL", "url", "require_comment", "__commonJSMin", "exports", "module", "Node", "Comment", "defaults", "require_container", "__commonJSMin", "exports", "module", "isClean", "my", "Declaration", "Comment", "Node", "parse", "Rule", "AtRule", "Root", "cleanSource", "nodes", "i", "markDirtyUp", "node", "Container", "_Container", "children", "child", "keepBetween", "callback", "iterator", "index", "result", "condition", "prop", "args", "cb", "other", "value", "exist", "add", "existIndex", "id", "type", "sample", "pattern", "opts", "decl", "e", "name", "selector", "dependant", "require_document", "__commonJSMin", "exports", "module", "Container", "LazyResult", "Processor", "Document", "defaults", "opts", "dependant", "require_warn_once", "__commonJSMin", "exports", "module", "printed", "message", "require_warning", "__commonJSMin", "exports", "module", "Warning", "text", "opts", "range", "opt", "require_result", "__commonJSMin", "exports", "module", "Warning", "Result", "processor", "root", "opts", "text", "warning", "i", "require_tokenize", "__commonJSMin", "exports", "module", "SINGLE_QUOTE", "DOUBLE_QUOTE", "BACKSLASH", "SLASH", "NEWLINE", "SPACE", "FEED", "TAB", "CR", "OPEN_SQUARE", "CLOSE_SQUARE", "OPEN_PARENTHESES", "CLOSE_PARENTHESES", "OPEN_CURLY", "CLOSE_CURLY", "SEMICOLON", "ASTERISK", "COLON", "AT", "RE_AT_END", "RE_WORD_END", "RE_BAD_BRACKET", "RE_HEX_ESCAPE", "input", "options", "css", "ignore", "code", "next", "quote", "content", "escape", "escaped", "escapePos", "prev", "n", "currentToken", "length", "pos", "buffer", "returned", "position", "unclosed", "what", "endOfFile", "nextToken", "opts", "ignoreUnclosed", "controlChar", "back", "token", "require_at_rule", "__commonJSMin", "exports", "module", "Container", "AtRule", "defaults", "children", "require_root", "__commonJSMin", "exports", "module", "Container", "LazyResult", "Processor", "Root", "defaults", "child", "sample", "type", "nodes", "node", "ignore", "index", "opts", "dependant", "require_list", "__commonJSMin", "exports", "module", "list", "string", "spaces", "separators", "last", "array", "current", "split", "func", "inQuote", "prevQuote", "escape", "letter", "require_rule", "__commonJSMin", "exports", "module", "Container", "list", "Rule", "defaults", "values", "match", "sep", "require_parser", "__commonJSMin", "exports", "module", "Declaration", "tokenizer", "Comment", "AtRule", "Root", "Rule", "SAFE_COMMENT_NEIGHBOR", "findLastWithPosition", "tokens", "i", "token", "pos", "Parser", "input", "node", "type", "prev", "shift", "last", "open", "params", "brackets", "colon", "founded", "j", "element", "text", "match", "customProperty", "firstSpaces", "next", "string", "cache", "str", "offset", "start", "end", "bracket", "prop", "length", "value", "clean", "raw", "all", "lastTokenType", "spaces", "from", "result", "require_parse", "__commonJSMin", "exports", "module", "Container", "Parser", "Input", "parse", "css", "opts", "input", "parser", "e", "require_lazy_result", "__commonJSMin", "exports", "module", "isClean", "my", "MapGenerator", "stringify", "Container", "Document", "warnOnce", "Result", "parse", "Root", "TYPE_TO_CLASS_NAME", "PLUGIN_PROPS", "NOT_VISITORS", "CHILDREN", "isPromise", "obj", "getEvents", "node", "key", "type", "toStack", "events", "cleanMarks", "i", "postcss", "LazyResult", "_LazyResult", "processor", "css", "opts", "root", "parser", "error", "plugin", "onRejected", "onFinally", "err", "add", "cb", "event", "filter", "promise", "stack", "e", "visitor", "roots", "subRoot", "str", "data", "onFulfilled", "visitors", "visit", "iterator", "child", "dependant", "require_no_work_result", "__commonJSMin", "exports", "module", "MapGenerator", "stringify", "warnOnce", "parse", "Result", "NoWorkResult", "processor", "css", "opts", "root", "str", "self", "map", "generatedCSS", "generatedMap", "onRejected", "onFinally", "onFulfilled", "parser", "error", "require_processor", "__commonJSMin", "exports", "module", "NoWorkResult", "LazyResult", "Document", "Root", "Processor", "plugins", "normalized", "i", "css", "opts", "plugin", "require_fromJSON", "__commonJSMin", "exports", "module", "Declaration", "PreviousMap", "Comment", "AtRule", "Input", "Root", "Rule", "fromJSON", "json", "inputs", "ownInputs", "defaults", "input", "inputHydrated", "inputId", "source", "require_postcss", "__commonJSMin", "exports", "module", "CssSyntaxError", "Declaration", "LazyResult", "Container", "Processor", "stringify", "fromJSON", "Document", "Warning", "Comment", "AtRule", "Result", "Input", "parse", "list", "Rule", "Root", "Node", "postcss", "plugins", "name", "initializer", "warningPrinted", "creator", "args", "transformer", "cache", "css", "processOpts", "pluginOpts", "defaults", "require_unesc", "__commonJSMin", "exports", "module", "unesc", "gobbleHex", "str", "lower", "hex", "spaceTerminated", "i", "code", "valid", "codePoint", "isSurrogate", "CONTAINS_ESCAPE", "needToProcess", "ret", "gobbled", "require_getProp", "__commonJSMin", "exports", "module", "getProp", "obj", "_len", "props", "_key", "prop", "require_ensureObject", "__commonJSMin", "exports", "module", "ensureObject", "obj", "_len", "props", "_key", "prop", "require_stripComments", "__commonJSMin", "exports", "module", "stripComments", "str", "s", "commentStart", "lastEnd", "commentEnd", "require_util", "__commonJSMin", "exports", "_unesc", "_interopRequireDefault", "_getProp", "_ensureObject", "_stripComments", "obj", "require_node", "__commonJSMin", "exports", "module", "_util", "_defineProperties", "target", "props", "i", "descriptor", "_createClass", "Constructor", "protoProps", "staticProps", "cloneNode", "obj", "parent", "cloned", "value", "type", "j", "Node", "opts", "_proto", "index", "overrides", "name", "valueEscaped", "originalValue", "originalEscaped", "line", "column", "rawSpace", "raw", "require_types", "__commonJSMin", "exports", "TAG", "STRING", "SELECTOR", "ROOT", "PSEUDO", "NESTING", "ID", "COMMENT", "COMBINATOR", "CLASS", "ATTRIBUTE", "UNIVERSAL", "require_container", "__commonJSMin", "exports", "module", "_node", "_interopRequireDefault", "types", "_interopRequireWildcard", "_getRequireWildcardCache", "nodeInterop", "cacheBabelInterop", "cacheNodeInterop", "obj", "cache", "newObj", "hasPropertyDescriptor", "key", "desc", "_createForOfIteratorHelperLoose", "o", "allowArrayLike", "it", "_unsupportedIterableToArray", "i", "minLen", "_arrayLikeToArray", "n", "arr", "len", "arr2", "_defineProperties", "target", "props", "descriptor", "_createClass", "Constructor", "protoProps", "staticProps", "_inheritsLoose", "subClass", "superClass", "_setPrototypeOf", "p", "Container", "_Node", "opts", "_this", "_proto", "selector", "index", "child", "id", "_iterator", "_step", "node", "oldNode", "newNode", "oldIndex", "line", "col", "found", "foundChild", "callback", "result", "_this2", "_this3", "_this4", "_this5", "_this6", "_this7", "_this8", "_this9", "_this10", "_this11", "current", "memo", "split", "require_root", "__commonJSMin", "exports", "module", "_container", "_interopRequireDefault", "_types", "obj", "_defineProperties", "target", "props", "i", "descriptor", "_createClass", "Constructor", "protoProps", "staticProps", "_inheritsLoose", "subClass", "superClass", "_setPrototypeOf", "o", "p", "Root", "_Container", "opts", "_this", "_proto", "str", "memo", "selector", "message", "options", "handler", "require_selector", "__commonJSMin", "exports", "module", "_container", "_interopRequireDefault", "_types", "obj", "_inheritsLoose", "subClass", "superClass", "_setPrototypeOf", "o", "p", "Selector", "_Container", "opts", "_this", "require_cssesc", "__commonJSMin", "exports", "module", "object", "hasOwnProperty", "merge", "options", "defaults", "result", "key", "regexAnySingleEscape", "regexSingleEscape", "regexExcessiveSpaces", "cssesc", "string", "quote", "isIdentifier", "firstChar", "output", "counter", "length", "character", "codePoint", "value", "extra", "$0", "$1", "$2", "require_className", "__commonJSMin", "exports", "module", "_cssesc", "_interopRequireDefault", "_util", "_node", "_types", "obj", "_defineProperties", "target", "props", "i", "descriptor", "_createClass", "Constructor", "protoProps", "staticProps", "_inheritsLoose", "subClass", "superClass", "_setPrototypeOf", "o", "p", "ClassName", "_Node", "opts", "_this", "_proto", "v", "escaped", "require_comment", "__commonJSMin", "exports", "module", "_node", "_interopRequireDefault", "_types", "obj", "_inheritsLoose", "subClass", "superClass", "_setPrototypeOf", "o", "p", "Comment", "_Node", "opts", "_this", "require_id", "__commonJSMin", "exports", "module", "_node", "_interopRequireDefault", "_types", "obj", "_inheritsLoose", "subClass", "superClass", "_setPrototypeOf", "o", "p", "ID", "_Node", "opts", "_this", "_proto", "require_namespace", "__commonJSMin", "exports", "module", "_cssesc", "_interopRequireDefault", "_util", "_node", "obj", "_defineProperties", "target", "props", "i", "descriptor", "_createClass", "Constructor", "protoProps", "staticProps", "_inheritsLoose", "subClass", "superClass", "_setPrototypeOf", "o", "p", "Namespace", "_Node", "_proto", "value", "namespace", "escaped", "ns", "require_tag", "__commonJSMin", "exports", "module", "_namespace", "_interopRequireDefault", "_types", "obj", "_inheritsLoose", "subClass", "superClass", "_setPrototypeOf", "o", "p", "Tag", "_Namespace", "opts", "_this", "require_string", "__commonJSMin", "exports", "module", "_node", "_interopRequireDefault", "_types", "obj", "_inheritsLoose", "subClass", "superClass", "_setPrototypeOf", "o", "p", "String", "_Node", "opts", "_this", "require_pseudo", "__commonJSMin", "exports", "module", "_container", "_interopRequireDefault", "_types", "obj", "_inheritsLoose", "subClass", "superClass", "_setPrototypeOf", "o", "p", "Pseudo", "_Container", "opts", "_this", "_proto", "params", "require_browser", "__commonJSMin", "exports", "module", "deprecate", "fn", "msg", "config", "warned", "deprecated", "name", "val", "require_attribute", "__commonJSMin", "exports", "unescapeValue", "_cssesc", "_interopRequireDefault", "_unesc", "_namespace", "_types", "_CSSESC_QUOTE_OPTIONS", "obj", "_defineProperties", "target", "props", "i", "descriptor", "_createClass", "Constructor", "protoProps", "staticProps", "_inheritsLoose", "subClass", "superClass", "_setPrototypeOf", "o", "p", "deprecate", "WRAPPED_IN_QUOTES", "warnOfDeprecatedValueAssignment", "warnOfDeprecatedQuotedAssignment", "warnOfDeprecatedConstructor", "value", "deprecatedUsage", "quoteMark", "unescaped", "m", "handleDeprecatedContructorOpts", "opts", "_unescapeValue", "Attribute", "_Namespace", "_this", "_proto", "options", "cssescopts", "CSSESC_QUOTE_OPTIONS", "escaped", "v", "numSingleQuotes", "numDoubleQuotes", "pref", "quote", "quoteValue", "rawValue", "prop", "name", "attrSpaces", "spaces", "rawSpaces", "spaceName", "concat", "defaultAttrConcat", "count", "attributeSpaces", "operatorSpaces", "operator", "valueSpaces", "insensitiveSpaces", "_this2", "selector", "attrValue", "qm", "_unescapeValue2", "insensitive", "require_universal", "__commonJSMin", "exports", "module", "_namespace", "_interopRequireDefault", "_types", "obj", "_inheritsLoose", "subClass", "superClass", "_setPrototypeOf", "o", "p", "Universal", "_Namespace", "opts", "_this", "require_combinator", "__commonJSMin", "exports", "module", "_node", "_interopRequireDefault", "_types", "obj", "_inheritsLoose", "subClass", "superClass", "_setPrototypeOf", "o", "p", "Combinator", "_Node", "opts", "_this", "require_nesting", "__commonJSMin", "exports", "module", "_node", "_interopRequireDefault", "_types", "obj", "_inheritsLoose", "subClass", "superClass", "_setPrototypeOf", "o", "p", "Nesting", "_Node", "opts", "_this", "require_sortAscending", "__commonJSMin", "exports", "module", "sortAscending", "list", "a", "b", "require_tokenTypes", "__commonJSMin", "exports", "ampersand", "asterisk", "at", "comma", "colon", "semicolon", "openParenthesis", "closeParenthesis", "openSquare", "closeSquare", "dollar", "tilde", "caret", "plus", "equals", "pipe", "greaterThan", "space", "singleQuote", "doubleQuote", "slash", "bang", "backslash", "cr", "feed", "newline", "tab", "str", "comment", "word", "combinator", "require_tokenize", "__commonJSMin", "exports", "tokenize", "t", "_interopRequireWildcard", "_unescapable", "_wordDelimiters", "_getRequireWildcardCache", "nodeInterop", "cacheBabelInterop", "cacheNodeInterop", "obj", "cache", "newObj", "hasPropertyDescriptor", "key", "desc", "unescapable", "wordDelimiters", "hex", "hexChars", "i", "consumeWord", "css", "start", "next", "code", "consumeEscape", "hexDigits", "FIELDS", "input", "tokens", "_css", "length", "offset", "line", "end", "content", "endColumn", "endLine", "escaped", "escapePos", "last", "lines", "nextLine", "nextOffset", "quote", "tokenType", "unclosed", "what", "fix", "require_parser", "__commonJSMin", "exports", "module", "_root", "_interopRequireDefault", "_selector", "_className", "_comment", "_id", "_tag", "_string", "_pseudo", "_attribute", "_interopRequireWildcard", "_universal", "_combinator", "_nesting", "_sortAscending", "_tokenize", "tokens", "types", "_util", "_WHITESPACE_TOKENS", "_Object$assign", "_getRequireWildcardCache", "nodeInterop", "cacheBabelInterop", "cacheNodeInterop", "obj", "cache", "newObj", "hasPropertyDescriptor", "key", "desc", "_defineProperties", "target", "props", "i", "descriptor", "_createClass", "Constructor", "protoProps", "staticProps", "WHITESPACE_TOKENS", "WHITESPACE_EQUIV_TOKENS", "tokenStart", "token", "tokenEnd", "getSource", "startLine", "startColumn", "endLine", "endColumn", "getTokenSource", "getTokenSourceSpan", "startToken", "endToken", "unescapeProp", "node", "prop", "value", "indexesOf", "array", "item", "indexes", "uniqs", "list", "Parser", "rule", "options", "rootSource", "selector", "_proto", "_this", "message", "errorOptions", "attr", "startingToken", "len", "pos", "spaceBefore", "commentBefore", "lastAdded", "spaceAfterMeaningfulToken", "content", "next", "prevContent", "existingComment", "rawValue", "oldRawValue", "_rawValue", "_unescaped", "_oldRawValue", "oldValue", "insensitive", "_unescapeValue", "unescaped", "quoteMark", "lastComment", "rawLastComment", "lastValue", "rawLastValue", "stopPosition", "startPosition", "nodes", "space", "spaces", "firstToken", "lastToken", "requiredSpace", "_this2", "rawSpace", "n", "rawSpaceBefore", "result", "position", "nameRaw", "name", "raws", "_this3", "nextSigTokenPos", "last", "_this$convertWhitespa", "spaceOrDescendantSelectorNodes", "_this$convertWhitespa2", "_space", "_rawSpace", "_this$convertWhitespa3", "_space2", "_rawSpace2", "current", "opts", "before", "nextContent", "unbalanced", "parenStart", "parenValue", "parenEnd", "_this4", "pseudoStr", "first", "length", "namespace", "nextToken", "firstCallback", "_this5", "word", "hasClass", "escapedDot", "isKeyframesPercent", "hasId", "interpolations", "hashIndex", "indices", "ind", "index", "sourceIndex", "source", "classNameOpts", "idOpts", "tagOpts", "throwOnParenthesis", "description", "found", "an", "required", "searchPosition", "require_processor", "__commonJSMin", "exports", "module", "_parser", "_interopRequireDefault", "obj", "Processor", "func", "options", "_proto", "rule", "merged", "parser", "_this", "resolve", "reject", "root", "transform", "string", "e", "result", "require_constructors", "__commonJSMin", "exports", "_attribute", "_interopRequireDefault", "_className", "_combinator", "_comment", "_id", "_nesting", "_pseudo", "_root", "_selector", "_string", "_tag", "_universal", "obj", "attribute", "opts", "className", "combinator", "comment", "id", "nesting", "pseudo", "root", "selector", "string", "tag", "universal", "require_guards", "__commonJSMin", "exports", "isContainer", "isNamespace", "isNode", "isPseudoClass", "isPseudoElement", "_types", "_IS_TYPE", "IS_TYPE", "node", "isNodeType", "type", "isAttribute", "isClassName", "isCombinator", "isComment", "isIdentifier", "isNesting", "isPseudo", "isRoot", "isSelector", "isString", "isTag", "isUniversal", "require_selectors", "__commonJSMin", "exports", "_types", "key", "_constructors", "_guards", "require_dist", "__commonJSMin", "exports", "module", "_processor", "_interopRequireDefault", "selectors", "_interopRequireWildcard", "_getRequireWildcardCache", "nodeInterop", "cacheBabelInterop", "cacheNodeInterop", "obj", "cache", "newObj", "hasPropertyDescriptor", "key", "desc", "parser", "processor", "_default", "require_postcss_nested", "__commonJSMin", "exports", "module", "Rule", "AtRule", "parser", "parse", "rawSelector", "rule", "nodes", "parsed", "e", "interpolateAmpInSelector", "parent", "replaced", "node", "clonedParent", "mergeSelectors", "child", "merged", "sel", "parentNode", "selector", "breakOut", "after", "prev", "nextPrev", "createFnAtruleChilds", "bubble", "atruleChilds", "atrule", "bubbling", "mergeSels", "children", "rootRuleMergeSel", "clone", "pickDeclarations", "declarations", "atruleNames", "defaults", "custom", "list", "name", "parseRootRuleParams", "params", "braceBlock", "bits", "allowlist", "rules", "escapes", "getAncestorRules", "leaf", "lineage", "unwrapRootRule", "rootRuleEscapes", "topEscaped", "topEscapedIdx", "breakoutLeaf", "breakoutRoot", "i", "oldClone", "restRoot", "arr", "oldRoot", "nextSibs", "next", "normalizeRootRule", "type", "selectorBlock", "hasRootRule", "opts", "unwrap", "rootRuleName", "preserveEmpty", "root", "unwrapped", "copyDeclarations", "require_index_es5", "__commonJSMin", "exports", "module", "pattern", "callback", "dashChar", "char", "camelCaseCSS", "property", "require_objectifier", "__commonJSMin", "exports", "module", "camelcase", "UNITLESS", "atRule", "node", "process", "name", "result", "child", "body", "i", "value", "require_parser", "__commonJSMin", "exports", "module", "postcss", "IMPORTANT", "UNITLESS", "dashify", "str", "decl", "parent", "name", "value", "atRule", "parts", "node", "parse", "obj", "i", "root", "require_process_result", "__commonJSMin", "exports", "module", "objectify", "result", "warn", "source", "require_async", "__commonJSMin", "exports", "module", "postcss", "processResult", "parse", "plugins", "processor", "input", "result", "require_sync", "__commonJSMin", "exports", "module", "postcss", "processResult", "parse", "plugins", "processor", "input", "result", "require_postcss_js", "__commonJSMin", "exports", "module", "objectify", "parse", "async", "sync", "require_safe_parser", "__commonJSMin", "exports", "module", "tokenizer", "Comment", "Parser", "SafeParser", "token", "node", "pos", "text", "match", "tokens", "i", "colon", "nextStart", "prevEnd", "other", "spaces", "require_safe_parse", "__commonJSMin", "exports", "module", "Input", "SafeParser", "css", "opts", "input", "parser", "require_types", "__commonJSMin", "exports", "tokenize", "source", "shouldClose", "isDelimiter", "isStringDelimiter", "isWhitespace", "shouldAddToken", "createToken", "getCommentStartType", "isCommentEnd", "getUnclosedComment", "offset", "tokens", "previousChar", "buffer", "inComment", "inString", "start", "nextCharIndex", "ch", "pushBuffer", "type", "end", "exports", "isComment", "type", "exports", "isString", "isStringDelimiter", "char", "isWhitespace", "createToken", "value", "start", "end", "getJSCommentStartType", "ch", "source", "nextCharIndex", "getMultilineCommentStartType", "isCommentEnd", "commentType", "_source", "_nextCharIndex", "previousChar", "getUnclosedComment", "getText", "tokens", "startIndex", "upToIndex", "res", "i", "groupTokens", "trimTokens", "shouldTrimToken", "last", "arr", "Seeker", "tokens", "num", "type", "start", "end", "isEndError", "token", "block", "endIndex", "handleToken", "ast", "source", "exports", "__exportStar", "exports", "core_1", "tokenizeSelector", "source", "options", "isDelimiter", "char", "previousChar", "exports", "core_1", "createEmptySelector", "exports", "createEmptyNth", "createCombinatorAst", "value", "type", "start", "end", "createCommentAst", "isCombinatorToken", "token", "isNamespacedToken", "isNamespacedAst", "ensureSelector", "selectors", "startToken", "lastSelector", "trimCombinators", "selector", "nodes", "firstNode", "lastNode", "index", "current", "lastComment", "helpers_1", "core_1", "NthParser", "_NthParser", "name", "selectorNode", "s", "token", "type", "nextToken", "lastNode", "value", "oddEventMatch", "isInvalid", "matchValidStart", "step", "offset", "stepNode", "offsetNode", "ofNode", "exports", "tokenizer_1", "nth_parser_1", "helpers_1", "core_1", "parseCssSelector", "source", "options", "parseTokens", "exports", "tokens", "handleToken", "token", "selectors", "t", "currentSelector", "ast", "comments", "name", "firstComments", "type", "endToken", "secondComments", "block", "lastCombinatorAst", "lastAst", "initialSpaceCombIndex", "next", "nextCombinator", "initialSpace", "spaceValue", "nodeAfterInitial", "prevAst", "prevInvalidAst", "beforeComments", "i", "current", "target", "searchIndex", "potentialAfterComments", "nextToken", "validNamespace", "validTarget", "invalid", "nsAst", "prev", "res", "nthSelector", "nthParser", "newSelector", "ended", "lastSelector", "selector", "require_ast_types", "__commonJSMin", "exports", "nth_parser_1", "stringifySelectorAst", "value", "stringifySelectors", "stringifyNode", "exports", "printers", "node", "stringifyNested", "stringifyNamespace", "before", "after", "selectors", "result", "nthNode", "namespace", "ns", "comment", "nestEnd", "walk", "topNode", "visit", "options", "toVisit", "context", "createWalkContext", "current", "skipAmount", "isWithNodes", "exports", "prevIndex", "prevParents", "currentParents", "currentParent", "node", "walk_1", "groupCompoundSelectors", "input", "options", "context", "createCompoundContext", "node", "_index", "_nodes", "parents", "nodes", "nested", "exports", "splitPseudoElements", "output", "lastSelector", "lastCompound", "lastCompoundInitialPart", "handleNode", "isCommentWithNoSpacing", "innerNode", "splitCompoundSelectors", "inputSelectors", "inputSelector", "outputSelector", "walk_1", "calcSpecificity", "ast", "result", "node", "customPseudoClass", "exports", "mostSpecificInnerSelector", "pseudoClassPlusMostSpecificInnerSelector", "highest", "selector", "currentSpecificity", "compareSpecificity", "addSpecificity", "a", "b", "i", "specificityDiff", "to", "from", "selector_parser_1", "exports", "__exportStar", "stringify_1", "walk_1", "compound_1", "specificity_1", "require_lodash", "__commonJSMin", "exports", "module", "LARGE_ARRAY_SIZE", "HASH_UNDEFINED", "MAX_SAFE_INTEGER", "argsTag", "arrayTag", "boolTag", "dateTag", "errorTag", "funcTag", "genTag", "mapTag", "numberTag", "objectTag", "promiseTag", "regexpTag", "setTag", "stringTag", "symbolTag", "weakMapTag", "arrayBufferTag", "dataViewTag", "float32Tag", "float64Tag", "int8Tag", "int16Tag", "int32Tag", "uint8Tag", "uint8ClampedTag", "uint16Tag", "uint32Tag", "reRegExpChar", "reFlags", "reIsHostCtor", "reIsUint", "cloneableTags", "freeGlobal", "freeSelf", "root", "freeExports", "freeModule", "moduleExports", "addMapEntry", "map", "pair", "addSetEntry", "set", "value", "arrayEach", "array", "iteratee", "index", "length", "arrayPush", "values", "offset", "arrayReduce", "accumulator", "initAccum", "baseTimes", "n", "result", "getValue", "object", "key", "isHostObject", "mapToArray", "overArg", "func", "transform", "arg", "setToArray", "arrayProto", "funcProto", "objectProto", "coreJsData", "maskSrcKey", "uid", "funcToString", "hasOwnProperty", "objectToString", "reIsNative", "Buffer", "Symbol", "Uint8Array", "getPrototype", "objectCreate", "propertyIsEnumerable", "splice", "nativeGetSymbols", "nativeIsBuffer", "nativeKeys", "DataView", "getNative", "Map", "Promise", "Set", "WeakMap", "nativeCreate", "dataViewCtorString", "toSource", "mapCtorString", "promiseCtorString", "setCtorString", "weakMapCtorString", "symbolProto", "symbolValueOf", "Hash", "entries", "entry", "hashClear", "hashDelete", "hashGet", "data", "hashHas", "hashSet", "ListCache", "listCacheClear", "listCacheDelete", "assocIndexOf", "lastIndex", "listCacheGet", "listCacheHas", "listCacheSet", "MapCache", "mapCacheClear", "mapCacheDelete", "getMapData", "mapCacheGet", "mapCacheHas", "mapCacheSet", "Stack", "stackClear", "stackDelete", "stackGet", "stackHas", "stackSet", "cache", "pairs", "arrayLikeKeys", "inherited", "isArray", "isArguments", "skipIndexes", "isIndex", "assignValue", "objValue", "eq", "baseAssign", "source", "copyObject", "keys", "baseClone", "isDeep", "isFull", "customizer", "stack", "isObject", "isArr", "initCloneArray", "copyArray", "tag", "getTag", "isFunc", "isBuffer", "cloneBuffer", "initCloneObject", "copySymbols", "initCloneByTag", "stacked", "props", "getAllKeys", "subValue", "baseCreate", "proto", "baseGetAllKeys", "keysFunc", "symbolsFunc", "baseGetTag", "baseIsNative", "isMasked", "pattern", "isFunction", "baseKeys", "isPrototype", "buffer", "cloneArrayBuffer", "arrayBuffer", "cloneDataView", "dataView", "cloneMap", "cloneFunc", "cloneRegExp", "regexp", "cloneSet", "cloneSymbol", "symbol", "cloneTypedArray", "typedArray", "newValue", "getSymbols", "isKeyable", "stubArray", "Ctor", "ctorString", "type", "cloneDeep", "other", "isArrayLikeObject", "isArrayLike", "isLength", "isObjectLike", "stubFalse", "core_1", "parseImports", "source", "blockStart", "blockEnd", "taggedImportSupport", "strictSemiColon", "findImports", "isDelimiter", "shouldAddToken", "exports", "char", "type", "isImportBlockEndError", "token", "tokens", "imports", "s", "t", "startTokenIndex", "errors", "defaultName", "star", "named", "tagged", "from", "block", "res", "processNamedBlock", "hasComma", "i", "_a", "tagTokens", "tagName", "hasEnded", "j", "pushToken", "name", "require_parse", "__commonJSMin", "exports", "module", "openParentheses", "closeParentheses", "singleQuote", "doubleQuote", "backslash", "slash", "comma", "colon", "star", "uLower", "uUpper", "plus", "isUnicodeRange", "input", "tokens", "value", "next", "quote", "prev", "token", "escape", "escapePos", "whitespacePos", "parenthesesOpenPos", "pos", "code", "max", "stack", "balanced", "parent", "name", "before", "after", "require_walk", "__commonJSMin", "exports", "module", "walk", "nodes", "cb", "bubble", "i", "max", "node", "result", "require_stringify", "__commonJSMin", "exports", "module", "stringifyNode", "node", "custom", "type", "value", "buf", "customResult", "stringify", "nodes", "result", "i", "require_unit", "__commonJSMin", "exports", "module", "minus", "plus", "dot", "exp", "EXP", "likeNumber", "value", "code", "nextCode", "nextNextCode", "pos", "length", "require_lib", "__commonJSMin", "exports", "module", "parse", "walk", "stringify", "ValueParser", "value", "cb", "bubble", "require_lodash", "__commonJSMin", "exports", "module", "LARGE_ARRAY_SIZE", "HASH_UNDEFINED", "MAX_SAFE_INTEGER", "argsTag", "arrayTag", "boolTag", "dateTag", "errorTag", "funcTag", "genTag", "mapTag", "numberTag", "objectTag", "promiseTag", "regexpTag", "setTag", "stringTag", "symbolTag", "weakMapTag", "arrayBufferTag", "dataViewTag", "float32Tag", "float64Tag", "int8Tag", "int16Tag", "int32Tag", "uint8Tag", "uint8ClampedTag", "uint16Tag", "uint32Tag", "reRegExpChar", "reFlags", "reIsHostCtor", "reIsUint", "cloneableTags", "freeGlobal", "freeSelf", "root", "freeExports", "freeModule", "moduleExports", "addMapEntry", "map", "pair", "addSetEntry", "set", "value", "arrayEach", "array", "iteratee", "index", "length", "arrayPush", "values", "offset", "arrayReduce", "accumulator", "initAccum", "baseTimes", "n", "result", "getValue", "object", "key", "isHostObject", "mapToArray", "overArg", "func", "transform", "arg", "setToArray", "arrayProto", "funcProto", "objectProto", "coreJsData", "maskSrcKey", "uid", "funcToString", "hasOwnProperty", "objectToString", "reIsNative", "Buffer", "Symbol", "Uint8Array", "getPrototype", "objectCreate", "propertyIsEnumerable", "splice", "nativeGetSymbols", "nativeIsBuffer", "nativeKeys", "DataView", "getNative", "Map", "Promise", "Set", "WeakMap", "nativeCreate", "dataViewCtorString", "toSource", "mapCtorString", "promiseCtorString", "setCtorString", "weakMapCtorString", "symbolProto", "symbolValueOf", "Hash", "entries", "entry", "hashClear", "hashDelete", "hashGet", "data", "hashHas", "hashSet", "ListCache", "listCacheClear", "listCacheDelete", "assocIndexOf", "lastIndex", "listCacheGet", "listCacheHas", "listCacheSet", "MapCache", "mapCacheClear", "mapCacheDelete", "getMapData", "mapCacheGet", "mapCacheHas", "mapCacheSet", "Stack", "stackClear", "stackDelete", "stackGet", "stackHas", "stackSet", "cache", "pairs", "arrayLikeKeys", "inherited", "isArray", "isArguments", "skipIndexes", "isIndex", "assignValue", "objValue", "eq", "baseAssign", "source", "copyObject", "keys", "baseClone", "isDeep", "isFull", "customizer", "stack", "isObject", "isArr", "initCloneArray", "copyArray", "tag", "getTag", "isFunc", "isBuffer", "cloneBuffer", "initCloneObject", "copySymbols", "initCloneByTag", "stacked", "props", "getAllKeys", "subValue", "baseCreate", "proto", "baseGetAllKeys", "keysFunc", "symbolsFunc", "baseGetTag", "baseIsNative", "isMasked", "pattern", "isFunction", "baseKeys", "isPrototype", "buffer", "cloneArrayBuffer", "arrayBuffer", "cloneDataView", "dataView", "cloneMap", "cloneFunc", "cloneRegExp", "regexp", "cloneSet", "cloneSymbol", "symbol", "cloneTypedArray", "typedArray", "newValue", "getSymbols", "isKeyable", "stubArray", "Ctor", "ctorString", "type", "cloneDeepWith", "other", "isArrayLikeObject", "isArrayLike", "isLength", "isObjectLike", "stubFalse", "require_Parser", "__commonJSMin", "exports", "module", "ignoreFunction", "createReturningFunction", "value", "Parser", "states", "result", "name", "state", "regExps", "iterator", "str", "processState", "statePart", "key", "total", "r", "actions", "pos", "fn", "regExpStr", "initialState", "string", "context", "currentState", "currentIndex", "regExp", "match", "i", "action", "ret", "require_uni_regexp", "__commonJSMin", "exports", "module", "require_parse", "__commonJSMin", "exports", "module", "Parser", "uniRegexp", "unescape", "str", "commentMatch", "match", "content", "typeMatch", "type", "name", "pseudoClassStartMatch", "newToken", "nestedPseudoClassStartMatch", "after", "newSelector", "nestedEnd", "before", "operatorMatch", "operator", "token", "spacingMatch", "elementMatch", "namespace", "universalMatch", "attributeMatch", "invalidMatch", "irrelevantSpacingStartMatch", "irrelevantSpacingEndMatch", "nextSelectorMatch", "addToCurrent", "bracketStart", "bracketEnd", "getSelectors", "selectors", "selectorsSecondHalf", "selector", "parser", "parse", "selectorNode", "rootNode", "require_stringify", "__commonJSMin", "exports", "module", "uniRegexp", "identifierEscapeRegexp", "escape", "str", "identifier", "stringifyWithoutBeforeAfter", "tree", "stringify", "require_parseValues", "__commonJSMin", "exports", "module", "Parser", "commentMatch", "match", "content", "spacingMatch", "item", "initialSpacingMatch", "endSpacingMatch", "unescapeString", "all", "unicode", "otherCharacter", "C", "stringMatch", "value", "commaMatch", "spacing", "newValue", "itemMatch", "nestedItemMatch", "name", "nestedItemEndMatch", "remaining", "urlMatch", "innerSpacingBefore", "innerSpacingAfter", "parser", "parseValues", "str", "valueNode", "rootNode", "require_stringifyValues", "__commonJSMin", "exports", "module", "cssesc", "stringify", "escape", "str", "stringType", "stringifyWithoutBeforeAfter", "tree", "start", "end", "require_lib", "__commonJSMin", "exports", "invalid", "value", "exports", "literal", "cssWideKeyword", "space", "comment", "customIdent", "dashedIdent", "string", "integer", "number", "unknownUnit", "length", "angle", "percentage", "flex", "time", "frequency", "resolution", "call", "color", "exports", "core_1", "tokenizeValue", "source", "options", "isDelimiter", "char", "previousChar", "ch", "exports", "stringifyCSSValue", "ast", "stringifyNode", "result", "node", "exports", "stringifyByType", "before", "value", "after", "args", "unit", "ast_types_1", "units_1", "tokenizer_1", "value_stringify_1", "core_1", "parseCSSValue", "source", "_options", "tokens", "handleToken", "exports", "token", "ast", "type", "value", "start", "end", "firstSpace", "before", "after", "parseNumber", "ident", "collectIdent", "args", "nextToken", "_ast", "_source", "collectedValue", "pickAmount", "current", "startMatch", "isStartOfNumber", "numberValue", "numberUnit", "isNumber", "fullNumberMatch", "startWithValidNumber", "peekCount", "nextValue", "matchedNumber", "leftover", "isInteger", "integerRegExp", "nodeType", "knownUnits", "units", "unit", "NumberRegExp", "validNumberRegex", "r", "numVal", "defineProperty", "_config", "exports", "node", "expectedType", "define_property_1", "exports", "index", "total", "define_property_1", "subMarginPlacements", "exports", "_node", "amountOfType", "indexOfType", "core_1", "isDelimiter", "char", "isWhitespace", "exports", "parseValueSyntax", "source", "parseTokens", "literal", "name", "enclosed", "multipliers", "keyword", "property", "range", "dataType", "group", "nodes", "juxtaposing", "bar", "doubleAmpersand", "doubleBar", "tokens", "handleToken", "token", "ast", "_source", "s", "closed", "nameBlock", "node", "type", "getLiteralValueType", "t", "min", "sep", "max", "end", "parseNumber", "res", "applyPrecedence", "isRangeMultiplier", "lastParsedNode", "isLowLevelGroup", "typeToRange", "start", "applyJuxtaposing", "results", "order", "i", "j", "before", "after", "value", "last", "prev", "stringify", "child", "__exportStar", "exports", "value_parser_1", "value_stringify_1", "define_property_1", "background_1", "margin_1", "value_syntax_parser_1", "require_vendor_prefixes", "__commonJSMin", "exports", "module", "require_is_vendor_prefixed", "__commonJSMin", "exports", "module", "vendorPrefixes", "property", "module", "cachedProcessFile", "processor", "readFileSync", "postProcessors", "cache", "process", "filePath", "invalidateCache", "content", "cached", "processContent", "value", "postProcessor", "add", "import_postcss", "postcss_default", "postcss", "stringify", "fromJSON", "plugin", "parse", "list", "document", "comment", "atRule", "rule", "decl", "root", "CssSyntaxError", "Declaration", "Container", "Processor", "Document", "Comment", "Warning", "AtRule", "Result", "Input", "Rule", "Root", "Node", "import_postcss_nested", "import_index", "postcss_js_default", "index", "objectify", "parse", "async", "sync", "import_postcss_safe_parser", "processor", "postcss_default", "postcssNested", "cssObjectToAst", "cssObject", "sourceFile", "postcss_js_default", "Diagnostics", "reports", "diagnostic", "context", "node", "createDiagnosticReporter", "code", "severity", "message", "func", "args", "nativePseudoClasses", "CSSWideKeywords", "reservedFunctionalPseudoClasses", "knownPseudoClassesWithNestedSelectors", "name", "nativePseudoElements", "nativeFunctionsDic", "import_path", "import_css_selector_parser", "import_lodash", "stringifySelector", "walkSelector", "selectorAstCache", "parseSelectorWithCache", "selector", "options", "cachedValue", "cloneDeep", "cloneSelector", "s", "isSimpleSelector", "foundType", "node", "flattenFunctionalSelector", "convertToSelector", "convertToClass", "castedNode", "convertToInvalid", "node", "castedNode", "convertToSelector", "convertToPseudoClass", "name", "nestedSelectors", "createCombinatorSelector", "partial", "type", "isInPseudoClassContext", "parents", "parent", "matchTypeAndValue", "a", "b", "isCompRoot", "isNestedNode", "scopeNestedSelector", "scopeSelectorAst", "nestedSelectorAst", "rootScopeLevel", "isAnchor", "resultSelectors", "targetAst", "scopeAst", "outputAst", "cloneDeep", "first", "walkSelector", "parentRef", "globalSelector", "startWithScoping", "i", "nestedMixRoot", "nodes", "stringifySelector", "import_css_selector_parser", "import_css_selector_parser", "import_lodash", "transformInlineCustomSelectorMap", "customSelectors", "report", "result", "link", "name", "path", "ast", "transformInlineCustomSelectors", "nestedName", "selector", "type", "unknown", "isCustomSelectorNode", "node", "inputSelectors", "getCustomSelector", "transformInlineCustomSelector", "inputSelector", "insertions", "index", "_nodes", "parents", "targetSelectors", "parent", "selectorIndex", "progress", "overflow", "currentSelector", "output", "updateSelector", "cloneDeep", "run", "progressIdx", "i", "isChildOfAtRule", "rule", "atRuleName", "currentParent", "isInConditionalGroup", "node", "includeRoot", "parent", "createSubsetAst", "root", "selectorPrefix", "mixinTarget", "isRoot", "getCustomSelector", "isNestedInMixin", "prefixSelectorList", "parseSelectorWithCache", "prefixType", "containsPrefix", "containsMatchInFirstChunk", "mixinRoot", "selectorAst", "ast", "scopeNestedSelector", "transformInlineCustomSelectors", "matchesSelectors", "selector", "stringifySelector", "selectorNode", "fixChunkOrdering", "replaceTargetWithMixinAnchor", "clonedRule", "scopeSelector", "atruleHasMixin", "atRuleSubset", "atRule", "stMixinMarker", "isStMixinMarker", "walkSelector", "matchTypeAndValue", "convertToSelector", "compound", "simpleNodes", "i", "childNode", "chunk", "isMatch", "innerSelectorNode", "findRule", "test", "statement", "found", "declarationIndex", "isSimpleSelector", "acc", "isSimple", "isValidDeclaration", "decl", "utilDiagnostics", "createDiagnosticReporter", "mergeValue", "mergeRules", "mixinAst", "rule", "mixinDecl", "report", "useNestingAsAnchor", "mixinRoot", "nestedInKeyframes", "isChildOfAtRule", "anchorSelector", "stMixinMarker", "anchorNodeCheck", "isStMixinMarker", "mixinRule", "selector", "scopeNestedSelector", "parseSelectorWithCache", "isChildOfMixinRoot", "nextRule", "inlineMixin", "hasNonDeclsBeforeDecl", "mixInto", "mixIntoRule", "node", "nestFollowingDecls", "hasAnyDeclsAfter", "nested", "nextNode", "current", "sourcePathDiagnostics", "getSourcePath", "root", "diagnostics", "source", "getAlias", "symbol", "st_symbol_exports", "__export", "addSymbol", "diagnostics", "get", "getAll", "getAllByType", "hooks", "readableTypeMap", "reportRedeclare", "defaultFeatureFlags", "defaultHooks", "createFeature", "hooks", "type", "plugableRecord", "desc", "map", "key", "value", "NAMESPACES", "readableTypeMap", "createState", "clone", "dataKey", "plugableRecord", "diagnostics", "createDiagnosticReporter", "name", "hooks", "createFeature", "meta", "get", "type", "byNSFlat", "byType", "getAll", "ns", "getAllByType", "addSymbol", "context", "symbol", "node", "safeRedeclare", "localName", "byNS", "typeTable", "nsName", "reportRedeclare", "symbols", "flat", "collisions", "symbolDecl", "ast", "st_import_exports", "__export", "ImportTypeHook", "PseudoImport", "PseudoImportDecl", "StylablePublicApi", "createImportSymbol", "diagnostics", "getImportStatements", "hooks", "generalDiagnostics", "createDiagnosticReporter", "selector", "type", "name", "import_path", "import_imports_parser", "stripQuotation", "str", "filename2varname", "filename", "string2varname", "import_postcss_value_parser", "parseImportMessages", "createDiagnosticReporter", "errors", "propName", "name", "type", "ensureImportsMessages", "kind", "origin", "override", "createAtImportProps", "importObj", "named", "keyframes", "params", "namedParts", "getNamedImportParts", "keyFramesParts", "ensureModuleImport", "ast", "importPatches", "options", "diagnostics", "Diagnostics", "patches", "createImportPatches", "patch", "newImport", "handled", "node", "imported", "parseStImport", "processImports", "parsePseudoImport", "generateNamedValue", "defaultDecls", "namedDecls", "patchDecls", "ensureSingleDecl", "item", "hasDefinitions", "atRule", "rule", "createPseudoImportProps", "setImportObjectFrom", "importPath", "dirPath", "path", "parseModuleImportStatement", "context", "imports", "isCompRoot", "namedTyped", "impName", "impAsName", "fromExists", "decl", "stripQuotation", "typedMap", "namedMap", "parsePseudoImportNamed", "value", "handleNamedTokens", "postcssValueParser", "nodes", "pseudoImport", "decls", "prop", "i", "parts", "as", "keyframesParts", "defaultExport", "ops", "op", "patchBucket", "asName", "symbol", "currentSymbol", "tokens", "mainBucket", "typedBuckets", "token", "space", "spaceAfter", "isImportAs", "tryCollectImportsDeep", "resolver", "meta", "onImport", "depth", "request", "resolved", "UNIVERSAL_SYNTAX_DEFINITION", "AT_PROPERTY_DISCRIPTOR_LIST", "atPropertyValidationWarnings", "createDiagnosticReporter", "descriptorName", "descriptorType", "validateAtProperty", "atRule", "diagnostics", "name", "atPropertyValues", "node", "stripQuotation", "validateCustomPropertyName", "value", "generateScopedCSSVar", "namespace", "varName", "import_path", "PseudoImport", "PseudoImportDecl", "ImportTypeHook", "dataKey", "plugableRecord", "diagnostics", "parseImportMessages", "generalDiagnostics", "createDiagnosticReporter", "name", "as", "path", "error", "type", "hooks", "createFeature", "meta", "context", "imports", "dirContext", "node", "isImportStatement", "parsedImport", "parseStImport", "parsePseudoImport", "addImportSymbols", "atRule", "rule", "toRemove", "validateImports", "calcCssDepth", "StylablePublicApi", "stylable", "getImportStatements", "request", "defaultExport", "named", "keyframes", "cssDepth", "deepDependencies", "tryCollectImportsDeep", "depth", "data", "createImportSymbol", "importDef", "checkForInvalidAsUsage", "addSymbol", "handler", "localName", "importName", "local", "imported", "validateCustomPropertyName", "importObj", "entity", "foundUnsupportedNativeImport", "report", "origName", "resolvedSymbol", "namedDecl", "decl", "fromDecl", "getErrorText", "res", "st_namespace_exports", "__export", "defaultProcessNamespace", "diagnostics", "hooks", "parseNamespace", "setMetaNamespace", "import_path", "import_postcss_value_parser", "murmurhash3_32_gc", "key", "seed", "remainder", "bytes", "c1", "c2", "h1", "i", "k1", "h1b", "diagnostics", "createDiagnosticReporter", "dataKey", "plugableRecord", "hooks", "createFeature", "meta", "context", "atRule", "isSTNamespace", "isNamespace", "data", "diag", "match", "parseNamespace", "usedNativeNamespaceNodes", "node", "toRemove", "usedNativeNamespace", "nodes", "valueParser", "isInvalid", "namespace", "valueNode", "stripQuotation", "defaultProcessNamespace", "origin", "_source", "murmurhash3_32_gc", "setMetaNamespace", "resolveNamespace", "namespaces", "filename2varname", "path", "pathToSource", "length", "i", "st_global_exports", "__export", "diagnostics", "getGlobalRules", "hooks", "unwrapPseudoGlobals", "dataKey", "plugableRecord", "diagnostics", "createDiagnosticReporter", "hooks", "createFeature", "meta", "context", "node", "topSelectorIndex", "rule", "originalNode", "rules", "ruleData", "stringifySelector", "walkSelector", "isCompRoot", "data", "isGlobal", "parent", "parentData", "ast", "selectorAst", "parseSelectorWithCache", "unwrapPseudoGlobals", "inner", "getGlobalRules", "globalRules", "checkedRule", "collectedGlobals", "flattenFunctionalSelector", "st_scope_exports", "__export", "StylablePublicApi", "diagnostics", "hooks", "isStScopeStatement", "diagnostics", "hooks", "createFeature", "context", "atRule", "analyzeRule", "isStScopeStatement", "rule", "node", "toRemove", "flattenScope", "meta", "inferredSelectorMixin", "transformer", "selector", "inferredSelector", "ast", "remove", "StylablePublicApi", "stylable", "getStScope", "scopeSelector", "scopeNestedSelector", "parseSelectorWithCache", "current", "st_var_exports", "__export", "StylablePublicApi", "diagnostics", "get", "hooks", "parseVarsFromExpr", "resolveReferencedVarNames", "import_lodash", "import_postcss_value_parser", "import_postcss_value_parser", "valueDiagnostics", "createDiagnosticReporter", "node", "argIndex", "postcssValueParser", "getNamedArgs", "args", "_sourceIndex", "_sourceEndIndex", "clone", "stringifyFunction", "name", "parsedNode", "perserveQuotes", "getFormatterArgs", "allowComments", "reportWarning", "preserveQuotes", "argsResult", "currentArg", "currentNode", "checkEmptyArg", "i", "getStringValue", "nodes", "listOptions", "groupValues", "n", "x", "divType", "grouped", "current", "last", "validateAllowedNodesUntil", "untilType", "allowed", "strategies", "named", "mixinArgsGroup", "argsDivider", "argValue", "stringifyParam", "value", "CustomValueError", "message", "fallbackValue", "box", "type", "value", "flatValue", "boxString", "unbox", "boxed", "unboxPrimitives", "customValues", "node", "customValue", "cloneDeepWith", "v", "createStArrayCustomFunction", "createCustomValue", "customTypes", "boxPrimitive", "CustomValueStrategy", "args", "index", "createStMapCustomFunction", "stTypes", "deprecatedStFunctions", "fnNode", "pathArgs", "getFormatterArgs", "outputArray", "arg", "parsedArg", "postcssValueParser", "ct", "resolvedValue", "outputMap", "s", "getNamedArgs", "prop", "space", "valueNodes", "nonComments", "valueNode", "getStringValue", "processArgs", "createValue", "flattenValue", "getValue", "localTypeSymbol", "getFlatValue", "path", "obj", "fallbackNode", "stringifiedValue", "getBoxValue", "delimiter", "parts", "isCustomValue", "symbol", "isInPath", "extendPath", "name1", "source1", "name", "source", "safePathDelimiter", "StylableResolver", "fileProcessor", "requireModule", "moduleResolver", "cache", "context", "request", "entity", "resolvedPath", "key", "cacheKey", "error", "kind", "filePath", "directoryPath", "imported", "subtype", "res", "meta", "namespace", "st_symbol_exports", "jsModule", "importSymbol", "maybeImport", "path", "resolved", "symbol", "diagnostics", "resolvedSymbols", "stTypes", "deepResolved", "customValueSymbol", "isCustomValue", "css_class_exports", "validateClassResolveExtends", "css_keyframes_exports", "result", "resolveByNamespace", "css_layer_exports", "css_contains_exports", "nameOrSymbol", "isElement", "transformer", "reportError", "customSelector", "st_custom_selector_exports", "parsed", "current", "parent", "_kind", "extend", "decl", "findRule", "rule", "createSymbolResolverWithCache", "resolver", "symbols", "type", "import_path", "import_postcss_value_parser", "import_path", "import_css_selector_tokenizer", "processDeclarationFunctions", "decl", "onFunction", "transform", "ast", "node", "findFunction", "onFunctionNode", "level", "child", "isExternal", "url", "isUrl", "maybeUrl", "isAsset", "fixRelativeUrls", "ast", "originPath", "targetPath", "decl", "processDeclarationFunctions", "node", "isAsset", "url", "path", "assureRelativeUrlPrefix", "import_cssesc", "unescapeCSS", "text", "namespaceEscape", "name", "namespace", "cssesc", "StylableEvaluator", "options", "context", "data", "processDeclarationValue", "functionDiagnostics", "createDiagnosticReporter", "resolvedValue", "message", "name", "resolveArgumentsValue", "transformer", "meta", "diagnostics", "node", "variableOverride", "path", "cssVarsMapping", "resolvedArgs", "k", "evalDeclarationValue", "unescapeCSS", "resolver", "getResolvedSymbols", "value", "valueHook", "Diagnostics", "passedThrough", "args", "rootArgument", "initialNode", "evaluator", "resolvedSymbols", "parsedValue", "postcssValueParser", "parsedNode", "type", "st_var_exports", "stringifyFunction", "url", "sourceDir", "assureRelativeUrlPrefix", "formatter", "formatterArgs", "getFormatterArgs", "error", "css_custom_property_exports", "nativeFunctionsDic", "preserveQuotes", "outputValue", "topLevelType", "runtimeValue", "typeError", "n", "matchingType", "unbox", "CustomValueError", "e", "invalidNode", "getStringValue", "createSymbolResolverWithCache", "import_postcss_value_parser", "diagnostics", "generalDiagnostics", "createDiagnosticReporter", "name", "alternativeName", "cyclicChain", "s", "i", "args", "type", "varName", "names", "hooks", "createFeature", "context", "node", "rule", "isChildOfAtRule", "collectVarSymbols", "walkSelector", "cssVar", "_localName", "localSymbol", "getAllByType", "value", "postcssValueParser", "stripQuotation", "unknownUsedProps", "argNode", "toRemove", "resolved", "symbols", "noDaigContext", "Diagnostics", "symbol", "evaluated", "data", "evaluateValueCall", "exports", "topLevelType", "outputValue", "unbox", "get", "meta", "StylablePublicApi", "stylable", "topLevelDiagnostics", "getResolvedSymbols", "createSymbolResolverWithCache", "evaluator", "StylableEvaluator", "stVars", "computed", "localName", "resolvedVar", "runtimeValue", "computedStVar", "flatStVars", "stVar", "input", "path", "currentVars", "key", "innerInput", "boxString", "parseVarsFromExpr", "expr", "nameSet", "decl", "collectUrls", "warnOnDeprecatedCustomValues", "prev", "typeMatch", "addSymbol", "processDeclarationFunctions", "deprecatedStFunctions", "parsedNode", "stVarOverride", "passedThrough", "parsedArgs", "strategies", "x", "restArgs", "getStringValue", "refUniqID", "createUniqID", "handleCyclicValues", "resolvedSymbols", "resolvedVarSymbol", "possibleNonSTVarSymbol", "typeError", "argsAsString", "deepResolve", "importedType", "finalResolve", "reportUnsupportedSymbolInValue", "resolveReferencedVarNames", "initialName", "refNames", "varsToCheck", "checked", "contextualId", "refName", "resolve", "errorKind", "variable", "stringifyFunction", "source", "st_custom_selector_exports", "__export", "CUSTOM_SELECTOR_RE", "diagnostics", "getCustomSelector", "getCustomSelectorExpended", "getCustomSelectorNames", "getCustomSelectors", "hooks", "isScoped", "transformCustomSelectorInline", "import_css_selector_parser", "diagnostics", "createDiagnosticReporter", "selector", "dataKey", "plugableRecord", "CUSTOM_SELECTOR_RE", "hooks", "createFeature", "meta", "context", "atRule", "analyzeRule", "customSelector", "ast", "parseSelectorWithCache", "isScoped", "rule", "analyzed", "name", "customSelectors", "data", "inlined", "transformInlineCustomSelectorMap", "report", "unknownSelector", "node", "toRemove", "transformCustomSelectorInline", "selectorContext", "getCustomSelectorExpended", "mappedSelectorAst", "mappedContext", "inferredSelector", "getCustomSelector", "getCustomSelectors", "acc", "getCustomSelectorNames", "options", "transformInlineCustomSelectors", "st_custom_state_exports", "__export", "createBooleanStateClassName", "createStateWithParamClassName", "delimiters", "diagnostics", "hooks", "isTemplateState", "parsePseudoStates", "parseStateValue", "resolveStateParam", "validationErrors", "systemValidators", "transformPseudoClassToCustomState", "import_postcss_value_parser", "import_cssesc", "import_css_value_parser", "findAnything", "value", "startIndex", "options", "findValueAstNode", "findFatArrow", "amountToEql", "_eqlNode", "eqlNodeInspectAmount", "findLiteral", "nextNode", "isExactLiteral", "token", "name", "findNextClassNode", "index", "amountToDot", "_dotNode", "amountToName", "nameNode", "findCustomIdent", "findNextPseudoClassNode", "amountToColon", "nameOptions", "amountToCall", "callNode", "findNextCallNode", "findPseudoElementNode", "amountToSecondColon", "node", "valueAst", "check", "stopOnFail", "ignoreWhitespace", "ignoreComments", "stopOnMatch", "stateMiddleDelimiter", "booleanStateDelimiter", "stateWithParamDelimiter", "stateDiagnostics", "createDiagnosticReporter", "name", "type", "types", "validator", "args", "stateName", "defaultValue", "errors", "actualParam", "state", "template", "finalSelector", "param", "parsePseudoStates", "value", "decl", "diagnostics", "mappedStates", "ast", "postcssValueParser", "groupValues", "workingState", "stateDefinition", "stateDefault", "validateStateName", "resolveStateType", "resolveBooleanState", "node", "reservedFunctionalPseudoClasses", "parseStateValue", "stateDef", "amountTaken", "customIdentResult", "findCustomIdent", "amountToName", "nameNode", "findNextCallNode", "postcssStateValue", "stateMap", "paramType", "argsFirstNode", "argsFullValue", "collectStateArgsDef", "defineTemplateState", "argNode", "defineParamState", "templateDef", "stripQuotation", "paramFullDef", "paramTypeDef", "createStateParamDef", "templateStateType", "stateParamDef", "typeDef", "systemValidators", "stateType", "resolveArguments", "srcValue", "nodes", "collectedArg", "firstActualValue", "group", "listOptions", "validationErrors", "regex", "shouldContain", "length", "min", "max", "multipleOf", "options", "validators", "resolveParam", "validateDefinition", "validateValue", "res", "validatorMeta", "subValidator", "validationRes", "valid", "checkedValue", "minValue", "maxValue", "stringOptions", "isOneOf", "option", "validateRuleStateDefinition", "selector", "selectorNode", "meta", "resolver", "selectorAst", "parseSelectorWithCache", "selectorChunk", "className", "classMeta", "css_class_exports", "states", "stateParam", "isTemplateState", "validateStateArgument", "stateAst", "resolvedValidations", "transformPseudoClassToCustomState", "stateNode", "namespace", "stringifySelector", "convertToClass", "createBooleanStateClassName", "convertToInvalid", "convertTemplateState", "resolveStateValue", "cssesc", "createStateWithParamClassName", "resolveStateParam", "escape", "result", "paramStateDef", "resolvedParam", "getParamInput", "validateParam", "strippedParam", "transformMappedStateWithParam", "inputValue", "stateParamOutput", "targetSelectorStr", "firstSelector", "unexpectedSelector", "convertToSelector", "nodeContent", "evalDeclarationValue", "diagnostics", "stateDiagnostics", "hooks", "createFeature", "delimiters", "booleanStateDelimiter", "stateMiddleDelimiter", "stateWithParamDelimiter", "st_mixin_exports", "__export", "MixinType", "StylablePublicApi", "diagnostics", "hooks", "import_postcss_value_parser", "mixinHelperDiagnostics", "valueDiagnostics", "createDiagnosticReporter", "parseStMixin", "mixinNode", "strategy", "diagnostics", "emitStrategyDiagnostics", "ast", "postcssValueParser", "mixins", "reportWarning", "diagnostic", "options", "node", "strategies", "parseStPartialMixin", "report", "mixin", "import_postcss_value_parser", "import_path", "import_css_selector_parser", "MixinType", "diagnostics", "mixinHelperDiagnostics", "utilDiagnostics", "createDiagnosticReporter", "type", "name", "mixinType", "error", "symbolType", "readableTypeMap", "circularPaths", "argName", "hooks", "createFeature", "selectorContext", "node", "isMarker", "isStMixinMarker", "context", "ast", "transformer", "cssVarsMapping", "path", "rule", "appendMixins", "StylablePublicApi", "stylable", "meta", "expr", "Diagnostics", "resolveOptionalArgs", "resolvedSymbols", "mainNamespace", "analyzedMixins", "collectDeclMixins", "decl", "mixinSymbolName", "result", "data", "symbolKind", "mixRef", "argValue", "varMap", "resolveChain", "getCSSMixinRoots", "mixinRoot", "names", "collectOptionalArgs", "arg", "postcssValueParser", "scopeSelector", "nestSelector", "scopeNestedSelector", "cssPropertyMapping", "decls", "mixins", "collectRuleMixins", "mixin", "appendMixin", "mixinDecl", "paramSignature", "previousMixins", "parser", "parseStMixin", "parseStPartialMixin", "mixinRefSymbol", "get", "symbolName", "resolvedType", "partials", "r", "nonPartials", "isInPartial", "config", "checkRecursive", "handleCSSMixin", "resolvedMixin", "handleJSMixin", "e", "report", "mixDef", "mixinFunction", "stVarOverride", "res", "v", "cssObjectToAst", "isValidDeclaration", "mixinPath", "fixRelativeUrls", "mergeRules", "isPartial", "namedArgs", "overrideKeys", "optionalArgs", "roots", "resolved", "isRootMixin", "filterPartialMixinDecl", "resolvedArgs", "resolveArgumentsValue", "mixinMeta", "overrideArg", "root", "value", "varNames", "parseVarsFromExpr", "refName", "resolveReferencedVarNames", "contextMeta", "processMixinRoot", "createSubsetAst", "getCustomSelector", "regexp", "overrideSet", "size", "text", "parent", "css_class_exports", "__export", "StylablePublicApi", "addClass", "addDevRules", "checkForScopedNodeAfter", "createSymbol", "createWarningRule", "diagnostics", "disableDirectivesForClass", "extendTypedRule", "get", "getAll", "hooks", "namespaceClass", "parseStExtends", "validateClassScoping", "getOriginDefinition", "resolved", "r", "symbol", "namespaceDelimiter", "namespace", "name", "defaultGetPackageInfo", "defaultNamespaceBuilder", "prefix", "hashSalt", "paths", "packageInfo", "defaultNoMatchHandler", "strict", "ns", "stylesheetPath", "usedBy", "createNamespaceStrategy", "options", "hashFragment", "buildNamespace", "getPackageInfo", "handleNoMatch", "hashSeparator", "hashFn", "murmurhash3_32_gc", "normalizePath", "usedNamespaces", "stylesheetOriginPath", "buildNamespaceParams", "resultNs", "hashPart", "hashStr", "i", "finalNamespace", "hashSlice", "import_css_selector_parser", "import_path", "import_postcss_value_parser", "stPartDirectives", "diagnostics", "generalDiagnostics", "createDiagnosticReporter", "name", "key", "className", "directive", "alternative", "dataKey", "plugableRecord", "hooks", "createFeature", "meta", "context", "node", "rule", "stringifySelector", "addClass", "decl", "isDirectiveDeclaration", "handleDirectives", "resolvedSymbols", "locals", "localName", "resolved", "exportedClasses", "first", "symbol", "isOnlyClasses", "globalClasses", "namespace", "classNames", "unescapeCSS", "selectorContext", "originMeta", "resolver", "createSymbol", "getOriginDefinition", "validateRuleStateDefinition", "namespaceClass", "exports", "StylablePublicApi", "stylable", "localSymbol", "get", "getAll", "getAllByType", "input", "parts", "alias", "addSymbol", "wrapInGlobal", "globalMappedNodes", "convertToPseudoClass", "flatNode", "convertToSelector", "convertToClass", "namespaceEscape", "getNamespacedClass", "selector", "addDevRules", "getResolvedSymbols", "a", "b", "createWarningRule", "extendedNode", "scopedExtendedNode", "extendedFile", "extendingNode", "scopedExtendingNode", "extendingFile", "message", "validateClassScoping", "classSymbol", "locallyScoped", "reportUnscoped", "nodes", "index", "checkForScopedNodeAfter", "i", "disableDirectivesForClass", "classesDefinedWithAtSt", "type", "isSimpleSelector", "accType", "isSimple", "extendTypedRule", "parsePseudoStates", "parsed", "parseStExtends", "symbolName", "extendsRefSymbol", "getAlias", "globalSelectorAst", "parseStGlobal", "value", "typedRule", "ast", "postcssValueParser", "types", "args", "getNamedArgs", "parseSelectorWithCache", "css_type_exports", "__export", "addType", "createSymbol", "diagnostics", "get", "getAll", "hooks", "validateTypeScoping", "diagnostics", "generalDiagnostics", "createDiagnosticReporter", "name", "hooks", "createFeature", "context", "node", "rule", "_index", "_nodes", "stringifySelector", "addType", "selectorContext", "resolvedSymbols", "resolved", "resolvedClass", "createSymbol", "symbol", "meta", "getOriginDefinition", "namespaceClass", "get", "getAll", "getAllByType", "input", "parts", "isCompRoot", "alias", "addSymbol", "validateTypeScoping", "locallyScoped", "reportUnscoped", "nodes", "index", "checkForScopedNodeAfter", "css_pseudo_class_exports", "__export", "diagnostics", "hooks", "import_is_vendor_prefixed", "diagnostics", "createDiagnosticReporter", "name", "hooks", "createFeature", "context", "selectorContext", "inferredSelector", "node", "ruleOrAtRule", "scopeSelectorAst", "inferredState", "foundCustomState", "transformPseudoClassToCustomState", "createSymbol", "hasSubSelectors", "innerSelectors", "nestedContext", "prevNode", "nativePseudoClasses", "isVendorPrefixed", "css_custom_property_exports", "__export", "diagnostics", "get", "getRuntimeTypedDefinitionNames", "getTransformedName", "hooks", "scopeCSSVar", "GLOBAL_FUNC", "globalValueRegExp", "globalValue", "str", "globalValueFromFunctionNode", "funcNode", "unknownInput", "type", "value", "import_postcss_value_parser", "diagnostics", "atPropertyValidationWarnings", "createDiagnosticReporter", "name", "GLOBAL_FUNC", "dataKey", "plugableRecord", "hooks", "createFeature", "meta", "context", "symbolName", "symbol", "getAllByType", "validateCustomPropertyName", "importSymbol", "get", "addCSSProperty", "atRule", "isStylable", "global", "globalVarName", "globalValue", "stCustomGlobalProperty", "typedDefinitions", "validateAtProperty", "analyzeDeprecatedStGlobalCustomProperty", "decl", "analyzeDeclValueVarCalls", "node", "toRemove", "getResolvedSymbols", "customPropsMapping", "resolvedSymbols", "localVarName", "localSymbol", "resolve", "getTransformedName", "resolved", "propName", "cssVarsMapping", "value", "varWithPrefix", "stringifyFunction", "exports", "varName", "final", "alias", "addSymbol", "postcssValueParser", "validateAllowedNodesUntil", "args", "cssVarsByComma", "s", "entry", "getRuntimeTypedDefinitionNames", "generateScopedCSSVar", "scopeCSSVar", "resolver", "importedVar", "css_keyframes_exports", "__export", "diagnostics", "get", "getAll", "getKeyframesStatements", "hooks", "reservedKeyFrames", "import_postcss_value_parser", "reservedKeyFrames", "diagnostics", "createDiagnosticReporter", "GLOBAL_FUNC", "name", "path", "dataKey", "plugableRecord", "ImportTypeHook", "context", "localName", "importName", "importDef", "addKeyframes", "hooks", "createFeature", "meta", "atRule", "isInConditionalGroup", "keyframesAsts", "isStylable", "global", "globalName", "globalValue", "symbols", "getAllByType", "resolved", "resolvedSymbols", "symbol", "res", "resolve", "getTransformedName", "namespace", "decl", "parsed", "postcssValueParser", "node", "scoped", "exports", "getKeyframesStatements", "data", "statements", "get", "getAll", "ast", "safeRedeclare", "addKeyframesDeclaration", "addSymbol", "origin", "isImported", "current", "paths", "imports", "isFirstInPath", "isImportedBefore", "css_layer_exports", "__export", "diagnostics", "get", "getAll", "getDefinition", "hooks", "import_postcss_value_parser", "diagnostics", "createDiagnosticReporter", "GLOBAL_FUNC", "name", "path", "dataKey", "plugableRecord", "ImportTypeHook", "context", "localName", "importName", "importDef", "addLayer", "hooks", "createFeature", "meta", "atRule", "analyzeCSSImportLayer", "analyzeMetaData", "analyzedParams", "parseLayerParams", "symbols", "getAllByType", "resolved", "resolvedSymbols", "symbol", "res", "transformCSSImportLayer", "analyzed", "getTransformedName", "exports", "resolve", "get", "getAll", "getDefinition", "params", "report", "isStylable", "names", "globals", "readyForName", "multiple", "ast", "valueParser", "namedNodeRefs", "i", "node", "type", "value", "layers", "getDotSeparatedNames", "splittedLayer", "globalName", "globalValueFromFunctionNode", "source", "nodes", "transformedName", "modifiedNode", "lastIndex", "index", "importAtRule", "nestedNode", "_context", "namespace", "global", "definedSymbol", "CSSWideKeywords", "addSymbol", "css_contains_exports", "__export", "diagnostics", "get", "getAll", "getDefinition", "hooks", "import_postcss_value_parser", "diagnostics", "createDiagnosticReporter", "value", "name", "path", "GLOBAL_FUNC", "def", "dataKey", "plugableRecord", "ImportTypeHook", "context", "localName", "importName", "importDef", "addContainer", "hooks", "createFeature", "meta", "decl", "prop", "bucket", "parsed", "parseContainerDecl", "global", "atRule", "ast", "valueParser", "searching", "node", "globalValueFromFunctionNode", "invalidContainerNames", "symbols", "getAllByType", "resolved", "resolvedSymbols", "symbol", "res", "getTransformedName", "changed", "search", "resolve", "globalName", "wordNode", "exports", "containers", "namedNodeRefs", "noneFound", "checkNextName", "type", "word", "nextExpected", "nodes", "transformedName", "modifiedNode", "get", "getAll", "getDefinition", "definitions", "namespace", "forceDefinition", "isFirst", "addSymbol", "css_media_exports", "__export", "hooks", "hooks", "createFeature", "atRule", "context", "st_structure_exports", "__export", "createPartSymbol", "diagnostics", "experimentalMsg", "getPart", "getPartNames", "getParts", "hooks", "isStructureMode", "setPart", "valueMaps", "valueOnThisPrefix", "setFieldForDeprecation", "object", "fieldName", "options", "objectPrefix", "alternative", "enumerable", "fieldOnThis", "warnOnce", "newValue", "warnsFlag", "isWarnOn", "warnOnce", "warning", "ignoreDeprecationWarn", "action", "import_css_value_parser", "import_css_selector_parser", "diagnostics", "createDiagnosticReporter", "type", "src", "params", "extraValue", "experimentalMsg", "dataKey", "plugableRecord", "hooks", "createFeature", "context", "meta", "node", "isStAtRule", "warnOnce", "metaAnalysis", "rootSymbol", "addClass", "atRule", "analyzeRule", "analyzedDefToPartSymbol", "declaredClasses", "analyzed", "analyzeStAtRule", "disableDirectivesForClass", "extendedSymbol", "get", "extendTypedRule", "getAlias", "globalNode", "findGlobalPseudo", "mappedSelectorAst", "postcss_default", "parentSymbol", "getPartParentSymbol", "partName", "getPart", "srcWord", "partSymbol", "setPart", "getSymbolId", "mappedStates", "stateName", "isStructureMode", "customSelectors", "getCustomSelectors", "classes", "getAll", "rootClass", "rootId", "mapTo", "className", "classSymbol", "parentAnalyze", "createPartSymbol", "input", "parts", "states", "symbol", "parentId", "getParts", "name", "getPartNames", "isMatch", "result", "analyzedDefs", "atRuleFullParams", "def", "parseClassDefinition", "parsePseudoElementDefinition", "parseStateDefinition", "validateTopLevelClass", "validatePart", "validateState", "unexpectedValue", "arrowEnd", "i", "isExactLiteral", "validateNestingInMapping", "amountToActualValue", "findAnything", "checkAfter", "foundUnexpectedSelector", "index", "amountToName", "nameNode", "findNextPseudoClassNode", "parentRule", "amountToStateDef", "stateDef", "parseStateValue", "amountTaken", "amountToUnexpected", "nameInspectAmount", "findPseudoElementNode", "amountToMapping", "mappingOpenNode", "mapArrowInspectAmount", "findFatArrow", "selectorStr", "mappedSelectors", "parseSelectorWithCache", "filteredSelector", "filterCommentsAndSpaces", "amountToClass", "classNameNode", "classInspectedAmount", "findNextClassNode", "amountToExtends", "extendsNode", "extendInspectAmount", "_node", "nodes", "amountToFatArrow", "amountToExtendedClass", "amountToUnexpectedNode", "selector", "invalid", "passedActualSelector", "walkSelector", "afterName", "between", "features", "st_symbol_exports", "st_import_exports", "st_namespace_exports", "st_global_exports", "st_scope_exports", "st_var_exports", "st_custom_selector_exports", "st_custom_state_exports", "st_mixin_exports", "css_class_exports", "css_type_exports", "css_pseudo_class_exports", "css_custom_property_exports", "css_keyframes_exports", "css_layer_exports", "css_contains_exports", "st_structure_exports", "StylableMeta", "sourceAst", "diagnostics", "flags", "getSourcePath", "context", "hooks", "name", "StylableProcessor", "diagnostics", "Diagnostics", "resolveNamespace", "st_namespace_exports", "flags", "defaultFeatureFlags", "root", "StylableMeta", "st_structure_exports", "st_import_exports", "css_custom_property_exports", "rule", "isChildOfAtRule", "isStylable", "decl", "parent", "css_class_exports", "css_contains_exports", "st_custom_selector_exports", "st_symbol_exports", "analyzeRule", "isScoped", "originalNode", "atRule", "css_keyframes_exports", "css_layer_exports", "st_scope_exports", "processDeclarationFunctions", "node", "reportUnscoped", "selectorAst", "parseSelectorWithCache", "locallyScoped", "topSelectorIndex", "walkSelector", "nodeContext", "index", "nodes", "parents", "isInPseudoClassContext", "walkSkip", "st_global_exports", "st_var_exports", "knownPseudoClassesWithNestedSelectors", "css_type_exports", "generalDiagnostics", "stringifySelector", "processNamespace", "createStylableFileProcessor", "fileSystem", "onProcess", "resolveNamespace", "cssParser", "parse", "cache", "createDiagnostics", "flags", "defaultFeatureFlags", "cachedProcessFile", "from", "content", "StylableProcessor", "resolvedPath", "import_is_vendor_prefixed", "isEqual", "value1", "value2", "i", "keys1", "keys2", "key", "import_css_selector_parser", "setFieldForDeprecation", "Rule", "getRuleScopeSelector", "rule", "ignoreDeprecationWarn", "transformerDiagnostics", "createDiagnosticReporter", "name", "StylableTransformer", "options", "StylableResolver", "createSymbolResolverWithCache", "StylableEvaluator", "meta", "context", "st_import_exports", "st_global_exports", "st_var_exports", "validateScopes", "result", "ast", "metaExports", "stVarOverride", "path", "mixinTransform", "inferredSelectorMixin", "evaluator", "prevStVarOverride", "transformContext", "transformResolveOptions", "prepareAST", "cssClassResolve", "css_class_exports", "stVarResolve", "keyframesResolve", "css_keyframes_exports", "layerResolve", "css_layer_exports", "containsResolve", "css_contains_exports", "cssVarsMapping", "css_custom_property_exports", "handleAtRule", "atRule", "css_media_exports", "st_scope_exports", "st_custom_selector_exports", "handleDeclaration", "decl", "validateCustomPropertyName", "node", "isChildOfAtRule", "currentParent", "selector", "inferredSelector", "lastPassParams", "st_mixin_exports", "originMeta", "selectorNode", "inferredNestSelector", "inferredMixinSelector", "unwrapGlobals", "parseSelectorWithCache", "rule", "targetSelectorAst", "stringifySelector", "selectorAst", "selectorStr", "selectorNest", "selectorMixin", "ScopeContext", "type", "resolved", "InferredSelector", "selectorList", "compoundNode", "css_type_exports", "targetAst", "i", "transformerContext", "inferredElement", "nativePseudoElements", "isVendorPrefixed", "css_pseudo_class_exports", "transformer", "transformedScopes", "scope", "len", "ruleReports", "code", "message", "severity", "word", "removeInitialCompoundMarker", "structureMode", "hadCompoundStart", "compoundedSelector", "first", "matchNode", "_InferredSelector", "api", "resolve", "partResolve", "newSet", "searchedName", "collectedStates", "resolvedCount", "expectedIntersectionCount", "addInferredState", "state", "existing", "isEqual", "resolvedContext", "resolvedFoundNames", "symbol", "states", "resultStates", "InferredState", "isFirstInSelector", "experimentalSelectorInference", "collectedElements", "checked", "addInferredElement", "inferred", "selectors", "item", "startIndex", "st_structure_exports", "cacheContext", "uniqueId", "partDef", "cloneSelector", "r", "createCombinatorSelector", "internalContext", "customAstSelectors", "resolvedPart", "resolvedBaseSymbol", "getOriginDefinition", "nodes", "classNode", "resultElements", "InferredElement", "target", "targetBaseElementSymbol", "tested", "testedBaseElementSymbol", "SelectorMultiplier", "selectorIndex", "nodeIndex", "targetSelectors", "insertionPoints", "duplicationList", "added", "replaceSelector", "originSelector", "dupSelector", "addedSelector", "_ScopeContext", "resolver", "ruleOrAtRule", "scopeSelectorAst", "inferredSelectorNest", "inferredSelectorContext", "inferredContext", "isFirstNode", "selectorContext", "ctx", "transformedScope", "getRuleScopeSelector", "currentCompoundSelector", "stScopeSelectorCompounded", "scopeNode", "toRemove", "input", "st_namespace_exports", "removeOrNode", "enhanced_resolve_alias_default", "bundleSafeRequireExtensions", "extensions", "resolverContext", "createDefaultResolver", "fileSystem", "resolveOptions", "eResolver", "enhanced_resolve_alias_default", "directoryPath", "request", "res", "visitMetaCSSDependencies", "meta", "resolver", "visited", "q", "depth", "index", "items", "imported", "res", "resolvedPath", "Stylable", "config", "st_import_exports", "st_scope_exports", "st_var_exports", "st_mixin_exports", "css_class_exports", "Diagnostics", "createDefaultResolver", "parse", "defaultFeatureFlags", "createStylableFileProcessor", "meta", "dependencies", "dependency", "visitMetaCSSDependencies", "filter", "key", "cacheEntity", "requireModule", "resolverCache", "resolvePath", "StylableResolver", "resolveNamespace", "StylableProcessor", "options", "StylableTransformer", "pathOrMeta", "selector", "r", "prop", "css_custom_property_exports", "value", "decl", "root", "rule", "ast", "fullPath", "overrideSrc", "directoryPath", "request", "noCollisionNamespace", "prefix", "usedNamespaces", "namespace", "stylesheetPath", "ns", "used", "generateStylableJSModuleSource", "moduleOptions", "injectOptions", "namespace", "imports", "jsExports", "moduleType", "runtimeRequest", "varType", "header", "footer", "classes", "keyframes", "layers", "containers", "stVars", "vars", "exportKind", "moduleRequest", "runtimeImport", "runtimeExecuteInject", "from", "defaultImport", "request", "importInjectCSS", "id", "css", "cssCode", "depthCode", "depth", "runtimeId", "out"]
}
