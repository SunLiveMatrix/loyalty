"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const loader_utils_1 = require("./loader-utils");
const index_internal_1 = require("@stylable/core/dist/index-internal");
function StylableWebpackLoader(source) {
    const { meta, exports } = this.stylable.transform(this.stylable.analyze(this.resourcePath, source));
    const { urls, imports, buildDependencies, unusedImports, cssDepth } = (0, loader_utils_1.getImports)(this.stylable, meta, this.stylable.projectRoot, this.assetFilter, this.assetsMode, this.includeGlobalSideEffects);
    for (const dep of buildDependencies) {
        this.addDependency(dep);
    }
    (0, index_internal_1.emitDiagnostics)(this, meta, this.diagnosticsMode, this.resourcePath);
    const varType = this.target === 'oldie' ? 'var' : 'const';
    this.flagStylableModule({
        css: meta.targetAst.toString(),
        globals: meta.globals,
        exports,
        namespace: meta.namespace,
        urls,
        unusedImports,
        cssDepth,
        type: meta.type,
    });
    /**
     * NOTICE: order of replacements is coupled with "webpack-entities.ts"
     * replacement is done from bottom->top.
     */
    return `
${imports.join('\n')}
export ${varType} namespace = ${(0, loader_utils_1.getReplacementToken)('namespace')};
export ${varType} classes = ${(0, loader_utils_1.getReplacementToken)('classes')};
export ${varType} keyframes = ${(0, loader_utils_1.getReplacementToken)('keyframes')}; 
export ${varType} layers = ${(0, loader_utils_1.getReplacementToken)('layers')};
export ${varType} containers = ${(0, loader_utils_1.getReplacementToken)('containers')};
export ${varType} stVars = ${(0, loader_utils_1.getReplacementToken)('stVars')}; 
export ${varType} vars = ${(0, loader_utils_1.getReplacementToken)('vars')}; 
export ${varType} cssStates = ${(0, loader_utils_1.getReplacementToken)('stc')};
export ${varType} style = ${(0, loader_utils_1.getReplacementToken)('sts')};
export ${varType} st = ${(0, loader_utils_1.getReplacementToken)('st')};
/* JS_INJECT */
if(import.meta.webpackHot /* HMR */) { import.meta.webpackHot.accept();}
`;
}
exports.default = StylableWebpackLoader;
//# sourceMappingURL=loader.js.map