import type { SelectorList, Selector, ImmutableSelector, ImmutableSelectorList } from '../ast-types';
export interface GroupCompoundOptions {
    splitPseudoElements?: boolean;
    deep?: boolean;
}
export declare function groupCompoundSelectors<AST extends Selector>(input: AST, options?: GroupCompoundOptions): Selector;
export declare function groupCompoundSelectors<AST extends ImmutableSelector>(input: AST, options?: GroupCompoundOptions): ImmutableSelector;
export declare function groupCompoundSelectors<AST extends SelectorList>(input: AST, options?: GroupCompoundOptions): SelectorList;
export declare function groupCompoundSelectors<AST extends ImmutableSelectorList>(input: AST, options?: GroupCompoundOptions): ImmutableSelectorList;
export declare function splitCompoundSelectors<AST extends Selector>(input: AST): Selector;
export declare function splitCompoundSelectors<AST extends ImmutableSelector>(input: AST): ImmutableSelector;
export declare function splitCompoundSelectors<AST extends SelectorList>(input: AST): SelectorList;
export declare function splitCompoundSelectors<AST extends ImmutableSelectorList>(input: AST): ImmutableSelectorList;
//# sourceMappingURL=compound.d.ts.map