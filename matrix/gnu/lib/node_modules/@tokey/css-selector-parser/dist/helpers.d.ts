import type { CSSSelectorToken } from './tokenizer';
import type { Combinator, Comment, Selector, Nth, NamespacedNode, SelectorList, SelectorNode } from './ast-types';
import { Token } from '@tokey/core';
export declare function createEmptySelector(): Selector;
export declare function createEmptyNth(): Nth;
export declare function createCombinatorAst({ value, type, start, end, }: CSSSelectorToken & Token<'space' | '+' | '>' | '~'>): Combinator;
export declare function createCommentAst({ value, start, end }: CSSSelectorToken): Comment;
export declare function isCombinatorToken(token: CSSSelectorToken): token is Token<'space' | '+' | '>' | '~'>;
export declare function isNamespacedToken(token: CSSSelectorToken): token is Token<'text' | '*'>;
export declare function isNamespacedAst(token: SelectorNode): token is NamespacedNode;
export declare function ensureSelector(selectors: SelectorList, startToken: CSSSelectorToken): Selector;
export declare function trimCombinators(selector: Selector): void;
//# sourceMappingURL=helpers.d.ts.map