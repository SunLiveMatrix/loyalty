"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.stringifyCSSValue = void 0;
function stringifyCSSValue(ast) {
    if (!Array.isArray(ast)) {
        return stringifyNode(ast);
    }
    let result = ``;
    for (const node of ast) {
        result += stringifyNode(node);
    }
    return result;
}
exports.stringifyCSSValue = stringifyCSSValue;
function stringifyNode(node) {
    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument
    return stringifyByType[node.type]?.(node) || ``;
}
const stringifyByType = {
    space: ({ before, value, after }) => before + value + after,
    literal: ({ before, value, after }) => before + value + after,
    'css-wide-keyword': ({ value }) => value,
    invalid: ({ value }) => value,
    comment: ({ value }) => value,
    call: ({ value, before, after, args }) => `${value}(${before}${stringifyCSSValue(args)}${after})`,
    '<custom-ident>': ({ value }) => value,
    '<dashed-ident>': ({ value }) => value,
    '<string>': ({ value }) => value,
    '<number>': ({ value }) => value,
    '<integer>': ({ value }) => value,
    '<length>': ({ value, unit }) => value + unit,
    '<percentage>': ({ value, unit }) => value + unit,
    '<angle>': ({ value, unit }) => value + unit,
    '<time>': ({ value, unit }) => value + unit,
    '<frequency>': ({ value, unit }) => value + unit,
    '<resolution>': ({ value, unit }) => value + unit,
    '<flex>': ({ value, unit }) => value + unit,
    'unknown-unit': ({ value, unit }) => value + unit,
    '<color>': ({ value }) => value,
};
//# sourceMappingURL=value-stringify.js.map