import type { PackageJson } from 'type-fest';
import { INpmPackage } from './npm-package';
export interface ResolveWorkspacePackagesHost {
    readFileSync(filePath: string, encoding: 'utf8'): string;
    readdirSync(directoryPath: string, options: {
        withFileTypes: true;
    }): Iterable<{
        name: string;
        isFile(): boolean;
        isDirectory(): boolean;
    }>;
    dirname(path: string): string;
    relative(from: string, to: string): string;
    join(...segments: string[]): string;
}
export declare function resolveWorkspacePackages(basePath: string, workspaces: string[], host: ResolveWorkspacePackagesHost): INpmPackage[];
export declare function extractPackageLocations(workspaces: PackageJson['workspaces']): string[];
export declare function deepFindFilesSync(directoryPath: string, filterFile: ((fileName: string, filePath: string) => boolean) | undefined, filterDirectory: ((directoryName: string, directoryPath: string) => boolean) | undefined, host: ResolveWorkspacePackagesHost): Generator<string>;
//# sourceMappingURL=workspaces.d.ts.map