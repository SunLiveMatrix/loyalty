#!/usr/bin/env node
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const fs_1 = __importDefault(require("fs"));
const path_1 = require("path");
const yargs_1 = __importDefault(require("yargs"));
const code_mods_1 = require("./code-mods/code-mods");
const load_codemods_1 = require("./code-mods/load-codemods");
const logger_1 = require("./logger");
const argv = yargs_1.default
    .option('rootDir', {
    alias: 'd',
    type: 'string',
    description: 'root directory of a project',
    default: process.cwd(),
    defaultDescription: 'current working directory',
})
    .option('mods', {
    alias: 'm',
    type: 'array',
    string: true,
    description: 'array of builtin codemods to execute',
    default: [],
    choices: [...load_codemods_1.registeredMods.keys()],
})
    .option('external', {
    alias: 'e',
    type: 'array',
    string: true,
    description: 'array of external codemod to execute',
    default: [],
})
    .option('require', {
    alias: 'r',
    type: 'array',
    string: true,
    description: 'require hooks',
    default: [],
})
    .alias('h', 'help')
    .help()
    .strict()
    .parseSync();
const { mods, rootDir: rawRootDir, require: requires, external } = argv;
const rootDir = (0, path_1.resolve)(rawRootDir);
// execute all require hooks before running the CLI build
for (const request of requires) {
    require(request);
}
const log = (0, logger_1.createLogger)((_, ...messages) => console.log('[CodeMod]', ...messages), () => console.clear());
const loadedMods = new Set();
(0, load_codemods_1.loadExternalCodemods)(external, rootDir, loadedMods, log);
(0, load_codemods_1.loadBuiltInCodemods)(mods, loadedMods, log);
if (loadedMods.size !== mods.length + external.length) {
    log(`Not all codemods has been found. Bail execution.`);
    process.exitCode = 1;
}
else {
    (0, code_mods_1.codeMods)({
        extension: '.st.css',
        fs: fs_1.default,
        log,
        mods: loadedMods,
        rootDir,
    });
}
//# sourceMappingURL=cli-codemod.js.map