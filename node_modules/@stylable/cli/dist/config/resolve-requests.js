"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.resolveNpmRequests = void 0;
const node_1 = __importDefault(require("@file-services/node"));
const resolve_directory_context_1 = require("@wixc3/resolve-directory-context");
const resolveNpmRequests = (entities, { rootDir }) => {
    const entitiesMap = new Map();
    const packages = new Set();
    for (const entity of entities) {
        const { request } = entity;
        const workspacePackages = (0, resolve_directory_context_1.resolveWorkspacePackages)(rootDir, [request], node_1.default);
        if (!workspacePackages.length) {
            throw new Error(`Stylable CLI config can not resolve project request "${request}"`);
        }
        for (const pkg of workspacePackages) {
            const existingEntity = entitiesMap.get(pkg.displayName);
            // adding the npm package once to keep the original package order and to avoid duplicates
            if (existingEntity) {
                // validate duplicate requests, e.g. "packages/*" twice
                if (existingEntity.request === request) {
                    throw new Error(`Stylable CLI config can not have a duplicate project requests "${request}".`);
                }
            }
            else {
                packages.add(pkg);
            }
            // adding to entities map and overriding the correct package's entity if exists
            entitiesMap.set(pkg.displayName, entity);
        }
    }
    return (0, resolve_directory_context_1.sortPackagesByDepth)(Array.from(packages)).map((pkg) => ({
        projectRoot: pkg.directoryPath,
        options: entitiesMap.get(pkg.displayName).options,
    }));
};
exports.resolveNpmRequests = resolveNpmRequests;
//# sourceMappingURL=resolve-requests.js.map