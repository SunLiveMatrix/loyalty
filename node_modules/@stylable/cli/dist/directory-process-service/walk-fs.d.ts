import type { IFileSystem } from '@file-services/types';
export interface DirectoryItem {
    type: 'file' | 'directory';
    path: string;
    name: string;
    relativePath: string;
}
/**
 * Deeply iterate into a directory's child directories/files.
 * Provides `DirectoryItem` instances for each item, giving parents before leafs.
 *
 * @param directoryPath directory to iterate into.
 * @param basePath base directory to compute relative paths from. defaults to `directoryPath`.
 */
export declare function directoryDeepChildren(fs: IFileSystem, directoryPath: string, filterItem?: (item: DirectoryItem) => boolean, basePath?: string): AsyncGenerator<DirectoryItem, void, unknown>;
//# sourceMappingURL=walk-fs.d.ts.map