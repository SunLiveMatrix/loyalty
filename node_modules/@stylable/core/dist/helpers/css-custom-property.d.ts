import type * as postcss from 'postcss';
import { Diagnostics } from '../diagnostics';
interface AtPropertyValidationResponse {
    valid: boolean;
}
export declare const atPropertyValidationWarnings: {
    MISSING_REQUIRED_DESCRIPTOR: {
        (descriptorName: string): import("../diagnostics").DiagnosticBase;
        code: string;
        severity: import("../diagnostics").DiagnosticSeverity;
    };
    MISSING_REQUIRED_INITIAL_VALUE_DESCRIPTOR: {
        (): import("../diagnostics").DiagnosticBase;
        code: string;
        severity: import("../diagnostics").DiagnosticSeverity;
    };
    INVALID_DESCRIPTOR_TYPE: {
        (descriptorType: string): import("../diagnostics").DiagnosticBase;
        code: string;
        severity: import("../diagnostics").DiagnosticSeverity;
    };
    INVALID_DESCRIPTOR_NAME: {
        (descriptorName: string): import("../diagnostics").DiagnosticBase;
        code: string;
        severity: import("../diagnostics").DiagnosticSeverity;
    };
};
export declare function validateAtProperty(atRule: postcss.AtRule, diagnostics: Diagnostics): AtPropertyValidationResponse;
export declare function validateCustomPropertyName(value: string): boolean;
export declare function generateScopedCSSVar(namespace: string, varName: string): string;
export {};
//# sourceMappingURL=css-custom-property.d.ts.map