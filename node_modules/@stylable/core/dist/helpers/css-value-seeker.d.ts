import type { BaseAstNode, Call, CustomIdent, Literal } from '@tokey/css-value-parser';
export interface FindAstOptions {
    stopOnFail: boolean;
    ignoreWhitespace: boolean;
    ignoreComments: boolean;
    stopOnMatch?: (node: BaseAstNode, index: number, nodes: BaseAstNode[]) => boolean;
    name?: string;
}
type FindAstResult<T extends BaseAstNode> = [
    takenNodeAmount: number,
    matchedNode: T | undefined,
    inspectedAmount: number
];
export declare function findAnything(value: BaseAstNode[], startIndex: number, options?: Partial<FindAstOptions>): FindAstResult<BaseAstNode>;
export declare function findFatArrow(value: BaseAstNode[], startIndex: number, options?: Partial<FindAstOptions>): FindAstResult<Literal & {
    value: '>';
}>;
export declare function isExactLiteral<T extends string>(token: BaseAstNode, name: T): token is Literal & {
    value: '>';
};
export declare function findNextClassNode(value: BaseAstNode[], startIndex: number, options?: Partial<FindAstOptions>): FindAstResult<CustomIdent>;
export declare function findNextPseudoClassNode(value: BaseAstNode[], startIndex: number, options?: Partial<FindAstOptions>): FindAstResult<CustomIdent | Call>;
export declare function findPseudoElementNode(value: BaseAstNode[], startIndex: number, options?: Partial<FindAstOptions>): FindAstResult<CustomIdent | Call>;
export declare function findLiteral(value: BaseAstNode[], startIndex: number, options?: Partial<FindAstOptions>): FindAstResult<Literal>;
export declare function findCustomIdent(value: BaseAstNode[], startIndex: number, options?: Partial<FindAstOptions>): FindAstResult<CustomIdent>;
export declare function findNextCallNode(value: BaseAstNode[], startIndex: number, options?: Partial<FindAstOptions>): FindAstResult<Call>;
export declare function findValueAstNode<T extends BaseAstNode>(valueAst: BaseAstNode[], startIndex: number, check: (node: BaseAstNode) => boolean, { stopOnFail, ignoreWhitespace, ignoreComments, stopOnMatch, }?: Partial<FindAstOptions>): FindAstResult<T>;
export {};
//# sourceMappingURL=css-value-seeker.d.ts.map