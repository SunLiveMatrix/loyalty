"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.findFiles = void 0;
function findFiles(fs, join, relative, rootDirectory, ext, blacklist, useRelative = false) {
    const errors = [];
    const result = new Set();
    const folders = [rootDirectory];
    while (folders.length) {
        const current = folders.pop();
        try {
            fs.readdirSync(current, { withFileTypes: true }).forEach((item) => {
                if (blacklist.has(item.name)) {
                    return;
                }
                const itemFullPath = join(current, item.name);
                try {
                    if (item.isDirectory()) {
                        folders.push(itemFullPath);
                    }
                    else if (item.isFile() && itemFullPath.endsWith(ext)) {
                        result.add(useRelative ? relative(rootDirectory, itemFullPath) : itemFullPath);
                    }
                }
                catch (e) {
                    errors.push(e);
                }
            });
        }
        catch (e) {
            errors.push(e);
        }
    }
    return { result, errors };
}
exports.findFiles = findFiles;
//# sourceMappingURL=find-files.js.map