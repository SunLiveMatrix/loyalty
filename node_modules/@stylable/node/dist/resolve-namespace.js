"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.resolveNamespace = exports.createNamespaceStrategyNode = exports.packageJsonLookupCache = exports.resolveNamespaceFactory = void 0;
const core_1 = require("@stylable/core");
const path_1 = require("path");
const find_package_json_1 = require("./find-package-json");
function resolveNamespaceFactory(hashSalt = '', prefix = '', options = {}) {
    return createNamespaceStrategyNode({ hashSalt, prefix, ...options });
}
exports.resolveNamespaceFactory = resolveNamespaceFactory;
exports.packageJsonLookupCache = new Map();
function createNamespaceStrategyNode(options = {}) {
    return (0, core_1.createNamespaceStrategy)({
        normalizePath(packageRoot, stylesheetPath) {
            return (0, path_1.relative)(packageRoot, stylesheetPath).replace(/\\/g, '/');
        },
        getPackageInfo: (stylesheetPath) => {
            const configPath = (0, find_package_json_1.findPackageJson)((0, path_1.dirname)(stylesheetPath), exports.packageJsonLookupCache)?.packageJsonPath;
            if (!configPath) {
                throw new Error(`Could not find package.json for ${stylesheetPath}`);
            }
            const config = require(configPath);
            return {
                name: config.name,
                version: config.version,
                dirPath: (0, path_1.dirname)(configPath),
            };
        },
        handleNoMatch(strict, ns, stylesheetPath, usedBy) {
            return strict ? (0, core_1.defaultNoMatchHandler)(strict, ns, stylesheetPath, usedBy) : ns;
        },
        hashSalt: '',
        hashFragment: 'full',
        hashSeparator: '',
        strict: false,
        ...options,
    });
}
exports.createNamespaceStrategyNode = createNamespaceStrategyNode;
exports.resolveNamespace = createNamespaceStrategyNode();
//# sourceMappingURL=resolve-namespace.js.map