"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.color = exports.call = exports.resolution = exports.frequency = exports.time = exports.flex = exports.percentage = exports.angle = exports.length = exports.unknownUnit = exports.number = exports.integer = exports.string = exports.dashedIdent = exports.customIdent = exports.comment = exports.space = exports.cssWideKeyword = exports.literal = exports.invalid = void 0;
/////////////////////
const invalid = (value) => ({
    start: 0,
    end: 0,
    value: ``,
    ...value,
    type: `invalid`,
});
exports.invalid = invalid;
const literal = (value) => ({
    start: 0,
    end: 0,
    before: ``,
    after: ``,
    value: ``,
    ...value,
    type: `literal`,
});
exports.literal = literal;
const cssWideKeyword = (value) => ({
    start: 0,
    end: 0,
    value: `initial`,
    ...value,
    type: `css-wide-keyword`,
});
exports.cssWideKeyword = cssWideKeyword;
const space = (value) => ({
    start: 0,
    end: 0,
    before: ``,
    after: ``,
    value: ` `,
    ...value,
    type: `space`,
});
exports.space = space;
const comment = (value) => ({
    start: 0,
    end: 0,
    before: ``,
    after: ``,
    value: ``,
    ...value,
    type: `comment`,
});
exports.comment = comment;
const customIdent = (value) => ({
    start: 0,
    end: 0,
    value: ``,
    ...value,
    type: `<custom-ident>`,
});
exports.customIdent = customIdent;
const dashedIdent = (value) => ({
    start: 0,
    end: 0,
    value: `-`,
    ...value,
    type: `<dashed-ident>`,
});
exports.dashedIdent = dashedIdent;
const string = (value) => ({
    start: 0,
    end: 0,
    value: `""`,
    ...value,
    type: `<string>`,
});
exports.string = string;
const integer = (value) => ({
    start: 0,
    end: 0,
    value: `0`,
    ...value,
    type: `<integer>`,
});
exports.integer = integer;
const number = (value) => ({
    start: 0,
    end: 0,
    value: `0`,
    ...value,
    type: `<number>`,
});
exports.number = number;
const unknownUnit = (value) => ({
    start: 0,
    end: 0,
    value: `0`,
    unit: ``,
    integer: false,
    ...value,
    type: `unknown-unit`,
});
exports.unknownUnit = unknownUnit;
const length = (value) => ({
    start: 0,
    end: 0,
    value: `0`,
    integer: false,
    ...value,
    type: `<length>`,
});
exports.length = length;
const angle = (value) => ({
    start: 0,
    end: 0,
    value: `0`,
    integer: false,
    ...value,
    type: `<angle>`,
});
exports.angle = angle;
const percentage = (value) => ({
    start: 0,
    end: 0,
    value: `0`,
    unit: `%`,
    integer: false,
    ...value,
    type: `<percentage>`,
});
exports.percentage = percentage;
const flex = (value) => ({
    start: 0,
    end: 0,
    value: `0`,
    unit: `fr`,
    integer: false,
    ...value,
    type: `<flex>`,
});
exports.flex = flex;
const time = (value) => ({
    start: 0,
    end: 0,
    value: `0`,
    integer: false,
    ...value,
    type: `<time>`,
});
exports.time = time;
const frequency = (value) => ({
    start: 0,
    end: 0,
    value: `0`,
    integer: false,
    ...value,
    type: `<frequency>`,
});
exports.frequency = frequency;
const resolution = (value) => ({
    start: 0,
    end: 0,
    value: `0`,
    integer: false,
    ...value,
    type: `<resolution>`,
});
exports.resolution = resolution;
const call = (value) => ({
    start: 0,
    end: 0,
    value: ``,
    args: value.args || [],
    before: ``,
    after: ``,
    ...value,
    type: `call`,
});
exports.call = call;
const color = (value) => ({
    start: 0,
    end: 0,
    value: `#000000`,
    ...value,
    type: `<color>`,
});
exports.color = color;
//# sourceMappingURL=ast-types.js.map